{"version":3,"sources":["editorObjects/Editor.tsx","editorObjects/Point.ts","editorObjects/Bead.ts","components/colors.ts","editorObjects/Line.ts","immerReducers/BeadSnapperImmerReducer.tsx","immerReducers/DraggableOperationsImmerReducer.tsx","immerReducers/PersistImmerReducer.tsx","immerReducers/ChangeEditorModeImmerReducer.tsx","immerReducers/MainImmerReducer.tsx","immerReducers/MouseSelectionImmerReducer.tsx","immerReducers/ToolbarImmerReducer.tsx","store.tsx","components/Toolbar/EditorModes.tsx","components/operations/MapValuesToCss.tsx","components/Line/StraightLine.tsx","components/Line/AddLineMode.tsx","components/Toolbar/EditorChangeState.tsx","components/operations/MouseSelection.tsx","components/Bead/MouseSelectionBeads.tsx","components/Line/MouseSelectionLines.tsx","components/Bead/DisplayBead.tsx","components/Bead/DisplayBeads.tsx","components/Line/SelectionStraightLine.tsx","components/Line/SelectedStraightLine.tsx","components/Line/DisplayLine.tsx","components/Line/DraggableLines.tsx","components/Line/DisplaySimpleLine.tsx","components/Line/DisplayLines.tsx","components/operations/DisplayGroupLines.tsx","components/operations/getGroupPositionFromLines.ts","components/operations/DisplayLinesGroup.tsx","components/operations/DisplayGroupBeads.tsx","components/operations/getGroupPositionFromBeads.ts","components/operations/DisplayBeadsGroup.tsx","components/operations/GroupSelectionPlaceholder.tsx","components/Toolbar/ui/FieldBeadPreview.tsx","components/Toolbar/ui/ToolbarField.tsx","components/Toolbar/ui/ToolbarFieldSet.tsx","components/Toolbar/ui/FieldColorPicker.tsx","components/Toolbar/ui/FieldColor.tsx","components/Toolbar/ui/FieldsetColor.tsx","components/Toolbar/ui/FieldBeadTypePicker.tsx","components/Toolbar/ui/FieldsetBeadType.tsx","components/Toolbar/ui/FieldSlider.tsx","components/Toolbar/ui/FieldCheckbox.tsx","components/Toolbar/ui/FieldsetBeadSpacing.tsx","components/Toolbar/ui/FieldsetBeadCount.tsx","components/Toolbar/ui/FieldSliderWithLabel.tsx","components/Toolbar/ui/FieldsetSize.tsx","components/Toolbar/ui/FieldDeleteAndCopy.tsx","components/Toolbar/ui/FieldsetBeadRotate.tsx","components/Toolbar/Modes/ToolbarEditLines.tsx","components/Toolbar/Modes/ToolbarEditBeads.tsx","components/Toolbar/Modes/ToolbarAddLine.tsx","components/Toolbar/Modes/ToolbarIdle.tsx","components/Editor.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BeadTypes","EditorMode","buildPoint","x","y","immerable","normalize","point","length","Math","sqrt","getLength","useLen","scale","scalar","add","getDistanceBetweenPoints","start","end","getRotate","atan2","contain","p1","p2","p","buildBead","props","defaults","id","generate","position","type","BasicEllipse","rotate","color","height","width","keepAspectRatio","merge","buildLine","__defaults","beadIds","settings","beadsCount","beadsAutoCount","beadsSpacing","beadsAutoSpacing","defaultBead","BeadSnapperImmerReducer","lineId","currentLine","this","draftState","appData","lines","offset","size","len","count","floor","currentCount","remainingCount","i","ui","lineSettings","bead","beads","push","arrLen","lastItemBeadId","splice","currentDistance","forEach","beadId","newPosition","startX","startY","endX","endY","distance","getPointFromStartLine","beadWidth","ImmerReducer","DraggableOperationsImmerReducer","line","mode","EditLines","updateBeadsPositions","saveInfo","saved","key","data","console","log","deltaX","deltaY","Object","keys","selectedLinesIds","selectedLinesIdsCount","action_onClickLine","selectedBeadsIds","selectedBeadsIdsCount","PersistImmerReducer","window","readedData","localStorage","getItem","cached","JSON","parse","currBead","currLine","info","setItem","stringify","ChangeEditorModeImmerReducer","clearSelectedBeads","clearSelectedLines","newEditorMode","newValue","MainImmerReducer","MouseSelectionImmerReducer","mouseSelection","isDragStarted","isDragged","abs","min","max","selectedIds","newIds","p3","difference","ToolbarImmerReducer","deg","value","firstLineId","undefined","newLinesIds","newLine","newBead","ratio","updateLineFromSelectedBeads","defaultAppData","Idle","Actions","Main","createActionCreators","Draggable","Persist","ChangeEditorMode","MouseSelection","Toolbar","store","composeReducers","createReducerFunction","EditorModes","editorMode","dispatch","useDispatch","onChangeEditorMode","action_onChangeEditorMode","className","onClick","icon","faArrowsAlt","faEdit","EditBeads","AddLine","faPlus","getTranslate3dCss","z","getRotateCss","StraightLine","style","transform","transformOrigin","AddLineMode","isActive","Fragment","AddLineModeContent","useState","startPoint","setStartPoint","endPoint","setEndPoint","isDragEnabled","setIsDragEnabled","lineRef","useRef","onMouseUp","event","current","rect","getBoundingClientRect","clientX","left","clientY","top","onAddLine","action_onAddLine","onMouseDown","onMouseMove","onMouseLeave","ref","EditorChangeState","isSaved","useSelector","state","action_onClearCanvas","faTimes","action_onSaveCanvas","faSave","action_readSavedCanvas","faDownload","isVisible","sceneWrapperRef","mouseSelectionIsDragStarted","zIndex","backgroundColor","border","MouseSelectionBeads","action_onEditBeadsMouseDown","action_onEditBeadsMouseMove","action_onEditBeadsMouseUp","MouseSelectionLines","action_onEditLinesMouseDown","action_onEditLinesMouseMove","action_onEditLinesMouseUp","DisplayBead","opacity","isSelected","isSelectable","isOpacity","isZindex","translate3d","styles","background","borderRadius","action_onClickBead","DisplayBeads","fadeOut","onTop","values","map","SelectionStraightLine","cursor","SelectedStraightLine","eventHandlerEndLine","_","action_onLineDrag","onStart","onDrag","onStop","disabled","DisplayLine","eventHandlerStartPoint","action_onStartPointDrag","eventHandlerEndPoint","action_onEndPointDrag","DraggableLines","backend","HTML5Backend","DisplaySimpleLine","DisplayLines","isEditable","DisplayGroupLines","location","w","h","getSelectedLines","MemoizedDisplayLinesGroup","React","memo","selectedLines","xMin","Number","MAX_SAFE_INTEGER","xMax","yMin","yMax","getGroupPositionFromLines","action_onGroupLineDrag","DisplayGroupBeads","getSelectedBeads","MemoizedDisplayBeadsGroup","selectedBeads","getGroupPositionFromBeads","GroupSelectionPlaceholder","FieldBeadPreview","displayBead","marginTop","marginBottom","display","justifyContent","alignItems","boxSizing","ToolbarField","label","onToggle","marginRight","flexDirection","paddingLeft","paddingRight","ToolbarFieldSet","selected","children","isPickerOpen","setIsPickerOpen","borderTop","cloneElement","FieldColorPicker","onChange","colors","material","paddingTop","paddingBottom","DisplayColorsGroup","flexWrap","group","toString","FieldColor","boxShadow","FieldsetColor","faPalette","BeadTypesIcons","BasicRectangle","FieldBeadTypePicker","types","selectedType","DisplayAvailableBeadTypes","index","DisplayBeadType","faCircle","faExpand","FieldsetBeadType","faShapes","SliderWithTooltip","createSliderWithTooltip","Slider","FieldSlider","step","defaultValue","marks","0","50","100","FieldCheckbox","isDisabled","checked","target","FieldsetBeadSpacing","onChange_beadsSpacing","onChange_beadsAutoSpacing","faDivide","FieldsetBeadCount","onChange_beadsCount","onChange_beadsAutoCount","faDiceSix","1","FieldSliderWithLabel","borderBottom","padding","flexGrow","FieldsetSize","onChange_beadHeight","onChange_beadWidth","onChange_keepAspectRatio","format","toLocaleString","maximumFractionDigits","faExpandArrowsAlt","faLink","faUnlink","faArrowsAltH","faArrowsAltV","FieldDeleteAndCopy","onDelete","onClone","onReset","faTrash","faClone","faDizzy","FieldsetBeadRotate","faSyncAlt","ToolbarEditLines","ToolbarEditLinesWrapper","Content","BeadsRotate","action_changeSelectedLines_defaultBead_rotate","BeadSize","action_changeSelectedLines_defaultBead_height","action_changeSelectedLines_defaultBead_width","action_changeSelectedLines_defaultBead_keepAspectRatio","BeadsCount","action_changeSelectedLines_settings_beadsAutoCount","action_changeSelectedLines_settings_beadsCount","BeadsSpacing","action_changeSelectedLines_settings_beadsAutoSpacing","action_changeSelectedLines_settings_beadsSpacing","BeadType","action_changeSelectedLines_defaultBead_type","BeadColor","action_changeSelectedLines_defaultBead_color","BeadPreview","DeleteAndClone","action_deleteSelectedLines","action_cloneSelectedLines","action_resetSelectedLines","ToolbarEditBeads","ContentWrapper","action_changeSelectedBeads_rotate","action_changeSelectedBeads_height","action_changeSelectedBeads_width","action_changeSelectedBeads_keepAspectRatio","action_changeSelectedBeads_type","action_changeSelectedBeads_color","ToolbarAddLine","action_changeDefaultLineBeadRotate","action_changeDefaultLineBeadHeight","action_changeDefaultLineBeadWidth","action_changeDefaultLineBeadKeepAspectRatio","action_changeDefaultLineBeadsAutoCount","action_changeDefaultLineBeadsCount","action_changeDefaultLineBeadsAutoSpacing","action_changeDefaultLineBeadsSpacing","action_changeDefaultLineBeadType","action_changeDefaultLineColor","ToolbarIdle","linesLen","beadsLen","EditorScene","useStore","getState","useEffect","process","App","rootStore","createStore","__REDUX_DEVTOOLS_EXTENSION__","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c798471.chunk.js","sourcesContent":["import { immerable } from \"immer\";\nimport { DeepPartial } from \"ts-essentials\";\n\nexport interface Point {\n  x: number;\n  y: number;\n  [immerable]: boolean;\n}\n\nexport enum BeadTypes {\n  BasicRectangle = \"BasicRectangle\",\n  BasicEllipse = \"BasicEllipse\",\n}\n\nexport interface Bead {\n  id: string;\n  position: Point;\n  [immerable]: boolean;\n  width: number;\n  height: number;\n  type: BeadTypes;\n  color: string;\n  rotate: number;\n  keepAspectRatio: boolean;\n}\n\nexport interface Line {\n  id: string;\n  start: Point;\n  end: Point;\n  beadIds: string[];\n  [immerable]: boolean;\n  settings: {\n    beadsCount: number;\n    beadsAutoCount: boolean;\n    beadsSpacing: number;\n    beadsAutoSpacing: boolean;\n    defaultBead: Partial<Bead>;\n  };\n}\n\nexport interface AppData {\n  beads: { [s: string]: Bead };\n  lines: { [s: string]: Line };\n}\n\nexport enum EditorMode {\n  Idle,\n  EditLines,\n  AddLine,\n  EditBeads,\n}\n\nexport interface EditorUi {\n  lineSettings: DeepPartial<Line>;\n  saveInfo: {\n    saved: boolean;\n  };\n  selectedLinesIds: { [s: string]: boolean };\n  selectedLinesIdsCount: number;\n  selectedBeadsIds: { [s: string]: boolean };\n  selectedBeadsIdsCount: number;\n  mouseSelection: {\n    start: Point;\n    end: Point;\n    isDragStarted: boolean;\n    isDragged: boolean;\n  };\n}\n\nexport interface Editor {\n  appData: AppData;\n  ui: EditorUi;\n  mode: EditorMode;\n}\n","import { Point } from \"./Editor\";\nimport { immerable } from \"immer\";\n\nexport const buildPoint = (x: number = 0, y: number = 0): Point => {\n  return {\n    x,\n    y,\n    [immerable]: true,\n  } as Point;\n};\n\nexport const getLength = (point: Point) => {\n  return Math.sqrt(point.x * point.x + point.y * point.y);\n};\n\nexport const normalize = (point: Point) => {\n  const length = getLength(point);\n  const useLen = length === 0;\n  const x = useLen ? 0 : point.x / length;\n  const y = useLen ? 0 : point.y / length;\n  return buildPoint(x, y);\n};\n\nexport const scale = (point: Point, scalar: number) => {\n  return buildPoint(point.x * scalar, point.y * scalar);\n};\n\nexport const add = (point: Point, x: number, y: number) => {\n  return buildPoint(point.x + x, point.y + y);\n};\n\nexport const getDistance = (x1, y1, x2, y2): number => {\n  return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n};\n\nexport const getDistanceBetweenPoints = (start: Point, end: Point): number => {\n  return Math.sqrt(\n    (end.x - start.x) * (end.x - start.x) +\n      (end.y - start.y) * (end.y - start.y)\n  );\n};\n\nexport const getRotate = (y, x) => {\n  return Math.atan2(y, x);\n};\n\nexport const contain = (p1: Point, p2: Point, p: Point): boolean => {\n  return p.x > p1.x && p.x < p2.x && p.y > p1.y && p.y < p2.y;\n};\n","import { immerable } from \"immer\";\nimport { generate } from \"shortid\";\nimport { Point, Bead, BeadTypes } from \"./Editor\";\nimport { DeepPartial } from \"ts-essentials\";\nimport { buildPoint } from \"./Point\";\nimport { merge } from \"lodash\";\nimport { defaulBeadColor } from \"../components/colors\";\n\nexport const buildBead = (props: DeepPartial<Bead>): Bead => {\n  const defaults: Bead = {\n    id: generate(),\n    position: buildPoint(0, 0),\n    type: BeadTypes.BasicEllipse,\n    rotate: 0,\n    color: defaulBeadColor,\n    height: 10,\n    width: 10,\n    keepAspectRatio: false,\n    [immerable]: true,\n  };\n  return merge(defaults, props);\n  // const id = generate();\n  // const beadType = type ? type : BeadTypes.BasicCircle;\n  // const common = {\n  //   id,\n  //   position,\n  //   [immerable]: true,\n  //   type: beadType,\n  // };\n\n  // if (beadType === BeadTypes.BasicCircle) {\n  //   return buildBead_BasicCircle(common);\n  // }\n\n  // if (beadType === BeadTypes.BasicRectangle) {\n  //   return buildBead_BasicRectangle(common);\n  // }\n\n  // return buildBead_BasicCircle(common);\n};\n\n// const buildBead_BasicCircle = common => {\n//   return {\n//     ...common,\n//     width: 20,\n//     height: 20,\n//     fill: `linear-gradient(\n//       to bottom,\n//       rgba(254, 204, 177, 1) 0%,\n//       rgba(241, 116, 50, 1) 50%,\n//       rgba(234, 85, 7, 1) 51%,\n//       rgba(251, 149, 94, 1) 100%\n//     )`,\n//     settings: {\n//       radius: 20,\n//     },\n//   } as Bead;\n// };\n\n// const buildBead_BasicRectangle = common => {\n//   return {\n//     ...common,\n//     width: 20,\n//     height: 40,\n//     fill: \"#b1b1b1\",\n//   } as Bead;\n// };\n","export const uiButton = \"#aeaeae\"\nexport const defaulBeadColor = \"#4fc3f7\";","import { immerable } from \"immer\";\nimport { Line, Point } from \"./Editor\";\nimport { generate } from \"shortid\";\nimport { normalize, scale, add, buildPoint } from \"./Point\";\nimport { merge } from \"lodash\";\nimport { DeepPartial } from \"ts-essentials\";\nimport { buildBead } from \"./Bead\";\n\nexport const buildLine = (props: DeepPartial<Line>): Line => {\n  const __defaults = {\n    id: generate(),\n    start: buildPoint(10, 10),\n    end: buildPoint(100, 100),\n    beadIds: [],\n    settings: {\n      beadsCount: 0,\n      beadsAutoCount: true,\n      beadsSpacing: 0,\n      beadsAutoSpacing: false,\n      defaultBead: buildBead({}),\n    },\n    [immerable]: true,\n  };\n\n  return merge(__defaults, props);\n};\n\nexport const getLength = (line: Line): number => {\n  return Math.sqrt(\n    (line.end.x - line.start.x) * (line.end.x - line.start.x) +\n      (line.end.y - line.start.y) * (line.end.y - line.start.y)\n  );\n};\n\nexport const getPointFromStart = (line: Line, distance: number): Point => {\n  const x = line.end.x - line.start.x;\n  const y = line.end.y - line.start.y;\n  let point = buildPoint(x, y);\n  point = normalize(point);\n  point = scale(point, distance);\n  point = add(point, line.start.x, line.start.y);\n  return point;\n};\n\nexport const getPointFromStartLine = (\n  startX: number,\n  startY: number,\n  endX: number,\n  endY: number,\n  distance: number\n): Point => {\n  const x = endX - startX;\n  const y = endY - startY;\n  let point = buildPoint(x, y);\n  point = normalize(point);\n  point = scale(point, distance);\n  point = add(point, startX, startY);\n  return point;\n};\n","import { ImmerReducer } from \"immer-reducer\";\nimport { Editor, EditorMode, Point } from \"../editorObjects/Editor\";\nimport { buildPoint, getDistanceBetweenPoints } from \"../editorObjects/Point\";\nimport { buildBead } from \"../editorObjects/Bead\";\nimport { buildLine } from \"../editorObjects/Line\";\nimport { getPointFromStartLine } from \"../editorObjects/Line\";\n\nexport class BeadSnapperImmerReducer extends ImmerReducer<Editor> {\n  updateBeadsPositions(lineId: string) {\n    const currentLine = this.draftState.appData.lines[lineId];\n    const startOffset = 25;\n\n    // console.log(\"jaka jest linia? \", currentLine);\n    const offset = currentLine.settings.beadsSpacing;\n\n    if (\n      currentLine.settings &&\n      currentLine.settings.beadsAutoSpacing === true\n    ) {\n    }\n\n    const beadWidth = 20;\n    const size = beadWidth + offset;\n    const { start, end, beadIds } = currentLine;\n    const len = getDistanceBetweenPoints(start, end);\n    let count = currentLine.settings.beadsCount;\n    if (currentLine.settings.beadsAutoCount === true) {\n      count = Math.floor((len - startOffset - offset) / size);\n    }\n    const currentCount = beadIds.length;\n    // console.log(\"count dla line?\", count, currentCount);\n    if (count > currentCount) {\n      const remainingCount = count - currentCount;\n      // console.log(\"dodaje\", remainingCount);\n      for (let i = 0; i < remainingCount; i++) {\n        const position = buildPoint();\n        let defaultBead = {};\n        if (currentLine.settings.defaultBead) {\n          defaultBead = currentLine.settings.defaultBead;\n        } else if (\n          this.draftState.ui.lineSettings.settings &&\n          this.draftState.ui.lineSettings.settings.defaultBead\n        ) {\n          defaultBead = this.draftState.ui.lineSettings.settings.defaultBead;\n        }\n        const bead = buildBead({\n          ...defaultBead,\n          position,\n        });\n        this.draftState.appData.beads[bead.id] = bead;\n        this.draftState.appData.lines[lineId].beadIds.push(bead.id);\n      }\n    } else if (count < currentCount) {\n      const remainingCount = currentCount - count;\n      // console.log(\"usuwam\", remainingCount);\n      for (let i = 0; i < remainingCount; i++) {\n        const arrLen = this.draftState.appData.lines[lineId].beadIds.length;\n        const lastItemBeadId = this.draftState.appData.lines[\n          lineId\n        ].beadIds.splice(arrLen - 1, 1);\n        delete this.draftState.appData.beads[lastItemBeadId[0]];\n      }\n    }\n    this.draftState.appData.lines[lineId].settings.beadsCount = count;\n    let currentDistance = startOffset;\n    this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n      const newPosition = getPointFromStartLine(\n        start.x,\n        start.y,\n        end.x,\n        end.y,\n        currentDistance\n      );\n      const halfSize = beadWidth / 2;\n      const x = newPosition.x - halfSize + 5;\n      const y = newPosition.y - halfSize + 5;\n      this.draftState.appData.beads[beadId].position.x = x;\n      this.draftState.appData.beads[beadId].position.y = y;\n      currentDistance = currentDistance + size;\n    });\n  }\n}\n","import { Editor, EditorMode, Point } from \"../editorObjects/Editor\";\nimport { buildPoint, getDistanceBetweenPoints } from \"../editorObjects/Point\";\nimport { ImmerReducer } from \"immer-reducer\";\nimport { buildBead } from \"../editorObjects/Bead\";\nimport { buildLine } from \"../editorObjects/Line\";\nimport { getPointFromStartLine } from \"../editorObjects/Line\";\nimport { BeadSnapperImmerReducer } from \"./BeadSnapperImmerReducer\";\n\nconst boxOffset = 5;\n\nexport class DraggableOperationsImmerReducer extends BeadSnapperImmerReducer {\n  action_onAddLine(start: Point, end: Point) {\n    const line = buildLine({ ...this.draftState.ui.lineSettings, start, end });\n    this.draftState.appData.lines[line.id] = line;\n    this.draftState.mode = EditorMode.EditLines;\n    this.updateBeadsPositions(line.id);\n    this.draftState.ui.saveInfo.saved = false;\n  }\n\n  action_onStartPointDrag(\n    key: string,\n    data: {\n      x: number;\n      y: number;\n    }\n  ) {\n    console.log('action_onStartPointDrag')\n    if (this.draftState.appData.lines[key]) {\n      const line = this.draftState.appData.lines[key];\n      line.start.x = data.x - boxOffset;\n      line.start.y = data.y - boxOffset;\n      this.updateBeadsPositions(line.id);\n      this.draftState.ui.saveInfo.saved = false;\n    }\n  }\n\n  action_onEndPointDrag(\n    key: string,\n    data: {\n      x: number;\n      y: number;\n    }\n  ) {\n    console.log('action_onEndPointDrag')\n    if (this.draftState.appData.lines[key]) {\n      const line = this.draftState.appData.lines[key];\n      line.end.x = data.x - boxOffset;\n      line.end.y = data.y - boxOffset;\n      this.updateBeadsPositions(line.id);\n      this.draftState.ui.saveInfo.saved = false;\n    }\n  }\n\n  action_onLineDrag(\n    key: string,\n    data: {\n      deltaX: number;\n      deltaY: number;\n    }\n  ) {\n    console.log('action_onLineDrag')\n    if (this.draftState.appData.lines[key]) {\n      const line = this.draftState.appData.lines[key];\n      line.start.x = line.start.x + data.deltaX;\n      line.start.y = line.start.y + data.deltaY;\n      line.end.x = line.end.x + data.deltaX;\n      line.end.y = line.end.y + data.deltaY;\n      this.updateBeadsPositions(line.id);\n      this.draftState.ui.saveInfo.saved = false;\n    }\n  }\n\n  action_onGroupLineDrag(data: { deltaX: number; deltaY: number }) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      if (this.draftState.appData.lines[lineId]) {\n        const line = this.draftState.appData.lines[lineId];\n        line.start.x = line.start.x + data.deltaX;\n        line.start.y = line.start.y + data.deltaY;\n        line.end.x = line.end.x + data.deltaX;\n        line.end.y = line.end.y + data.deltaY;\n        this.updateBeadsPositions(line.id);\n        this.draftState.ui.saveInfo.saved = false;\n      }\n    });\n  }\n\n  action_onGroupBeadsDrag(data: { deltaX: number; deltaY: number }) {}\n\n  action_onClickLine(lineId: string) {\n    this.draftState.ui.selectedLinesIds = {};\n    this.draftState.ui.selectedLinesIds[lineId] = true;\n    this.draftState.ui.selectedLinesIdsCount = 1;\n  }\n\n  action_onClickLastestLine() {\n    const keys = Object.keys(this.draftState.appData.lines);\n    if (keys.length > 0) {\n      const lineId = keys[keys.length - 1];\n      this.action_onClickLine(lineId);\n    }\n  }\n\n  action_onClickBead(beadId: string) {\n    this.draftState.ui.selectedBeadsIds = {};\n    this.draftState.ui.selectedBeadsIds[beadId] = true;\n    this.draftState.ui.selectedBeadsIdsCount = 1;\n  }\n}\n","import { Editor } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\nimport { buildBead } from \"../editorObjects/Bead\";\nimport { buildLine } from \"../editorObjects/Line\";\nimport { BeadSnapperImmerReducer } from \"./BeadSnapperImmerReducer\";\n\nexport class PersistImmerReducer extends BeadSnapperImmerReducer {\n  action_onClearCanvas() {\n    this.draftState.appData.beads = {};\n    this.draftState.appData.lines = {};\n    this.draftState.ui.saveInfo.saved = false;\n  }\n\n  action_readSavedCanvas() {\n    console.log(\"action_readSavedCanvas\");\n    this.draftState.ui.saveInfo.saved = true;\n    if (\"localStorage\" in window) {\n      const readedData = localStorage.getItem(\"appData\");\n      if (readedData !== null) {\n        this.draftState.appData = {\n          beads: {},\n          lines: {},\n        };\n        const cached = JSON.parse(readedData) as Editor[\"appData\"];\n        Object.keys(cached.beads).forEach(beadId => {\n          const currBead = cached.beads[beadId];\n          const bead = buildBead(currBead.position);\n          bead.id = currBead.id;\n          this.draftState.appData.beads[beadId] = bead;\n        });\n        Object.keys(cached.lines).forEach(lineId => {\n          const currLine = cached.lines[lineId];\n          const line = buildLine(currLine);\n          // line.settings.autoFill = false;\n          // line.settings.beadCount = 100;\n          this.draftState.appData.lines[lineId] = line;\n        });\n        // @TODO: Po wczytaniu przelicz pozycje beadsow dla kazdej lini.\n        // - moze byc tak ze zapisane wartosci nie będą prawidlowo wyliczone\n        Object.keys(this.draftState.appData.lines).forEach(lineId => {\n          this.updateBeadsPositions(lineId);\n        });\n        console.log(\"action_readSavedCanvas loaded\");\n      } else {\n        console.info(\"No data in localstorage\");\n      }\n    } else {\n      console.info(\"No localstorage available\");\n    }\n  }\n\n  action_onSaveCanvas() {\n    if (\"localStorage\" in window) {\n      localStorage.setItem(\"appData\", JSON.stringify(this.draftState.appData));\n      this.draftState.ui.saveInfo.saved = true;\n      console.log(\"action_onSaveCanvas saved\");\n    } else {\n      console.info(\"No localstorage available\");\n    }\n  }\n}\n","import { Editor, EditorMode } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\n\nexport class ChangeEditorModeImmerReducer extends ImmerReducer<Editor> {\n  action_onChangeEditorMode(newEditorMode: EditorMode) {\n    this.draftState.mode = newEditorMode;\n    this.clearSelectedBeads();\n    this.clearSelectedLines();\n  }\n  private clearSelectedBeads = () => {\n    if (this.draftState.ui.selectedBeadsIdsCount > 0) {\n      this.draftState.ui.selectedBeadsIds = {};\n      this.draftState.ui.selectedBeadsIdsCount = 0;\n    }\n  };\n  private clearSelectedLines = () => {\n    if (this.draftState.ui.selectedLinesIdsCount) {\n      this.draftState.ui.selectedLinesIds = {};\n      this.draftState.ui.selectedLinesIdsCount = 0;\n    }\n  };\n  action_setSaveInfo(newValue: boolean) {\n    this.draftState.ui.saveInfo.saved = newValue;\n  }\n}\n","import { Editor } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\n\nexport class MainImmerReducer extends ImmerReducer<Editor> {\n  action_test() {}\n  action_restoreState() {}\n}\n","import { Editor } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\nimport { buildPoint } from \"../editorObjects/Point\";\nimport { contain } from \"../editorObjects/Point\";\nimport { difference } from \"lodash\";\n\nexport class MouseSelectionImmerReducer extends ImmerReducer<Editor> {\n  action_onEditBeadsMouseDown(x, y) {\n    this.draftState.ui.mouseSelection.isDragStarted = true;\n\n    this.draftState.ui.mouseSelection.start.x = x;\n    this.draftState.ui.mouseSelection.start.y = y;\n    this.draftState.ui.mouseSelection.end.x = x;\n    this.draftState.ui.mouseSelection.end.y = y;\n  }\n\n  action_onEditBeadsMouseMove(x, y) {\n    this.draftState.ui.mouseSelection.end.x = x;\n    this.draftState.ui.mouseSelection.end.y = y;\n\n    if (this.draftState.ui.mouseSelection.isDragged === false) {\n      const { start, end } = this.draftState.ui.mouseSelection;\n      const deltaX = end.x - start.x;\n      const deltaY = end.y - start.y;\n\n      if (Math.abs(deltaX) > 5 || Math.abs(deltaY) > 5) {\n        this.draftState.ui.mouseSelection.isDragged = true;\n      }\n    }\n\n    if (this.draftState.ui.mouseSelection.isDragged === true) {\n      const { start, end } = this.draftState.ui.mouseSelection;\n      const p1 = buildPoint(Math.min(start.x, end.x), Math.min(start.y, end.y));\n      const p2 = buildPoint(Math.max(start.x, end.x), Math.max(start.y, end.y));\n\n      const selectedIds = Object.keys(this.draftState.ui.selectedBeadsIds);\n      const newIds: string[] = [];\n\n      Object.keys(this.draftState.appData.beads).forEach(beadId => {\n        const bead = this.draftState.appData.beads[beadId];\n        const p3 = buildPoint(bead.position.x + 10, bead.position.y + 10);\n        if (contain(p1, p2, p3)) {\n          newIds.push(beadId);\n        }\n      });\n\n      const diff = difference(newIds, selectedIds);\n\n      if (diff.length > 0) {\n        this.draftState.ui.selectedBeadsIds = {};\n        this.draftState.ui.selectedBeadsIdsCount = 0;\n        newIds.forEach(id => {\n          this.draftState.ui.selectedBeadsIds[id] = true;\n          this.draftState.ui.selectedBeadsIdsCount =\n            this.draftState.ui.selectedBeadsIdsCount + 1;\n        });\n      }\n\n      // this.draftState.ui.selectedBeadsIds = {};\n      // this.draftState.ui.selectedBeadsIdsCount = 0;\n      // Object.keys(this.draftState.appData.beads).forEach(beadId => {\n      //   const bead = this.draftState.appData.beads[beadId];\n      //   const p3 = buildPoint(bead.position.x + 10, bead.position.y + 10);\n      //   if (contain(p1, p2, p3)) {\n      //     this.draftState.ui.selectedBeadsIds[beadId] = true;\n      //     this.draftState.ui.selectedBeadsIdsCount =\n      //       this.draftState.ui.selectedBeadsIdsCount + 1;\n      //   }\n      // });\n    }\n  }\n\n  action_onEditBeadsMouseUp() {\n    if (this.draftState.ui.mouseSelection.isDragged === false) {\n      if (this.draftState.ui.selectedBeadsIdsCount > 0) {\n        this.draftState.ui.selectedBeadsIds = {};\n        this.draftState.ui.selectedBeadsIdsCount = 0;\n      }\n    }\n\n    this.draftState.ui.mouseSelection.isDragStarted = false;\n    this.draftState.ui.mouseSelection.isDragged = false;\n    this.draftState.ui.mouseSelection.start.x = 0;\n    this.draftState.ui.mouseSelection.start.y = 0;\n    this.draftState.ui.mouseSelection.end.x = 0;\n    this.draftState.ui.mouseSelection.end.y = 0;\n  }\n\n  action_onEditLinesMouseDown(x: number, y: number) {\n    this.draftState.ui.mouseSelection.isDragStarted = true;\n    this.draftState.ui.mouseSelection.start.x = x;\n    this.draftState.ui.mouseSelection.start.y = y;\n    this.draftState.ui.mouseSelection.end.x = x;\n    this.draftState.ui.mouseSelection.end.y = y;\n  }\n\n  action_onEditLinesMouseMove(x: number, y: number) {\n    this.draftState.ui.mouseSelection.end.x = x;\n    this.draftState.ui.mouseSelection.end.y = y;\n\n    if (this.draftState.ui.mouseSelection.isDragged === false) {\n      const { start, end } = this.draftState.ui.mouseSelection;\n      const deltaX = end.x - start.x;\n      const deltaY = end.y - start.y;\n      if (Math.abs(deltaX) > 5 || Math.abs(deltaY) > 5) {\n        this.draftState.ui.mouseSelection.isDragged = true;\n      }\n    }\n\n    if (this.draftState.ui.mouseSelection.isDragged === true) {\n      const { start, end } = this.draftState.ui.mouseSelection;\n      const p1 = buildPoint(Math.min(start.x, end.x), Math.min(start.y, end.y));\n      const p2 = buildPoint(Math.max(start.x, end.x), Math.max(start.y, end.y));\n\n      const selectedIds = Object.keys(this.draftState.ui.selectedLinesIds);\n      const newIds: string[] = [];\n\n      Object.keys(this.draftState.appData.lines).forEach(lineId => {\n        const line = this.draftState.appData.lines[lineId];\n        if (contain(p1, p2, line.start) || contain(p1, p2, line.end)) {\n          newIds.push(lineId);\n        }\n      });\n\n      const diff = difference(newIds, selectedIds);\n\n      if (diff.length > 0) {\n        this.draftState.ui.selectedLinesIds = {};\n        this.draftState.ui.selectedLinesIdsCount = 0;\n        newIds.forEach(id => {\n          this.draftState.ui.selectedLinesIds[id] = true;\n          this.draftState.ui.selectedLinesIdsCount =\n            this.draftState.ui.selectedLinesIdsCount + 1;\n        });\n      }\n      // this.draftState.ui.selectedLinesIds = {};\n      // this.draftState.ui.selectedLinesIdsCount = 0;\n      // Object.keys(this.draftState.appData.lines).forEach(lineId => {\n      //   const line = this.draftState.appData.lines[lineId];\n      //   if (contain(p1, p2, line.start) || contain(p1, p2, line.end)) {\n      //     this.draftState.ui.selectedLinesIds[lineId] = true;\n      //     this.draftState.ui.selectedLinesIdsCount =\n      //       this.draftState.ui.selectedLinesIdsCount + 1;\n      //   }\n      // });\n    }\n  }\n\n  action_onEditLinesMouseUp() {\n    if (this.draftState.ui.mouseSelection.isDragged === false) {\n      if (this.draftState.ui.selectedLinesIdsCount > 0) {\n        this.draftState.ui.selectedLinesIds = {};\n        this.draftState.ui.selectedLinesIdsCount = 0;\n      }\n    }\n\n    this.draftState.ui.mouseSelection.isDragStarted = false;\n    this.draftState.ui.mouseSelection.isDragged = false;\n    this.draftState.ui.mouseSelection.start.x = 0;\n    this.draftState.ui.mouseSelection.start.y = 0;\n    this.draftState.ui.mouseSelection.end.x = 0;\n    this.draftState.ui.mouseSelection.end.y = 0;\n  }\n}\n","import { BeadTypes } from \"../editorObjects/Editor\";\nimport { BeadSnapperImmerReducer } from \"./BeadSnapperImmerReducer\";\nimport { buildBead } from \"../editorObjects/Bead\";\nimport { buildLine } from \"../editorObjects/Line\";\nimport { merge } from \"lodash\";\n\nexport class ToolbarImmerReducer extends BeadSnapperImmerReducer {\n  action_changeBeadFill(color: string) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].color = color;\n    });\n  }\n\n  action_changeBeadType(type: BeadTypes) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].type = type;\n    });\n  }\n  action_onBeadRotate(beadId, { deg }) {}\n  action_onBeadsRotate({ deg }) {}\n\n  action_changeSelectedLinesBeadsSpacing(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsSpacing = value;\n      this.updateBeadsPositions(id);\n    });\n  }\n\n  action_changeSelectedLinesBeadsAutoSpacing(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsAutoSpacing = value;\n      this.updateBeadsPositions(id);\n    });\n  }\n\n  action_changeSelectedLinesBeadsCount(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsCount = value;\n      this.updateBeadsPositions(id);\n    });\n  }\n\n  action_changeSelectedLinesBeadsAutoCount(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsAutoCount = value;\n      this.updateBeadsPositions(id);\n    });\n  }\n\n  action_resetSelectedLines() {\n    const firstLineId = Object.keys(this.draftState.ui.selectedLinesIds)[0];\n    const firstLine = this.draftState.appData.lines[firstLineId];\n    const defaultBead = { ...firstLine.settings.defaultBead };\n\n    defaultBead.id = undefined;\n    defaultBead.position = undefined;\n\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].beadIds.forEach(beadId => {\n        if (defaultBead) {\n          this.draftState.appData.beads[beadId] = merge(\n            this.draftState.appData.beads[beadId],\n            defaultBead\n          );\n        }\n      });\n      this.draftState.appData.lines[id].settings.defaultBead = merge(\n        this.draftState.appData.lines[id].settings.defaultBead,\n        defaultBead\n      );\n      this.updateBeadsPositions(id);\n    });\n  }\n\n  action_deleteSelectedLines() {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].beadIds.forEach(beadId => {\n        delete this.draftState.appData.beads[beadId];\n      });\n      delete this.draftState.appData.lines[id];\n    });\n    this.draftState.ui.selectedLinesIds = {};\n    this.draftState.ui.selectedLinesIdsCount = 0;\n  }\n\n  action_cloneSelectedLines() {\n    const moveX = 20;\n    const moveY = 20;\n    const newLinesIds: string[] = [];\n\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      const newLine = buildLine({\n        ...this.draftState.appData.lines[id],\n        id: undefined,\n        beadIds: [],\n      });\n      newLine.start.x = newLine.start.x + moveX;\n      newLine.start.y = newLine.start.y + moveY;\n      newLine.end.x = newLine.end.x + moveX;\n      newLine.end.y = newLine.end.y + moveY;\n\n      this.draftState.appData.lines[id].beadIds.forEach(beadId => {\n        const newBead = buildBead({\n          ...this.draftState.appData.beads[beadId],\n          id: undefined,\n        });\n        newBead.position.x = newBead.position.x + moveX;\n        newBead.position.y = newBead.position.y + moveY;\n        this.draftState.appData.beads[newBead.id] = newBead;\n        newLine.beadIds.push(newBead.id);\n      });\n\n      newLinesIds.push(newLine.id);\n      this.draftState.appData.lines[newLine.id] = newLine;\n    });\n\n    newLinesIds.forEach(lineId => {\n      this.updateBeadsPositions(lineId);\n    });\n\n    this.draftState.ui.selectedLinesIds = {};\n    this.draftState.ui.selectedLinesIdsCount = 0;\n\n    newLinesIds.forEach(lineId => {\n      this.draftState.ui.selectedLinesIds[lineId] = true;\n      this.draftState.ui.selectedLinesIdsCount =\n        this.draftState.ui.selectedLinesIdsCount + 1;\n    });\n  }\n\n  /**\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   */\n\n  action_changeDefaultLineBeadsCount(value) {\n    if (this.draftState.ui.lineSettings.settings) {\n      this.draftState.ui.lineSettings.settings.beadsCount = value;\n    }\n  }\n\n  action_changeDefaultLineBeadsAutoCount(value) {\n    if (this.draftState.ui.lineSettings.settings) {\n      this.draftState.ui.lineSettings.settings.beadsAutoCount = value;\n    }\n  }\n\n  action_changeDefaultLineBeadsSpacing(value) {\n    if (this.draftState.ui.lineSettings.settings) {\n      this.draftState.ui.lineSettings.settings.beadsSpacing = value;\n    }\n  }\n\n  action_changeDefaultLineBeadsAutoSpacing(value) {\n    if (this.draftState.ui.lineSettings.settings) {\n      this.draftState.ui.lineSettings.settings.beadsAutoSpacing = value;\n    }\n  }\n\n  action_changeDefaultLineBeadType(value) {\n    if (this.draftState.ui.lineSettings.settings) {\n      if (this.draftState.ui.lineSettings.settings.defaultBead) {\n        this.draftState.ui.lineSettings.settings.defaultBead.type = value;\n      }\n    }\n  }\n\n  action_changeDefaultLineColor(value) {\n    if (this.draftState.ui.lineSettings.settings) {\n      if (this.draftState.ui.lineSettings.settings.defaultBead) {\n        this.draftState.ui.lineSettings.settings.defaultBead.color = value;\n      }\n    }\n  }\n\n  action_changeDefaultLineBeadHeight(value) {\n    const { lineSettings } = this.draftState.ui;\n    if (lineSettings.settings) {\n      if (lineSettings.settings.defaultBead) {\n        const {\n          width,\n          height,\n          keepAspectRatio,\n        } = lineSettings.settings.defaultBead;\n        if (keepAspectRatio && width && height) {\n          if (height >= 1) {\n            const ratio = width / height;\n            lineSettings.settings.defaultBead.width = value * ratio;\n            lineSettings.settings.defaultBead.height = value;\n          } else {\n            lineSettings.settings.defaultBead.height = 1;\n          }\n        } else {\n          lineSettings.settings.defaultBead.height = value;\n        }\n      }\n    }\n  }\n\n  action_changeDefaultLineBeadWidth(value) {\n    const { lineSettings } = this.draftState.ui;\n    if (lineSettings.settings) {\n      if (lineSettings.settings.defaultBead) {\n        const {\n          width,\n          height,\n          keepAspectRatio,\n        } = lineSettings.settings.defaultBead;\n        if (keepAspectRatio && width && height) {\n          if (width >= 1) {\n            const ratio = height / width;\n            lineSettings.settings.defaultBead.width = value;\n            lineSettings.settings.defaultBead.height = value * ratio;\n          } else {\n            lineSettings.settings.defaultBead.width = 1;\n          }\n        } else {\n          lineSettings.settings.defaultBead.width = value;\n        }\n      }\n    }\n  }\n\n  action_changeDefaultLineBeadKeepAspectRatio(value) {\n    const { lineSettings } = this.draftState.ui;\n    if (lineSettings.settings) {\n      if (lineSettings.settings.defaultBead) {\n        lineSettings.settings.defaultBead.keepAspectRatio = value;\n      }\n    }\n  }\n  action_changeDefaultLineBeadRotate(value) {\n    const { lineSettings } = this.draftState.ui;\n    if (lineSettings.settings) {\n      if (lineSettings.settings.defaultBead) {\n        lineSettings.settings.defaultBead.rotate = value;\n      }\n    }\n  }\n\n  /**\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   */\n\n  action_changeSelectedLines_settings_beadsCount(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsCount = value;\n      this.updateBeadsPositions(id);\n    });\n  }\n\n  action_changeSelectedLines_settings_beadsAutoCount(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsAutoCount = value;\n      this.updateBeadsPositions(id);\n    });\n  }\n\n  action_changeSelectedLines_settings_beadsSpacing(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsSpacing = value;\n      this.updateBeadsPositions(id);\n    });\n  }\n\n  action_changeSelectedLines_settings_beadsAutoSpacing(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsAutoSpacing = value;\n      this.updateBeadsPositions(id);\n    });\n  }\n\n  action_changeSelectedLines_defaultBead_type(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      this.draftState.appData.lines[lineId].settings.defaultBead.type = value;\n      this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n        this.draftState.appData.beads[beadId].type = value;\n      });\n      this.updateBeadsPositions(lineId);\n    });\n  }\n\n  action_changeSelectedLines_defaultBead_color(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      this.draftState.appData.lines[lineId].settings.defaultBead.color = value;\n      this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n        this.draftState.appData.beads[beadId].color = value;\n      });\n      this.updateBeadsPositions(lineId);\n    });\n  }\n\n  action_changeSelectedLines_defaultBead_height(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      const currLine = this.draftState.appData.lines[lineId];\n      let { width, height, keepAspectRatio } = currLine.settings.defaultBead;\n\n      if (keepAspectRatio === false) {\n        currLine.settings.defaultBead.height = value;\n        this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n          this.draftState.appData.beads[beadId].height = value;\n        });\n        this.updateBeadsPositions(lineId);\n      } else {\n        if (width && height) {\n          if (value >= 1) {\n            const ratio = width / height;\n            width = value * ratio;\n            height = value;\n          }\n\n          currLine.settings.defaultBead.width = width;\n          currLine.settings.defaultBead.height = height;\n        }\n\n        this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n          if (width && height) {\n            this.draftState.appData.beads[beadId].width = width;\n            this.draftState.appData.beads[beadId].height = height;\n          }\n        });\n\n        this.updateBeadsPositions(lineId);\n      }\n    });\n  }\n\n  action_changeSelectedLines_defaultBead_width(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      const currLine = this.draftState.appData.lines[lineId];\n      let { width, height, keepAspectRatio } = currLine.settings.defaultBead;\n\n      if (keepAspectRatio === false) {\n        currLine.settings.defaultBead.width = value;\n        this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n          this.draftState.appData.beads[beadId].width = value;\n        });\n        this.updateBeadsPositions(lineId);\n      } else {\n        if (width && height) {\n          if (value >= 1) {\n            const ratio = height / width;\n            width = value;\n            height = value * ratio;\n          }\n\n          currLine.settings.defaultBead.width = width;\n          currLine.settings.defaultBead.height = height;\n        }\n\n        this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n          if (width && height) {\n            this.draftState.appData.beads[beadId].width = width;\n            this.draftState.appData.beads[beadId].height = height;\n          }\n        });\n\n        this.updateBeadsPositions(lineId);\n      }\n    });\n  }\n\n  action_changeSelectedLines_defaultBead_keepAspectRatio(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      this.draftState.appData.lines[\n        lineId\n      ].settings.defaultBead.keepAspectRatio = value;\n      this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n        this.draftState.appData.beads[beadId].keepAspectRatio = value;\n      });\n      this.updateBeadsPositions(lineId);\n    });\n  }\n\n  action_changeSelectedLines_defaultBead_rotate(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      this.draftState.appData.lines[lineId].settings.defaultBead.rotate = value;\n      this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n        this.draftState.appData.beads[beadId].rotate = value;\n      });\n      this.updateBeadsPositions(lineId);\n    });\n  }\n\n  /****\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   */\n\n  action_changeSelectedBeads_type(value) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].type = value;\n    });\n    this.updateLineFromSelectedBeads();\n  }\n\n  action_changeSelectedBeads_color(value) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].color = value;\n    });\n    this.updateLineFromSelectedBeads();\n  }\n\n  action_changeSelectedBeads_height(value) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      const currBead = this.draftState.appData.beads[beadId];\n      let { width, height, keepAspectRatio } = currBead;\n\n      if (keepAspectRatio === false) {\n        this.draftState.appData.beads[beadId].height = value;\n      } else {\n        if (width && height) {\n          if (value >= 1) {\n            const ratio = width / height;\n            width = value * ratio;\n            height = value;\n          }\n        }\n        this.draftState.appData.beads[beadId].width = width;\n        this.draftState.appData.beads[beadId].height = height;\n      }\n    });\n\n    this.updateLineFromSelectedBeads();\n  }\n\n  action_changeSelectedBeads_width(value) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      const currBead = this.draftState.appData.beads[beadId];\n      let { width, height, keepAspectRatio } = currBead;\n\n      if (keepAspectRatio === false) {\n        this.draftState.appData.beads[beadId].width = value;\n      } else {\n        if (width && height) {\n          if (value >= 1) {\n            const ratio = height / width;\n            width = value;\n            height = value * ratio;\n          }\n        }\n        this.draftState.appData.beads[beadId].width = width;\n        this.draftState.appData.beads[beadId].height = height;\n      }\n    });\n\n    this.updateLineFromSelectedBeads();\n  }\n\n  action_changeSelectedBeads_keepAspectRatio(value) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].keepAspectRatio = value;\n    });\n    this.updateLineFromSelectedBeads();\n  }\n\n  action_changeSelectedBeads_rotate(value) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].rotate = value;\n    });\n    this.updateLineFromSelectedBeads();\n  }\n\n  updateLineFromSelectedBeads() {\n    // @TODO\n  }\n}\n","import { Editor, EditorMode, BeadTypes } from \"./editorObjects/Editor\";\nimport { buildPoint } from \"./editorObjects/Point\";\nimport { composeReducers } from \"immer-reducer\";\nimport { createActionCreators, createReducerFunction } from \"immer-reducer\";\nimport { DraggableOperationsImmerReducer } from \"./immerReducers/DraggableOperationsImmerReducer\";\nimport { PersistImmerReducer } from \"./immerReducers/PersistImmerReducer\";\nimport { ChangeEditorModeImmerReducer } from \"./immerReducers/ChangeEditorModeImmerReducer\";\nimport { MainImmerReducer } from \"./immerReducers/MainImmerReducer\";\nimport { MouseSelectionImmerReducer } from \"./immerReducers/MouseSelectionImmerReducer\";\nimport { ToolbarImmerReducer } from \"./immerReducers/ToolbarImmerReducer\";\nimport { defaulBeadColor } from \"./components/colors\";\n\nconst defaultAppData: Editor = {\n  appData: {\n    beads: {},\n    lines: {},\n  },\n  ui: {\n    lineSettings: {\n      settings: {\n        beadsAutoCount: true,\n        beadsAutoSpacing: false,\n        beadsCount: 0,\n        beadsSpacing: 0,\n        defaultBead: {\n          type: BeadTypes.BasicEllipse,\n          rotate: 0,\n          color: defaulBeadColor,\n          height: 10,\n          width: 10,\n          keepAspectRatio: false\n        },\n      },\n    },\n    saveInfo: {\n      saved: false,\n    },\n    selectedLinesIds: {},\n    selectedLinesIdsCount: 0,\n    selectedBeadsIds: {},\n    selectedBeadsIdsCount: 0,\n    mouseSelection: {\n      start: buildPoint(0, 0),\n      end: buildPoint(0, 0),\n      isDragStarted: false,\n      isDragged: false,\n    },\n  },\n  mode: EditorMode.Idle,\n};\n\nexport const Actions = {\n  Main: createActionCreators(MainImmerReducer),\n  Draggable: createActionCreators(DraggableOperationsImmerReducer),\n  Persist: createActionCreators(PersistImmerReducer),\n  ChangeEditorMode: createActionCreators(ChangeEditorModeImmerReducer),\n  MouseSelection: createActionCreators(MouseSelectionImmerReducer),\n  Toolbar: createActionCreators(ToolbarImmerReducer),\n};\n\nexport const store = composeReducers(\n  createReducerFunction(MainImmerReducer, defaultAppData),\n  createReducerFunction(DraggableOperationsImmerReducer, defaultAppData),\n  createReducerFunction(PersistImmerReducer, defaultAppData),\n  createReducerFunction(ToolbarImmerReducer, defaultAppData),\n  createReducerFunction(ChangeEditorModeImmerReducer, defaultAppData),\n  createReducerFunction(MouseSelectionImmerReducer, defaultAppData)\n);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faEdit, faArrowsAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { EditorMode } from \"../../editorObjects/Editor\";\nimport { uiButton } from \"../colors\";\nimport { useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\n\nexport const EditorModes = ({ editorMode }) => {\n  const dispatch = useDispatch();\n\n  const onChangeEditorMode = (newEditorMode: EditorMode) => {\n    dispatch(Actions.ChangeEditorMode.action_onChangeEditorMode(newEditorMode));\n  };\n\n  return (\n    <div className=\"\">\n      <div\n        className={`\n              button \n              ${editorMode === EditorMode.Idle ? \"is-active\" : \"\"}\n            `}\n        onClick={() => onChangeEditorMode(EditorMode.Idle)}\n      >\n        <span className=\"icon is-small\">\n          <FontAwesomeIcon icon={faArrowsAlt} color={uiButton} />\n        </span>\n        <span>Idle</span>\n      </div>\n\n      <div\n        className={`\n              button \n              ${editorMode === EditorMode.EditLines ? \"is-active\" : \"\"}\n            `}\n        onClick={() => onChangeEditorMode(EditorMode.EditLines)}\n      >\n        <span className=\"icon is-small\">\n          <FontAwesomeIcon icon={faEdit} color={uiButton} />\n        </span>\n        <span>EditLines</span>\n      </div>\n\n      <div\n        className={`\n              button \n              ${editorMode === EditorMode.EditBeads ? \"is-active\" : \"\"}\n            `}\n        onClick={() => onChangeEditorMode(EditorMode.EditBeads)}\n      >\n        <span className=\"icon is-small\">\n          <FontAwesomeIcon icon={faEdit} color={uiButton} />\n        </span>\n        <span>Edit Beads</span>\n      </div>\n\n      <div\n        className={`\n              button \n              ${editorMode === EditorMode.AddLine ? \"is-active\" : \"\"}\n            `}\n        onClick={() => onChangeEditorMode(EditorMode.AddLine)}\n      >\n        <span className=\"icon is-small\">\n          <FontAwesomeIcon icon={faPlus} color={uiButton} />\n        </span>\n        <span>AddLine</span>\n      </div>\n    </div>\n  );\n};\n","export const getTranslate3dCss = (x, y, z = 1) => {\n  return `translate3d(${x}px, ${y}px, ${z}px)`;\n};\n\nexport const getRotateCss = rotate => {\n  return `rotate(${rotate}rad)`;\n};\n","import React from \"react\";\nimport { getDistanceBetweenPoints, getRotate } from \"../../editorObjects/Point\";\nimport { getTranslate3dCss, getRotateCss } from \"../operations/MapValuesToCss\";\n\nexport const StraightLine = ({ start, end }) => {\n  const size = 5;\n  const height = 1;\n  const width = getDistanceBetweenPoints(start, end);\n  const rotate = getRotate(end.y - start.y, end.x - start.x);\n  return (\n    <div\n      style={{\n        height,\n        width,\n        transform: `${getTranslate3dCss(\n          start.x + size,\n          start.y + size\n        )} ${getRotateCss(rotate)}`,\n        transformOrigin: \"left center\",\n      }}\n      className=\"line\"\n    >\n      &nbsp;\n    </div>\n  );\n};\n","import React, { useState, MouseEvent, useRef } from \"react\";\nimport { StraightLine } from \"./StraightLine\";\nimport { getTranslate3dCss } from \"../operations/MapValuesToCss\";\nimport { useDispatch } from \"react-redux\";\nimport { Point } from \"../../editorObjects/Editor\";\nimport { Actions } from \"../../store\";\n\nexport const AddLineMode = ({ isActive }) => {\n  if (isActive === false) {\n    return <React.Fragment />;\n  }\n\n  return <AddLineModeContent />;\n};\n\nconst AddLineModeContent = () => {\n  interface SimplePoint {\n    x: number;\n    y: number;\n  }\n  const [startPoint, setStartPoint] = useState<SimplePoint>({\n    x: 0,\n    y: 0,\n  });\n  const [endPoint, setEndPoint] = useState<SimplePoint>({\n    x: 0,\n    y: 0,\n  });\n  const [isDragEnabled, setIsDragEnabled] = useState<boolean>(false);\n  const lineRef = useRef<HTMLDivElement>(null);\n  const onMouseDown = (event: MouseEvent<HTMLElement>) => {\n    if (lineRef.current) {\n      const rect = lineRef.current.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      setStartPoint({ x, y });\n      setEndPoint({ x, y });\n      setIsDragEnabled(true);\n    }\n  };\n  const onMouseUp = (event: MouseEvent<HTMLElement>) => {\n    if (isDragEnabled) {\n      if (lineRef.current) {\n        const rect = lineRef.current.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        setEndPoint({ x, y });\n        onAddLine(startPoint, endPoint);\n        setIsDragEnabled(false);\n      }\n    }\n  };\n  const onMouseMove = (event: MouseEvent<HTMLElement>) => {\n    if (isDragEnabled) {\n      if (lineRef.current) {\n        const rect = lineRef.current.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        setEndPoint({ x, y });\n      }\n    }\n  };\n  const dispatch = useDispatch();\n\n  const onAddLine = (start: SimplePoint, end: SimplePoint) => {\n    dispatch(Actions.Draggable.action_onAddLine(start as Point, end as Point));\n  };\n\n  return (\n    <div>\n      <div\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onMouseMove={onMouseMove}\n        onMouseLeave={onMouseUp}\n        className=\"add-line-wrapper\"\n        ref={lineRef}\n      ></div>\n\n      {isDragEnabled ? (\n        <div>\n          <div\n            style={{\n              transform: getTranslate3dCss(startPoint.x, startPoint.y),\n              width: 10,\n              height: 10,\n            }}\n            className={\"line-start\"}\n          >\n            &nbsp;\n          </div>\n          <div\n            style={{\n              transform: getTranslate3dCss(endPoint.x, endPoint.y),\n              width: 10,\n              height: 10,\n            }}\n            className={\"line-end\"}\n          >\n            &nbsp;\n          </div>\n          <StraightLine start={startPoint} end={endPoint} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faSave, faDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport { uiButton } from \"../colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Editor } from \"../../editorObjects/Editor\";\nimport { Actions } from \"../../store\";\n\nexport const EditorChangeState = () => {\n  const dispatch = useDispatch();\n  const isSaved = useSelector((state: Editor) => {\n    return state.ui.saveInfo.saved;\n  });\n\n  const onClearCanvas = () => {\n    dispatch(Actions.Persist.action_onClearCanvas());\n  };\n\n  const readSavedCanvas = () => {\n    dispatch(Actions.Persist.action_readSavedCanvas());\n  };\n\n  const onSaveCanvas = () => {\n    dispatch(Actions.Persist.action_onSaveCanvas());\n  };\n\n  return (\n    <div className=\"field has-addons\">\n      <div className=\"control\">\n        <div className={` button `} onClick={onClearCanvas}>\n          <span className=\"icon is-small\">\n            <FontAwesomeIcon icon={faTimes} color={uiButton} />\n          </span>\n          <span>Clear canvas</span>\n        </div>\n      </div>\n\n      <div className=\"control\">\n        <div\n          className={` button ${isSaved ? \"is-success\" : \"\"}`}\n          onClick={onSaveCanvas}\n        >\n          <span className=\"icon is-small\">\n            <FontAwesomeIcon icon={faSave} color={uiButton} />\n          </span>\n          <span>Save canvas</span>\n        </div>\n      </div>\n\n      <div className=\"control\">\n        <div className={` button `} onClick={readSavedCanvas}>\n          <span className=\"icon is-small\">\n            <FontAwesomeIcon icon={faDownload} />\n          </span>\n          <span>Load from localstorage</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useRef, MouseEvent } from \"react\";\nimport { getTranslate3dCss } from \"./MapValuesToCss\";\nimport { Editor } from \"../../editorObjects/Editor\";\nimport { useSelector } from \"react-redux\";\n\nexport const MouseSelection = (props: {\n  isVisible: boolean;\n  onMouseDown: any;\n  onMouseUp: any;\n  onMouseMove: any;\n}) => {\n  const { isVisible } = props;\n  const sceneWrapperRef = useRef<HTMLDivElement>(null);\n\n  const start = useSelector((state: Editor) => {\n    return state.ui.mouseSelection.start;\n  });\n\n  const end = useSelector((state: Editor) => {\n    return state.ui.mouseSelection.end;\n  });\n\n  const mouseSelectionIsDragStarted = useSelector((state: Editor) => {\n    return state.ui.mouseSelection.isDragStarted;\n  });\n\n  if (isVisible === false) {\n    return <React.Fragment />;\n  }\n\n  const isActive = mouseSelectionIsDragStarted === true;\n  const { onMouseDown, onMouseUp, onMouseMove } = props;\n\n  const onMouseDownHandler = (event: MouseEvent<HTMLElement>) => {\n    if (sceneWrapperRef.current) {\n      const rect = sceneWrapperRef.current.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      onMouseDown(x, y);\n    }\n  };\n\n  const onMouseUpHandler = (event: MouseEvent<HTMLElement>) => {\n    onMouseUp();\n  };\n\n  const onMouseMoveHandler = (event: MouseEvent<HTMLElement>) => {\n    if (isActive) {\n      if (sceneWrapperRef.current) {\n        const rect = sceneWrapperRef.current.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        onMouseMove(x, y);\n      }\n    }\n  };\n\n  const width = Math.abs(end.x - start.x);\n  const height = Math.abs(end.y - start.y);\n  const top = Math.min(end.x, start.x);\n  const left = Math.min(end.y, start.y);\n\n  // @TODO: czy chce odznaczać zaznaczenie po wyjściu poza teren edytora?\n\n  return (\n    <div\n      className={\"mouse-selection\"}\n      ref={sceneWrapperRef}\n      onMouseDown={onMouseDownHandler}\n      onMouseUp={onMouseUpHandler}\n      // onMouseLeave={onMouseUpHandler}\n      onMouseMove={onMouseMoveHandler}\n      style={{\n        zIndex: isActive ? 23 : 9,\n      }}\n    >\n      {isActive ? (\n        <div\n          style={{\n            width,\n            height,\n            backgroundColor: \"rgba(0,0,0, 0.05)\",\n            border: \"1px solid rgba(0,0,0,.3)\",\n            transform: getTranslate3dCss(top, left),\n          }}\n        ></div>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\nimport { MouseSelection } from \"../operations/MouseSelection\";\n\nexport const MouseSelectionBeads = ({ isVisible }) => {\n  const dispatch = useDispatch();\n\n  const onMouseDown = (x, y) => {\n    dispatch(Actions.MouseSelection.action_onEditBeadsMouseDown(x, y));\n  };\n\n  const onMouseMove = (x, y) => {\n    dispatch(Actions.MouseSelection.action_onEditBeadsMouseMove(x, y));\n  };\n\n  const onMouseUp = () => {\n    dispatch(Actions.MouseSelection.action_onEditBeadsMouseUp());\n  };\n\n  return (\n    <MouseSelection\n      isVisible={isVisible}\n      onMouseDown={onMouseDown}\n      onMouseMove={onMouseMove}\n      onMouseUp={onMouseUp}\n    />\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\nimport { MouseSelection } from \"../operations/MouseSelection\";\n\nexport const MouseSelectionLines = ({ isVisible }) => {\n  const dispatch = useDispatch();\n\n  const onMouseDown = (x, y) => {\n    dispatch(Actions.MouseSelection.action_onEditLinesMouseDown(x, y));\n  };\n\n  const onMouseMove = (x, y) => {\n    dispatch(Actions.MouseSelection.action_onEditLinesMouseMove(x, y));\n  };\n\n  const onMouseUp = () => {\n    dispatch(Actions.MouseSelection.action_onEditLinesMouseUp());\n  };\n\n  return (\n    <MouseSelection\n      isVisible={isVisible}\n      onMouseDown={onMouseDown}\n      onMouseMove={onMouseMove}\n      onMouseUp={onMouseUp}\n    />\n  );\n};\n","import React from \"react\";\nimport { Bead, BeadTypes } from \"../../editorObjects/Editor\";\nimport { getTranslate3dCss } from \"../operations/MapValuesToCss\";\nimport { Actions } from \"../../store\";\nimport { useDispatch } from \"react-redux\";\n\nexport const DisplayBead = (props: {\n  bead: Bead;\n  opacity?: number;\n  zIndex?: number;\n  isSelected: boolean;\n  isSelectable: boolean;\n}) => {\n  const { bead, opacity, zIndex, isSelected, isSelectable } = props;\n  const isOpacity = opacity !== undefined && opacity >= 0 && opacity <= 1;\n  const isZindex = zIndex !== undefined && zIndex >= 0 && zIndex <= 9999;\n\n  const dispatch = useDispatch();\n  const onClick = () => {\n    if (isSelectable) {\n      dispatch(Actions.Draggable.action_onClickBead(bead.id));\n    }\n  };\n\n  const translate3d = getTranslate3dCss(bead.position.x, bead.position.y);\n  const rotate = bead.rotate ? `rotate(${bead.rotate}deg)` : \"\";\n  let styles: React.CSSProperties = {\n    transform: `${translate3d} ${rotate}`,\n    opacity: isOpacity ? opacity : 1,\n    zIndex: isZindex ? zIndex : undefined,\n    border: isSelected ? \"1px solid #000\" : \"\",\n    width: `${bead.width}px`,\n    height: `${bead.height}px`,\n    background: bead.color,\n  };\n\n  if (bead.type === BeadTypes.BasicEllipse) {\n    styles.borderRadius = \"100%\";\n  }\n\n  return (\n    <div className=\"bead-item\" onClick={onClick} style={styles}>\n      &nbsp;\n    </div>\n  );\n};\n","import React from \"react\";\nimport { DisplayBead } from \"./DisplayBead\";\nimport { useSelector } from \"react-redux\";\nimport { Editor, EditorMode } from \"../../editorObjects/Editor\";\n\nexport const DisplayBeads = ({ mode }) => {\n  const fadeOut = mode === EditorMode.EditLines;\n  const onTop = mode === EditorMode.EditBeads;\n  const isSelectable = mode === EditorMode.EditBeads;\n  const beads = useSelector((state: Editor) => {\n    return Object.values(state.appData.beads);\n  });\n  const selectedBeadsIds = useSelector((state: Editor) => {\n    return state.ui.selectedBeadsIds;\n  });\n\n  return (\n    <React.Fragment>\n      {beads.map(bead => {\n        return (\n          // <React.Fragment key={bead.id} />\n          <DisplayBead\n            key={bead.id}\n            bead={bead}\n            opacity={fadeOut ? 0.5 : 1}\n            isSelected={selectedBeadsIds[bead.id] !== undefined}\n            isSelectable={isSelectable}\n            zIndex={fadeOut ? 10 : onTop ? 20 : undefined}\n          />\n        );\n      })}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { getDistanceBetweenPoints, getRotate } from \"../../editorObjects/Point\";\nimport { getTranslate3dCss, getRotateCss } from \"../operations/MapValuesToCss\";\n\nexport const SelectionStraightLine = ({ start, end, onClick }) => {\n  const size = 0;\n  const height = 10;\n  const width = getDistanceBetweenPoints(start, end);\n  const rotate = getRotate(end.y - start.y, end.x - start.x);\n\n  return (\n    <div\n      style={{\n        height,\n        width,\n        backgroundColor: \"rgba(0,0,0,0.0)\",\n        transform: `${getTranslate3dCss(\n          start.x + size,\n          start.y + size\n        )} ${getRotateCss(rotate)}`,\n        transformOrigin: \"left center\",\n        cursor: \"pointer\",\n        zIndex: 20,\n      }}\n      onClick={onClick}\n      className=\"line\"\n    >\n      &nbsp;\n    </div>\n  );\n};\n","import React from \"react\";\nimport { getDistanceBetweenPoints, getRotate } from \"../../editorObjects/Point\";\nimport { getTranslate3dCss, getRotateCss } from \"../operations/MapValuesToCss\";\nimport { DraggableCore, DraggableData } from \"react-draggable\";\nimport { useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\n\nexport const SelectedStraightLine = ({ lineId, start, end }) => {\n  const size = 0;\n  const height = 10;\n  const width = getDistanceBetweenPoints(start, end);\n  const rotate = getRotate(end.y - start.y, end.x - start.x);\n\n  const dispatch = useDispatch();\n\n  const eventHandlerEndLine = (_, { deltaX, deltaY }: DraggableData) => {\n    dispatch(Actions.Draggable.action_onLineDrag(lineId, { deltaX, deltaY }));\n  };\n\n  return (\n    <DraggableCore\n      onStart={eventHandlerEndLine}\n      onDrag={eventHandlerEndLine}\n      onStop={eventHandlerEndLine}\n      disabled={false}\n      scale={1}\n    >\n      <div\n        style={{\n          height,\n          width,\n          backgroundColor: \"rgba(0,0,0,0.05)\",\n          border: \"1px dashed rgba(0,0,0,0.60)\",\n          transform: `${getTranslate3dCss(\n            start.x + size,\n            start.y + size\n          )} ${getRotateCss(rotate)}`,\n          transformOrigin: \"left center\",\n          cursor: \"move\",\n          zIndex: 21,\n        }}\n        className=\"line\"\n      >\n        &nbsp;\n      </div>\n    </DraggableCore>\n  );\n};\n","import React from \"react\";\nimport { Line } from \"../../editorObjects/Editor\";\nimport { StraightLine } from \"./StraightLine\";\nimport { DraggableData, DraggableCore } from \"react-draggable\";\nimport { SelectionStraightLine } from \"./SelectionStraightLine\";\nimport { SelectedStraightLine } from \"./SelectedStraightLine\";\nimport { getTranslate3dCss } from \"../operations/MapValuesToCss\";\nimport { useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\n\nexport const DisplayLine = (props: { line: Line; isSelected: boolean }) => {\n  const { isSelected, line } = props;\n  const dispatch = useDispatch();\n  const eventHandlerStartPoint = (_, { x, y }: DraggableData) => {\n    dispatch(Actions.Draggable.action_onStartPointDrag(line.id, { x, y }));\n  };\n  const eventHandlerEndPoint = (_, { x, y }: DraggableData) => {\n    dispatch(Actions.Draggable.action_onEndPointDrag(line.id, { x, y }));\n  };\n  const onClick = () => {\n    dispatch(Actions.Draggable.action_onClickLine(line.id));\n  };\n  const itemWidth = 10;\n  const itemHeight = 10;\n\n  return (\n    <div>\n      <DraggableCore\n        onStart={eventHandlerStartPoint}\n        onDrag={eventHandlerStartPoint}\n        onStop={eventHandlerStartPoint}\n        scale={1}\n        disabled={false}\n      >\n        <div\n          style={{\n            transform: getTranslate3dCss(line.start.x, line.start.y),\n            zIndex: isSelected === true ? 22 : 21,\n            width: itemWidth,\n            height: itemHeight,\n          }}\n          className={\"line-start\"}\n        >\n          &nbsp;\n        </div>\n      </DraggableCore>\n\n      <DraggableCore\n        onStart={eventHandlerEndPoint}\n        onDrag={eventHandlerEndPoint}\n        onStop={eventHandlerEndPoint}\n        disabled={false}\n        scale={1}\n      >\n        <div\n          style={{\n            transform: getTranslate3dCss(line.end.x, line.end.y),\n            zIndex: isSelected === true ? 22 : 21,\n            width: itemWidth,\n            height: itemHeight,\n          }}\n          className={\"line-end\"}\n        >\n          &nbsp;\n        </div>\n      </DraggableCore>\n\n      {isSelected === true ? (\n        <SelectedStraightLine\n          start={line.start}\n          end={line.end}\n          lineId={line.id}\n        />\n      ) : (\n        <SelectionStraightLine\n          start={line.start}\n          end={line.end}\n          onClick={onClick}\n        />\n      )}\n\n      <StraightLine start={line.start} end={line.end} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { DisplayLine } from \"./DisplayLine\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\n\nexport const DraggableLines = ({ lines, selectedLinesIds }) => {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      {lines.map(line => {\n        return (\n          <DisplayLine\n            key={line.id}\n            line={line}\n            isSelected={selectedLinesIds[line.id] !== undefined}\n          />\n        );\n      })}\n    </DndProvider>\n  );\n};\n","import React from \"react\";\nimport { Line } from \"../../editorObjects/Editor\";\nimport { StraightLine } from \"./StraightLine\";\n\nexport const DisplaySimpleLine = (props: { line: Line }) => {\n  const { line } = props;\n  return (\n    <div>\n      <StraightLine start={line.start} end={line.end} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { EditorMode, Editor } from \"../../editorObjects/Editor\";\nimport { DraggableLines } from \"./DraggableLines\";\nimport { DisplaySimpleLine } from \"./DisplaySimpleLine\";\nimport { useSelector } from \"react-redux\";\n\nexport const DisplayLines = ({ mode }) => {\n  const isEditable = mode === EditorMode.EditLines;\n  const lines = useSelector((state: Editor) => {\n    return Object.values(state.appData.lines);\n  });\n  const selectedLinesIds = useSelector((state: Editor) => {\n    return state.ui.selectedLinesIds;\n  });\n\n  const isHidden = mode === EditorMode.Idle;\n  \n  if (isHidden) {\n    return <React.Fragment />;\n  }\n\n  if (isEditable) {\n    return <DraggableLines lines={lines} selectedLinesIds={selectedLinesIds} />;\n  }\n\n  return (\n    <React.Fragment>\n      {lines.map(line => {\n        return <DisplaySimpleLine key={line.id} line={line} />;\n      })}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { getTranslate3dCss } from \"./MapValuesToCss\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { DraggableCore } from \"react-draggable\";\n\nexport const DisplayGroupLines = ({ location, onDrag }) => {\n  const { x, y, w, h } = location;\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <DraggableCore\n        onStart={onDrag}\n        onDrag={onDrag}\n        onStop={onDrag}\n        scale={1}\n        disabled={false}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: w,\n            height: h,\n            transform: getTranslate3dCss(x, y),\n            opacity: 1,\n            zIndex: 22,\n            border: \"1px dashed rgba(0,0,0,0.2)\",\n            background: \"rgba(0,0,0,0.05)\",\n            cursor: \"move\",\n          }}\n        >\n          &nbsp;\n        </div>\n      </DraggableCore>\n    </DndProvider>\n  );\n};\n","import { Editor } from \"../../editorObjects/Editor\";\n\nexport const getGroupPositionFromLines = (selectedLines): { x; y; w; h } => {\n  let xMin: number = Number.MAX_SAFE_INTEGER;\n  let xMax: number = Number.MAX_SAFE_INTEGER * -1;\n  let yMin: number = Number.MAX_SAFE_INTEGER;\n  let yMax: number = Number.MAX_SAFE_INTEGER * -1;\n  selectedLines.forEach(line => {\n    const start = line.start;\n    const end = line.end;\n    xMin = Math.min(xMin, start.x, end.x);\n    xMax = Math.max(xMax, start.x, end.x);\n    yMin = Math.min(yMin, start.y, end.y);\n    yMax = Math.max(yMax, start.y, end.y);\n  });\n  return {\n    x: xMin,\n    y: yMin,\n    w: xMax - xMin + 10,\n    h: yMax - yMin + 10,\n  };\n};\n\nexport const getSelectedLines = (state: Editor) => {\n  return Object.keys(state.ui.selectedLinesIds).map(lineId => {\n    return state.appData.lines[lineId];\n  });\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\nimport { DraggableData } from \"react-draggable\";\nimport { DisplayGroupLines } from \"./DisplayGroupLines\";\nimport { getGroupPositionFromLines, getSelectedLines } from \"./getGroupPositionFromLines\";\n\nexport const DisplayLinesGroup = ({ selectedLinesIdsCount }) => {\n  const dispatch = useDispatch();\n  const selectedLines = useSelector(getSelectedLines);\n  const location = getGroupPositionFromLines(selectedLines);\n  const eventDragHandler = (_, { deltaX, deltaY }: DraggableData) => {\n    dispatch(Actions.Draggable.action_onGroupLineDrag({ deltaX, deltaY }));\n  };\n  return <DisplayGroupLines location={location} onDrag={eventDragHandler} />;\n};\n\nexport const MemoizedDisplayLinesGroup = React.memo(DisplayLinesGroup);\n","import React from \"react\";\nimport { getTranslate3dCss } from \"./MapValuesToCss\";\n\nexport const DisplayGroupBeads = ({ location }) => {\n  const { x, y, w, h } = location;\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: w,\n        height: h,\n        transform: getTranslate3dCss(x, y),\n        opacity: 1,\n        zIndex: 22,\n        border: \"1px dashed rgba(0,0,0,0.2)\",\n        background: \"rgba(0,0,0,0.05)\",\n      }}\n    >\n      &nbsp;\n    </div>\n  );\n};\n","import { Editor } from \"../../editorObjects/Editor\";\n\nexport const getGroupPositionFromBeads = (selectedBeads): { x; y; w; h } => {\n  let xMin: number = Number.MAX_SAFE_INTEGER;\n  let xMax: number = Number.MAX_SAFE_INTEGER * -1;\n  let yMin: number = Number.MAX_SAFE_INTEGER;\n  let yMax: number = Number.MAX_SAFE_INTEGER * -1;\n  selectedBeads.forEach(bead => {\n    const startX = bead.position.x;\n    const endX = bead.position.x + 10;\n    const startY = bead.position.y;\n    const endY = bead.position.y + 10;\n    xMin = Math.min(xMin, startX, endX);\n    xMax = Math.max(xMax, startX, endX);\n    yMin = Math.min(yMin, startY, endY);\n    yMax = Math.max(yMax, startY, endY);\n  });\n  return {\n    x: xMin,\n    y: yMin,\n    w: xMax - xMin + 10,\n    h: yMax - yMin + 10,\n  };\n};\n\nexport const getSelectedBeads = (state: Editor) => {\n  return Object.keys(state.ui.selectedBeadsIds).map(beadId => {\n    return state.appData.beads[beadId];\n  });\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { DisplayGroupBeads } from \"./DisplayGroupBeads\";\nimport {\n  getSelectedBeads,\n  getGroupPositionFromBeads,\n} from \"./getGroupPositionFromBeads\";\n\nconst DisplayBeadsGroup = ({ selectedBeadsIdsCount }) => {\n  const selectedBead = useSelector(getSelectedBeads);\n  const location = getGroupPositionFromBeads(selectedBead);\n\n  return <DisplayGroupBeads location={location} />;\n};\n\nexport const MemoizedDisplayBeadsGroup = React.memo(DisplayBeadsGroup);\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Editor, EditorMode } from \"../../editorObjects/Editor\";\nimport { MemoizedDisplayLinesGroup } from \"./DisplayLinesGroup\";\nimport { MemoizedDisplayBeadsGroup } from \"./DisplayBeadsGroup\";\n\nexport const GroupSelectionPlaceholder = ({ mode }) => {\n  const selectedBeadsIdsCount = useSelector((state: Editor) => {\n    return state.ui.selectedBeadsIdsCount;\n  });\n  \n  const selectedLinesIdsCount = useSelector((state: Editor) => {\n    return state.ui.selectedLinesIdsCount;\n  });\n  \n  if (mode === EditorMode.EditBeads && selectedBeadsIdsCount >= 2) {\n    return (\n      <MemoizedDisplayBeadsGroup\n        selectedBeadsIdsCount={selectedBeadsIdsCount}\n      />\n    );\n  }\n\n  if (mode === EditorMode.EditLines && selectedLinesIdsCount >= 2) {\n    return (\n      <MemoizedDisplayLinesGroup\n        selectedLinesIdsCount={selectedLinesIdsCount}\n      />\n    );\n  }\n  return <React.Fragment />;\n};\n","import React from \"react\";\nimport { DisplayBead } from \"../../Bead/DisplayBead\";\nimport { buildBead } from \"../../../editorObjects/Bead\";\nimport { buildPoint } from \"../../../editorObjects/Point\";\n\nexport const FieldBeadPreview = ({ bead }) => {\n  const displayBead = buildBead({\n    ...bead,\n    position: buildPoint(0, 0),\n  });\n  return (\n    <div\n      style={{\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100px\",\n        boxSizing: \"border-box\",\n      }}\n    >\n      <div\n        style={{\n          position: \"relative\",\n          top: `${(-1 * bead.height) / 2}px`,\n          left: `${(-1 * bead.width) / 2}px`,\n        }}\n      >\n        <DisplayBead\n          bead={displayBead}\n          isSelected={false}\n          isSelectable={false}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const ToolbarField = ({ label, icon, value, onToggle }) => {\n  return (\n    <div\n      className={\"fieldset\"}\n      onClick={onToggle}\n      style={{ cursor: \"pointer\" }}\n    >\n      <div className=\"label\">\n        {icon ? (\n          <div\n            style={{\n              width: \"30px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"30px\",\n              marginRight: \"10px\",\n            }}\n          >\n            {icon}\n          </div>\n        ) : null}\n        {label ? <div>{label}</div> : null}\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\",\n          boxSizing: \"border-box\",\n          paddingLeft: \"10px\",\n          paddingRight: \"20px\",\n          width: \"100%\",\n        }}\n      >\n        <div>{value !== undefined ? value : \"-\"}</div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ToolbarField } from \"./ToolbarField\";\n\nexport const ToolbarFieldSet = ({ selected, label, icon, children }) => {\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\n  const onToggle = () => {\n    setIsPickerOpen(!isPickerOpen);\n  };\n  return (\n    <div\n      style={{\n        // borderBottom: \"1px solid #dfdfdf\",\n        borderTop: \"1px solid #dfdfdf\",\n      }}\n    >\n      <ToolbarField\n        label={label}\n        onToggle={onToggle}\n        icon={icon}\n        value={selected}\n      />\n\n      {isPickerOpen === true ? (\n        <div style={{ background: \"#fff\" }}>{React.cloneElement(children)}</div>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport * as material from \"material-colors\";\n\nexport const FieldColorPicker = ({ value, onChange, ...props }) => {\n  const colors = [\n    [\n      material.red[\"900\"],\n      material.red[\"700\"],\n      material.red[\"500\"],\n      material.red[\"300\"],\n      material.red[\"100\"],\n    ],\n    [\n      material.pink[\"900\"],\n      material.pink[\"700\"],\n      material.pink[\"500\"],\n      material.pink[\"300\"],\n      material.pink[\"100\"],\n    ],\n    [\n      material.purple[\"900\"],\n      material.purple[\"700\"],\n      material.purple[\"500\"],\n      material.purple[\"300\"],\n      material.purple[\"100\"],\n    ],\n    [\n      material.deepPurple[\"900\"],\n      material.deepPurple[\"700\"],\n      material.deepPurple[\"500\"],\n      material.deepPurple[\"300\"],\n      material.deepPurple[\"100\"],\n    ],\n    [\n      material.indigo[\"900\"],\n      material.indigo[\"700\"],\n      material.indigo[\"500\"],\n      material.indigo[\"300\"],\n      material.indigo[\"100\"],\n    ],\n    [\n      material.blue[\"900\"],\n      material.blue[\"700\"],\n      material.blue[\"500\"],\n      material.blue[\"300\"],\n      material.blue[\"100\"],\n    ],\n    [\n      material.lightBlue[\"900\"],\n      material.lightBlue[\"700\"],\n      material.lightBlue[\"500\"],\n      material.lightBlue[\"300\"],\n      material.lightBlue[\"100\"],\n    ],\n    [\n      material.cyan[\"900\"],\n      material.cyan[\"700\"],\n      material.cyan[\"500\"],\n      material.cyan[\"300\"],\n      material.cyan[\"100\"],\n    ],\n    [\n      material.teal[\"900\"],\n      material.teal[\"700\"],\n      material.teal[\"500\"],\n      material.teal[\"300\"],\n      material.teal[\"100\"],\n    ],\n    [\n      \"#194D33\",\n      material.green[\"700\"],\n      material.green[\"500\"],\n      material.green[\"300\"],\n      material.green[\"100\"],\n    ],\n    [\n      material.lightGreen[\"900\"],\n      material.lightGreen[\"700\"],\n      material.lightGreen[\"500\"],\n      material.lightGreen[\"300\"],\n      material.lightGreen[\"100\"],\n    ],\n    [\n      material.lime[\"900\"],\n      material.lime[\"700\"],\n      material.lime[\"500\"],\n      material.lime[\"300\"],\n      material.lime[\"100\"],\n    ],\n    [\n      material.yellow[\"900\"],\n      material.yellow[\"700\"],\n      material.yellow[\"500\"],\n      material.yellow[\"300\"],\n      material.yellow[\"100\"],\n    ],\n    [\n      material.amber[\"900\"],\n      material.amber[\"700\"],\n      material.amber[\"500\"],\n      material.amber[\"300\"],\n      material.amber[\"100\"],\n    ],\n    [\n      material.orange[\"900\"],\n      material.orange[\"700\"],\n      material.orange[\"500\"],\n      material.orange[\"300\"],\n      material.orange[\"100\"],\n    ],\n    [\n      material.deepOrange[\"900\"],\n      material.deepOrange[\"700\"],\n      material.deepOrange[\"500\"],\n      material.deepOrange[\"300\"],\n      material.deepOrange[\"100\"],\n    ],\n    [\n      material.brown[\"900\"],\n      material.brown[\"700\"],\n      material.brown[\"500\"],\n      material.brown[\"300\"],\n      material.brown[\"100\"],\n    ],\n    [\n      material.blueGrey[\"900\"],\n      material.blueGrey[\"700\"],\n      material.blueGrey[\"500\"],\n      material.blueGrey[\"300\"],\n      material.blueGrey[\"100\"],\n    ],\n    [\"#000000\", \"#525252\", \"#969696\", \"#D9D9D9\", \"#FFFFFF\"],\n  ];\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        paddingTop: \"20px\",\n        paddingBottom: \"30px\",\n        paddingLeft: \"20px\",\n        paddingRight: \"20px\",\n      }}\n    >\n      <DisplayColorsGroup colors={colors} onClick={onChange} />\n      {/* <CirclePicker\n        color={value}\n        onChangeComplete={color => onChange(color.hex)}\n        colors={[\"#000\"]}\n      /> */}\n      {/* <SwatchesPicker\n        width={258}\n        height={240}\n        onChangeComplete={color => onChange(color.hex)}\n        color={value}\n      /> */}\n    </div>\n  );\n};\n\nconst DisplayColorsGroup = ({ colors, onClick }) => {\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {colors.map(group => {\n          return (\n            <div key={group.toString()} style={{ marginBottom: \"10px\" }}>\n              {group.map(color => {\n                return (\n                  <div\n                    key={color}\n                    style={{\n                      cursor: \"pointer\",\n                      border: \"3px solid transparent\",\n                      boxSizing: \"border-box\",\n                    }}\n                  >\n                    <div\n                      onClick={() => onClick(color)}\n                      style={{\n                        boxSizing: \"border-box\",\n                        background: color,\n                        width: \"28px\",\n                        height: \"28px\",\n                        borderRadius: \"100%\",\n                        border: \"none\",\n                      }}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\n\n\n// const colors = [\n//   material.red[\"900\"],\n//   material.red[\"700\"],\n//   material.red[\"500\"],\n//   material.red[\"300\"],\n//   material.red[\"100\"],\n//   material.pink[\"900\"],\n//   material.pink[\"700\"],\n//   material.pink[\"500\"],\n//   material.pink[\"300\"],\n//   material.pink[\"100\"],\n//   material.purple[\"900\"],\n//   material.purple[\"700\"],\n//   material.purple[\"500\"],\n//   material.purple[\"300\"],\n//   material.purple[\"100\"],\n//   material.deepPurple[\"900\"],\n//   material.deepPurple[\"700\"],\n//   material.deepPurple[\"500\"],\n//   material.deepPurple[\"300\"],\n//   material.deepPurple[\"100\"],\n//   material.indigo[\"900\"],\n//   material.indigo[\"700\"],\n//   material.indigo[\"500\"],\n//   material.indigo[\"300\"],\n//   material.indigo[\"100\"],\n//   material.blue[\"900\"],\n//   material.blue[\"700\"],\n//   material.blue[\"500\"],\n//   material.blue[\"300\"],\n//   material.blue[\"100\"],\n//   material.lightBlue[\"900\"],\n//   material.lightBlue[\"700\"],\n//   material.lightBlue[\"500\"],\n//   material.lightBlue[\"300\"],\n//   material.lightBlue[\"100\"],\n//   material.cyan[\"900\"],\n//   material.cyan[\"700\"],\n//   material.cyan[\"500\"],\n//   material.cyan[\"300\"],\n//   material.cyan[\"100\"],\n//   material.teal[\"900\"],\n//   material.teal[\"700\"],\n//   material.teal[\"500\"],\n//   material.teal[\"300\"],\n//   material.teal[\"100\"],\n//   \"#194D33\",\n//   material.green[\"700\"],\n//   material.green[\"500\"],\n//   material.green[\"300\"],\n//   material.green[\"100\"],\n//   material.lightGreen[\"900\"],\n//   material.lightGreen[\"700\"],\n//   material.lightGreen[\"500\"],\n//   material.lightGreen[\"300\"],\n//   material.lightGreen[\"100\"],\n//   material.lime[\"900\"],\n//   material.lime[\"700\"],\n//   material.lime[\"500\"],\n//   material.lime[\"300\"],\n//   material.lime[\"100\"],\n//   material.yellow[\"900\"],\n//   material.yellow[\"700\"],\n//   material.yellow[\"500\"],\n//   material.yellow[\"300\"],\n//   material.yellow[\"100\"],\n//   material.amber[\"900\"],\n//   material.amber[\"700\"],\n//   material.amber[\"500\"],\n//   material.amber[\"300\"],\n//   material.amber[\"100\"],\n//   material.orange[\"900\"],\n//   material.orange[\"700\"],\n//   material.orange[\"500\"],\n//   material.orange[\"300\"],\n//   material.orange[\"100\"],\n//   material.deepOrange[\"900\"],\n//   material.deepOrange[\"700\"],\n//   material.deepOrange[\"500\"],\n//   material.deepOrange[\"300\"],\n//   material.deepOrange[\"100\"],\n//   material.brown[\"900\"],\n//   material.brown[\"700\"],\n//   material.brown[\"500\"],\n//   material.brown[\"300\"],\n//   material.brown[\"100\"],\n//   material.blueGrey[\"900\"],\n//   material.blueGrey[\"700\"],\n//   material.blueGrey[\"500\"],\n//   material.blueGrey[\"300\"],\n//   material.blueGrey[\"100\"],\n\n//   \"#000000\",\n//   \"#525252\",\n//   \"#969696\",\n//   \"#D9D9D9\",\n//   \"#FFFFFF\",\n// ];\n","import React from \"react\";\n\nexport const FieldColor = ({ value, isSelected, onClick }) => {\n  return (\n    <div style={{ border: \"5px solid transparent\" }}>\n      <div\n        onClick={onClick ? () => onClick(value) : undefined}\n        style={{\n          width: 25,\n          height: 25,\n          background: value,\n          marginBottom: 0,\n          marginRight: 0,\n          border: isSelected ? \"2px solid #000\" : \"2px solid #000\",\n          boxShadow: isSelected\n            ? \"2px 2px 2px rgba(0,0,0,1)\"\n            : \"2px 2px 2px rgba(0,0,0,0.1)\",\n        }}\n      ></div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { uiButton } from \"../../colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPalette } from \"@fortawesome/free-solid-svg-icons\";\nimport { ToolbarFieldSet } from \"./ToolbarFieldSet\";\nimport { FieldColorPicker } from \"./FieldColorPicker\";\nimport { FieldColor } from \"./FieldColor\";\n\nexport const FieldsetColor = ({ value, onChange }) => {\n  return (\n    <ToolbarFieldSet\n      selected={\n        <FieldColor value={value} isSelected={false} onClick={undefined} />\n      }\n      label={\"Color\"}\n      icon={<FontAwesomeIcon icon={faPalette} color={uiButton} size={\"lg\"} />}\n    >\n      <FieldColorPicker value={value} onChange={onChange} />\n    </ToolbarFieldSet>\n  );\n};\n","import React from \"react\";\nimport { BeadTypes } from \"../../../editorObjects/Editor\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircle, faExpand } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const BeadTypesIcons = {\n  [BeadTypes.BasicEllipse]: \"circle\",\n  [BeadTypes.BasicRectangle]: \"rectangle-wide\",\n};\n\nexport const FieldBeadTypePicker = ({ value, onChange }) => {\n  return (\n    <DisplayAvailableBeadTypes\n      types={BeadTypesIcons}\n      selectedType={value}\n      onClick={onChange}\n    />\n  );\n};\n\nconst DisplayAvailableBeadTypes = ({ types, selectedType, onClick }) => {\n  console.log(\"jak jest?\", types);\n  return (\n    <div className=\"fieldset\" style={{}}>\n      <div className=\"label\"></div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          boxSizing: \"border-box\",\n          paddingLeft: \"10px\",\n          paddingRight: \"20px\",\n          width: \"100%\",\n        }}\n      >\n        {Object.keys(types).map((type, index) => {\n          return (\n            <DisplayBeadType\n              icon={types[type]}\n              type={type}\n              key={index}\n              isSelected={selectedType === type}\n              onClick={onClick}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport const DisplayBeadType = ({ icon, type, isSelected, onClick }) => {\n  return (\n    <div style={{ border: \"5px solid transparent\" }}>\n      <div\n        onClick={onClick ? () => onClick(type) : undefined}\n        style={{\n          width: 25,\n          height: 25,\n          background: \"#eee\",\n          marginBottom: 0,\n          marginRight: 0,\n          border: isSelected ? \"2px solid #000\" : \"2px solid #000\",\n          boxShadow: isSelected\n            ? \"2px 2px 2px rgba(0,0,0,1)\"\n            : \"2px 2px 2px rgba(0,0,0,0.1)\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {icon === \"circle\" ? <FontAwesomeIcon icon={faCircle} /> : null}\n        {icon === \"rectangle-wide\" ? <FontAwesomeIcon icon={faExpand} /> : null}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { uiButton } from \"../../colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShapes } from \"@fortawesome/free-solid-svg-icons\";\nimport { ToolbarFieldSet } from \"./ToolbarFieldSet\";\nimport {\n  FieldBeadTypePicker,\n  BeadTypesIcons,\n  DisplayBeadType,\n} from \"./FieldBeadTypePicker\";\n\nexport const FieldsetBeadType = ({ value, onChange }) => {\n  return (\n    <ToolbarFieldSet\n      selected={\n        <DisplayBeadType\n          icon={value ? BeadTypesIcons[value] : undefined}\n          type={value}\n          isSelected={false}\n          onClick={undefined}\n        />\n      }\n      label={\"Type\"}\n      icon={<FontAwesomeIcon icon={faShapes} color={uiButton} size={\"lg\"} />}\n    >\n      <FieldBeadTypePicker value={value} onChange={onChange} />\n    </ToolbarFieldSet>\n  );\n};\n","import React from \"react\";\nimport \"rc-slider/assets/index.css\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\n\nexport const SliderWithTooltip = createSliderWithTooltip(Slider);\n\nexport const FieldSlider = ({ value, onChange, ...props }) => {\n  return (\n    <div\n      style={{\n        background: \"#fff\",\n        width: \"100%\",\n        paddingTop: \"20px\",\n        paddingBottom: \"30px\",\n        paddingLeft: \"20px\",\n        paddingRight: \"20px\",\n      }}\n    >\n      <SliderWithTooltip\n        max={100}\n        min={1}\n        step={1}\n        value={value}\n        onChange={value => onChange(value)}\n        defaultValue={10}\n        marks={{\n          0: \"0\",\n          50: \"50\",\n          100: \"100\",\n        }}\n        {...props}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const FieldCheckbox = ({ label, value, onChange, isDisabled }) => {\n  return (\n    <div className={\"fieldset\"}>\n      <div className=\"label\">{label}</div>\n      <input\n        type=\"checkbox\"\n        disabled={isDisabled}\n        value={value === true ? 1 : 0}\n        checked={value === true}\n        onChange={event => onChange(event.target.value === \"0\")}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { uiButton } from \"../../colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDivide } from \"@fortawesome/free-solid-svg-icons\";\nimport { ToolbarFieldSet } from \"./ToolbarFieldSet\";\nimport { SliderWithTooltip } from \"./FieldSlider\";\nimport { FieldCheckbox } from \"./FieldCheckbox\";\n\nexport const FieldsetBeadSpacing = ({\n  beadsAutoSpacing,\n  beadsSpacing,\n  onChange_beadsSpacing,\n  onChange_beadsAutoSpacing,\n}) => {\n  const label =\n    beadsAutoSpacing === true\n      ? \"auto\"\n      : beadsSpacing === undefined\n      ? \"0\"\n      : beadsSpacing;\n  return (\n    <ToolbarFieldSet\n      selected={label}\n      label={\"Spacing\"}\n      icon={\n        <FontAwesomeIcon\n          icon={faDivide}\n          color={uiButton}\n          size={\"lg\"}\n          style={{ transform: \"rotate(90deg)\" }}\n        />\n      }\n    >\n      <div>\n        <div style={{ width: \"100%\" }}>\n          <FieldCheckbox\n            label={\"Auto \"}\n            value={beadsAutoSpacing}\n            onChange={onChange_beadsAutoSpacing}\n            isDisabled={false}\n          />\n        </div>\n\n        <div\n          style={{\n            width: \"100%\",\n            paddingTop: \"20px\",\n            paddingBottom: \"30px\",\n            paddingLeft: \"20px\",\n            paddingRight: \"20px\",\n          }}\n        >\n          <SliderWithTooltip\n            max={100}\n            min={1}\n            step={1}\n            value={beadsSpacing}\n            onChange={value => onChange_beadsSpacing(value)}\n            defaultValue={10}\n            marks={{\n              0: \"0\",\n              50: \"50\",\n              100: \"100\",\n            }}\n          />\n        </div>\n      </div>\n    </ToolbarFieldSet>\n  );\n};\n","import React from \"react\";\nimport { uiButton } from \"../../colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceSix } from \"@fortawesome/free-solid-svg-icons\";\nimport { ToolbarFieldSet } from \"./ToolbarFieldSet\";\nimport { SliderWithTooltip } from \"./FieldSlider\";\nimport { FieldCheckbox } from \"./FieldCheckbox\";\n\nexport const FieldsetBeadCount = ({\n  beadsAutoCount,\n  beadsCount,\n  onChange_beadsCount,\n  onChange_beadsAutoCount,\n}) => {\n  const label =\n    beadsAutoCount === true\n      ? \"auto\"\n      : beadsCount === undefined\n      ? \"0\"\n      : beadsCount;\n\n  const max = 300;\n  return (\n    <ToolbarFieldSet\n      selected={label}\n      label={\"Amount\"}\n      icon={<FontAwesomeIcon icon={faDiceSix} color={uiButton} size={\"lg\"} />}\n    >\n      <div>\n        <div style={{ width: \"100%\" }}>\n          <FieldCheckbox\n            label={\"Auto \"}\n            value={beadsAutoCount}\n            onChange={onChange_beadsAutoCount}\n            isDisabled={false}\n          />\n        </div>\n\n        <div\n          style={{\n            width: \"100%\",\n            paddingTop: \"20px\",\n            paddingBottom: \"30px\",\n            paddingLeft: \"20px\",\n            paddingRight: \"20px\",\n          }}\n        >\n          <SliderWithTooltip\n            max={max}\n            min={1}\n            step={1}\n            value={beadsCount}\n            onChange={value => onChange_beadsCount(value)}\n            defaultValue={10}\n            marks={{\n              1: \"1\",\n              [max / 2]: `${max / 2}`,\n              [max]: `${max}`,\n            }}\n          />\n        </div>\n      </div>\n    </ToolbarFieldSet>\n  );\n};\n","import React from \"react\";\nimport \"rc-slider/assets/index.css\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\n\nexport const SliderWithTooltip = createSliderWithTooltip(Slider);\n\nexport const FieldSliderWithLabel = ({ value, onChange, label, icon }) => {\n  return (\n    <div\n      className={\"fieldset\"}\n      style={{\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        background: \"#fff\",\n        borderBottom: 0,\n      }}\n    >\n      <div className=\"label\" style={{ padding: 0, width: \"105px\" }}>\n        {icon ? (\n          <div\n            style={{\n              width: \"30px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"30px\",\n              marginRight: \"10px\",\n            }}\n          >\n            {icon}\n          </div>\n        ) : null}\n        {label ? <div>{label}</div> : null}\n      </div>\n\n      <div\n        style={{\n          boxSizing: \"border-box\",\n          flexGrow: 1,\n          paddingRight: \"10px\",\n          paddingBottom: \"10px\",\n        }}\n      >\n        <SliderWithTooltip\n          max={100}\n          min={1}\n          step={1}\n          value={value}\n          onChange={value => onChange(value)}\n          defaultValue={10}\n          marks={{\n            0: \"0\",\n            50: \"50\",\n            100: \"100\",\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FieldsetHeight } from \"./FieldsetHeight\";\nimport { FieldsetWidth } from \"./FieldsetWidth\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExpandArrowsAlt,\n  faArrowsAltV,\n  faArrowsAltH,\n  faLink,\n  faUnlink,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { uiButton } from \"../../colors\";\nimport { ToolbarFieldSet } from \"./ToolbarFieldSet\";\nimport { FieldSliderWithLabel } from \"./FieldSliderWithLabel\";\nimport { FieldCheckbox } from \"./FieldCheckbox\";\n\nexport const FieldsetSize = ({\n  height,\n  width,\n  keepAspectRatio,\n  onChange_beadHeight,\n  onChange_beadWidth,\n  onChange_keepAspectRatio,\n}) => {\n  const format = value =>\n    value.toLocaleString(undefined, {\n      maximumFractionDigits: 2,\n      style: \"decimal\",\n    });\n  const value = `${format(width)} x ${format(height)}`;\n  return (\n    <div>\n      <ToolbarFieldSet\n        selected={value}\n        label={\"Size\"}\n        icon={\n          <FontAwesomeIcon\n            icon={faExpandArrowsAlt}\n            color={uiButton}\n            size={\"lg\"}\n          />\n        }\n      >\n        <div>\n          <div style={{ width: \"100%\", background: \"#fff\" }}>\n            <FieldCheckbox\n              label={\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexWrap: \"nowrap\",\n                    justifyContent: \"space\",\n                  }}\n                >\n                  <div\n                    style={{\n                      width: \"30px\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      height: \"30px\",\n                      marginRight: \"10px\",\n                      background: \"#fff\",\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      icon={keepAspectRatio === true ? faLink : faUnlink}\n                      color={uiButton}\n                      size={\"lg\"}\n                    />\n                  </div>\n                  <div>Keep aspect ratio</div>\n                </div>\n              }\n              value={keepAspectRatio}\n              onChange={onChange_keepAspectRatio}\n              isDisabled={false}\n            />\n          </div>\n\n          <FieldSliderWithLabel\n            label={\"Width\"}\n            icon={\n              <FontAwesomeIcon\n                icon={faArrowsAltH}\n                color={uiButton}\n                size={\"lg\"}\n              />\n            }\n            value={width}\n            onChange={onChange_beadWidth}\n          />\n\n          <FieldSliderWithLabel\n            label={\"Height\"}\n            icon={\n              <FontAwesomeIcon\n                icon={faArrowsAltV}\n                color={uiButton}\n                size={\"lg\"}\n              />\n            }\n            value={height}\n            onChange={onChange_beadHeight}\n          />\n        </div>\n      </ToolbarFieldSet>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faClone, faDizzy } from \"@fortawesome/free-solid-svg-icons\";\nimport { uiButton } from \"../../colors\";\n\nexport const FieldDeleteAndCopy = ({ onDelete, onClone, onReset }) => {\n  return (\n    <div\n      className=\"fieldset\"\n      style={{ paddingLeft: \"15px\", paddingRight: \"20px\" }}\n    >\n      <div className=\"field has-addons\">\n        <div className=\"control\">\n          <div className={` button `} onClick={onDelete}>\n            <span className=\"icon is-small\">\n              <FontAwesomeIcon icon={faTrash} color={uiButton} />\n            </span>\n            <span>Delete</span>\n          </div>\n        </div>\n\n        <div className=\"control\">\n          <div className={` button `} onClick={onClone}>\n            <span className=\"icon is-small\">\n              <FontAwesomeIcon icon={faClone} color={uiButton} />\n            </span>\n            <span>Clone</span>\n          </div>\n        </div>\n\n        <div className=\"control\">\n          <div className={` button `} onClick={onReset}>\n            <span className=\"icon is-small\">\n              <FontAwesomeIcon icon={faDizzy} color={uiButton} />\n            </span>\n            <span>Reset beads</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { uiButton } from \"../../colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FieldSlider } from \"./FieldSlider\";\nimport { ToolbarFieldSet } from \"./ToolbarFieldSet\";\n\nexport const FieldsetBeadRotate = ({ value, onChange }) => {\n  return (\n    <ToolbarFieldSet\n      selected={`${value}deg`}\n      label={\"Rotate\"}\n      icon={<FontAwesomeIcon icon={faSyncAlt} color={uiButton} size={\"lg\"} />}\n    >\n      <FieldSlider\n        value={value}\n        onChange={onChange}\n        max={180}\n        min={-180}\n        defaultValue={0}\n        marks={{\n          \"-180\": \"-180\",\n          \"0\": \"0\",\n          \"180\": \"180\",\n        }}\n      />\n    </ToolbarFieldSet>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Editor } from \"../../../editorObjects/Editor\";\nimport { FieldBeadPreview } from \"../ui/FieldBeadPreview\";\nimport { Actions } from \"../../../store\";\nimport { FieldsetWidth } from \"../ui/FieldsetWidth\";\nimport { FieldsetHeight } from \"../ui/FieldsetHeight\";\nimport { FieldsetColor } from \"../ui/FieldsetColor\";\nimport { FieldsetBeadType } from \"../ui/FieldsetBeadType\";\nimport { FieldsetBeadSpacing } from \"../ui/FieldsetBeadSpacing\";\nimport { FieldsetBeadCount } from \"../ui/FieldsetBeadCount\";\nimport { FieldsetSize } from \"../ui/FieldsetSize\";\nimport { FieldDeleteAndCopy } from \"../ui/FieldDeleteAndCopy\";\nimport { FieldsetBeadRotate } from \"../ui/FieldsetBeadRotate\";\n\nexport const ToolbarEditLines = ({ isVisible }) => {\n  if (isVisible === true) {\n    return <ToolbarEditLinesWrapper />;\n  }\n\n  return <React.Fragment />;\n};\n\nconst ToolbarEditLinesWrapper = ({}) => {\n  const showToolbar = useSelector((state: Editor) => {\n    return state.ui.selectedLinesIdsCount >= 1;\n  });\n  if (showToolbar) {\n    return <Content />;\n  }\n  return <React.Fragment />;\n};\n\nconst Content = () => {\n  return (\n    <React.Fragment>\n      <BeadPreview />\n      <BeadSize />\n      <BeadColor />\n      <BeadType />\n      <BeadsSpacing />\n      <BeadsCount />\n      <BeadsRotate />\n      <DeleteAndClone />\n    </React.Fragment>\n  );\n};\n\nconst BeadsRotate = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsRotate = value => {\n    if (!value) {\n      return;\n    }\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_defaultBead_rotate(\n        Number(value)\n      )\n    );\n  };\n\n  return (\n    <FieldsetBeadRotate\n      value={settings.defaultBead.rotate}\n      onChange={onChange_beadsRotate}\n    />\n  );\n};\n\nconst BeadSize = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  const onChange_beadWidth = value => {\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_defaultBead_width(value)\n    );\n  };\n  const onChange_beadHeight = value => {\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_defaultBead_height(value)\n    );\n  };\n  const onChange_keepAspectRatio = value => {\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_defaultBead_keepAspectRatio(\n        value\n      )\n    );\n  };\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  const width = settings.defaultBead.width ? settings.defaultBead.width : 10;\n  const height = settings.defaultBead.height ? settings.defaultBead.height : 10;\n  const keepAspectRatio = settings.defaultBead.keepAspectRatio\n    ? settings.defaultBead.keepAspectRatio\n    : false;\n\n  return (\n    <div>\n      <FieldsetSize\n        height={height}\n        width={width}\n        keepAspectRatio={keepAspectRatio}\n        onChange_beadHeight={onChange_beadHeight}\n        onChange_beadWidth={onChange_beadWidth}\n        onChange_keepAspectRatio={onChange_keepAspectRatio}\n      />\n    </div>\n  );\n};\n\nconst BeadsCount = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsCount = value => {\n    if (!value) {\n      return;\n    }\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_settings_beadsCount(\n        Number(value)\n      )\n    );\n  };\n\n  const onChange_beadsAutoCount = value => {\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_settings_beadsAutoCount(value)\n    );\n  };\n\n  return (\n    <FieldsetBeadCount\n      beadsAutoCount={settings.beadsAutoCount}\n      beadsCount={settings.beadsCount}\n      onChange_beadsAutoCount={onChange_beadsAutoCount}\n      onChange_beadsCount={onChange_beadsCount}\n    />\n  );\n};\n\nconst BeadsSpacing = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsSpacing = value => {\n    if (!value) {\n      return;\n    }\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_settings_beadsSpacing(\n        Number(value)\n      )\n    );\n  };\n\n  const onChange_beadsAutoSpacing = value => {\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_settings_beadsAutoSpacing(\n        value\n      )\n    );\n  };\n\n  return (\n    <FieldsetBeadSpacing\n      beadsAutoSpacing={settings.beadsAutoSpacing}\n      beadsSpacing={settings.beadsSpacing}\n      onChange_beadsAutoSpacing={onChange_beadsAutoSpacing}\n      onChange_beadsSpacing={onChange_beadsSpacing}\n    />\n  );\n};\n\nconst BeadType = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead.type) {\n    return <React.Fragment />;\n  }\n\n  const onSelect = type => {\n    dispatch(Actions.Toolbar.action_changeSelectedLines_defaultBead_type(type));\n  };\n\n  return (\n    <FieldsetBeadType onChange={onSelect} value={settings.defaultBead.type} />\n  );\n};\n\nconst BeadColor = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead.color) {\n    return <React.Fragment />;\n  }\n\n  const onSelect = color => {\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_defaultBead_color(color)\n    );\n  };\n\n  return (\n    <FieldsetColor onChange={onSelect} value={settings.defaultBead.color} />\n  );\n};\n\nconst BeadPreview = () => {\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  return <FieldBeadPreview bead={settings.defaultBead} />;\n};\n\nconst DeleteAndClone = () => {\n  const dispatch = useDispatch();\n  const onDeleteLines = () => {\n    dispatch(Actions.Toolbar.action_deleteSelectedLines());\n  };\n  const onCloneLines = () => {\n    dispatch(Actions.Toolbar.action_cloneSelectedLines());\n  };\n  const onResetBeads = () => {\n    dispatch(Actions.Toolbar.action_resetSelectedLines());\n  };\n\n  return (\n    <React.Fragment>\n      <FieldDeleteAndCopy\n        onDelete={onDeleteLines}\n        onClone={onCloneLines}\n        onReset={onResetBeads}\n      />\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Editor } from \"../../../editorObjects/Editor\";\nimport { FieldBeadPreview } from \"../ui/FieldBeadPreview\";\nimport { Actions } from \"../../../store\";\nimport { FieldsetColor } from \"../ui/FieldsetColor\";\nimport { FieldsetBeadType } from \"../ui/FieldsetBeadType\";\nimport { FieldsetBeadSpacing } from \"../ui/FieldsetBeadSpacing\";\nimport { FieldsetBeadCount } from \"../ui/FieldsetBeadCount\";\nimport { FieldsetSize } from \"../ui/FieldsetSize\";\nimport { FieldDeleteAndCopy } from \"../ui/FieldDeleteAndCopy\";\nimport { FieldsetBeadRotate } from \"../ui/FieldsetBeadRotate\";\n\nexport const ToolbarEditBeads = ({ isVisible }) => {\n  if (isVisible === true) {\n    return <ContentWrapper />;\n  }\n\n  return <React.Fragment />;\n};\n\nconst ContentWrapper = ({}) => {\n  const showToolbar = useSelector((state: Editor) => {\n    return state.ui.selectedBeadsIdsCount >= 1;\n  });\n  if (showToolbar) {\n    return <Content />;\n  }\n  return <React.Fragment />;\n};\n\nconst Content = () => {\n  return (\n    <React.Fragment>\n      <BeadPreview />\n      <BeadSize />\n      <BeadColor />\n      <BeadType />\n      <BeadsRotate />\n    </React.Fragment>\n  );\n};\n\nconst BeadsRotate = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const beadId = Object.keys(state.ui.selectedBeadsIds)[0];\n    return state.appData.beads[beadId];\n  });\n\n  if (!selected) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsRotate = value => {\n    if (!value) {\n      return;\n    }\n    dispatch(Actions.Toolbar.action_changeSelectedBeads_rotate(Number(value)));\n  };\n\n  return (\n    <FieldsetBeadRotate\n      value={selected.rotate}\n      onChange={onChange_beadsRotate}\n    />\n  );\n};\n\nconst BeadSize = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const beadId = Object.keys(state.ui.selectedBeadsIds)[0];\n    return state.appData.beads[beadId];\n  });\n\n  if (!selected) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadWidth = value => {\n    dispatch(Actions.Toolbar.action_changeSelectedBeads_width(value));\n  };\n  const onChange_beadHeight = value => {\n    dispatch(Actions.Toolbar.action_changeSelectedBeads_height(value));\n  };\n  const onChange_keepAspectRatio = value => {\n    dispatch(Actions.Toolbar.action_changeSelectedBeads_keepAspectRatio(value));\n  };\n  const width = selected.width ? selected.width : 10;\n  const height = selected.height ? selected.height : 10;\n  const keepAspectRatio = selected.keepAspectRatio\n    ? selected.keepAspectRatio\n    : false;\n\n  return (\n    <div>\n      <FieldsetSize\n        height={height}\n        width={width}\n        keepAspectRatio={keepAspectRatio}\n        onChange_beadHeight={onChange_beadHeight}\n        onChange_beadWidth={onChange_beadWidth}\n        onChange_keepAspectRatio={onChange_keepAspectRatio}\n      />\n    </div>\n  );\n};\n\nconst BeadType = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const beadId = Object.keys(state.ui.selectedBeadsIds)[0];\n    return state.appData.beads[beadId];\n  });\n\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  if (!selected.type) {\n    return <React.Fragment />;\n  }\n\n  const onSelect = type => {\n    dispatch(Actions.Toolbar.action_changeSelectedBeads_type(type));\n  };\n\n  return <FieldsetBeadType onChange={onSelect} value={selected.type} />;\n};\n\nconst BeadColor = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const beadId = Object.keys(state.ui.selectedBeadsIds)[0];\n    return state.appData.beads[beadId];\n  });\n\n  if (!selected) {\n    return <React.Fragment />;\n  }\n\n  if (!selected.color) {\n    return <React.Fragment />;\n  }\n\n  const onSelect = color => {\n    dispatch(Actions.Toolbar.action_changeSelectedBeads_color(color));\n  };\n\n  return <FieldsetColor onChange={onSelect} value={selected.color} />;\n};\n\nconst BeadPreview = () => {\n  const selected = useSelector((state: Editor) => {\n    const beadId = Object.keys(state.ui.selectedBeadsIds)[0];\n    return state.appData.beads[beadId];\n  });\n\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  return <FieldBeadPreview bead={selected} />;\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Editor } from \"../../../editorObjects/Editor\";\nimport { FieldBeadPreview } from \"../ui/FieldBeadPreview\";\nimport { Actions } from \"../../../store\";\nimport { FieldsetWidth } from \"../ui/FieldsetWidth\";\nimport { FieldsetHeight } from \"../ui/FieldsetHeight\";\nimport { FieldsetColor } from \"../ui/FieldsetColor\";\nimport { FieldsetBeadType } from \"../ui/FieldsetBeadType\";\nimport { FieldsetBeadSpacing } from \"../ui/FieldsetBeadSpacing\";\nimport { FieldsetBeadCount } from \"../ui/FieldsetBeadCount\";\nimport { FieldsetSize } from \"../ui/FieldsetSize\";\nimport { FieldsetBeadRotate } from \"../ui/FieldsetBeadRotate\";\n\nexport const ToolbarAddLine = ({ isVisible }) => {\n  if (isVisible === true) {\n    return <Content />;\n  }\n\n  return <React.Fragment />;\n};\n\nconst Content = () => {\n  return (\n    <React.Fragment>\n      <BeadPreview />\n      <BeadSize />\n      <BeadColor />\n      <BeadType />\n      <BeadsSpacing />\n      <BeadsCount />\n      <BeadsRotate />\n    </React.Fragment>\n  );\n};\n\nconst BeadsRotate = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n  if (!settings) {\n    return <React.Fragment />;\n  }\n\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsRotate = value => {\n    if (!value) {\n      return;\n    }\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadRotate(Number(value)));\n  };\n\n  return (\n    <FieldsetBeadRotate\n      value={settings.defaultBead.rotate}\n      onChange={onChange_beadsRotate}\n    />\n  );\n};\n\nconst BeadSize = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n  const onChange_beadWidth = value => {\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadWidth(value));\n  };\n  const onChange_beadHeight = value => {\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadHeight(value));\n  };\n  const onChange_keepAspectRatio = value => {\n    dispatch(\n      Actions.Toolbar.action_changeDefaultLineBeadKeepAspectRatio(value)\n    );\n  };\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  const width = settings.defaultBead.width ? settings.defaultBead.width : 10;\n  const height = settings.defaultBead.height ? settings.defaultBead.height : 10;\n  const keepAspectRatio = settings.defaultBead.keepAspectRatio\n    ? settings.defaultBead.keepAspectRatio\n    : false;\n\n  return (\n    <div>\n      <FieldsetSize\n        height={height}\n        width={width}\n        keepAspectRatio={keepAspectRatio}\n        onChange_beadHeight={onChange_beadHeight}\n        onChange_beadWidth={onChange_beadWidth}\n        onChange_keepAspectRatio={onChange_keepAspectRatio}\n      />\n    </div>\n  );\n};\n\nconst BeadsCount = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsCount = value => {\n    if (!value) {\n      return;\n    }\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadsCount(Number(value)));\n  };\n\n  const onChange_beadsAutoCount = value => {\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadsAutoCount(value));\n  };\n\n  return (\n    <FieldsetBeadCount\n      beadsAutoCount={settings.beadsAutoCount}\n      beadsCount={settings.beadsCount}\n      onChange_beadsAutoCount={onChange_beadsAutoCount}\n      onChange_beadsCount={onChange_beadsCount}\n    />\n  );\n};\n\nconst BeadsSpacing = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsSpacing = value => {\n    if (!value) {\n      return;\n    }\n    dispatch(\n      Actions.Toolbar.action_changeDefaultLineBeadsSpacing(Number(value))\n    );\n  };\n\n  const onChange_beadsAutoSpacing = value => {\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadsAutoSpacing(value));\n  };\n\n  return (\n    <FieldsetBeadSpacing\n      beadsAutoSpacing={settings.beadsAutoSpacing}\n      beadsSpacing={settings.beadsSpacing}\n      onChange_beadsAutoSpacing={onChange_beadsAutoSpacing}\n      onChange_beadsSpacing={onChange_beadsSpacing}\n    />\n  );\n};\n\nconst BeadType = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead.type) {\n    return <React.Fragment />;\n  }\n\n  const onSelect = type => {\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadType(type));\n  };\n\n  return (\n    <FieldsetBeadType onChange={onSelect} value={settings.defaultBead.type} />\n  );\n};\n\nconst BeadColor = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead.color) {\n    return <React.Fragment />;\n  }\n\n  const onSelect = color => {\n    dispatch(Actions.Toolbar.action_changeDefaultLineColor(color));\n  };\n\n  return (\n    <FieldsetColor onChange={onSelect} value={settings.defaultBead.color} />\n  );\n};\n\nconst BeadPreview = () => {\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  return <FieldBeadPreview bead={settings.defaultBead} />;\n};\n\n// const BeadWidth = () => {\n//   const dispatch = useDispatch();\n//   const settings = useSelector((state: Editor) => {\n//     return state.ui.lineSettings.settings;\n//   });\n//   const onChange = value => {\n//     dispatch(Actions.Toolbar.action_changeDefaultLineBeadWidth(value));\n//   };\n//   if (!settings) {\n//     return <React.Fragment />;\n//   }\n//   if (!settings.defaultBead) {\n//     return <React.Fragment />;\n//   }\n//   const value = settings.defaultBead.width ? settings.defaultBead.width : 10;\n//   return <FieldsetWidth value={value} onChange={onChange} />;\n// };\n\n// const BeadHeight = () => {\n//   const dispatch = useDispatch();\n//   const settings = useSelector((state: Editor) => {\n//     return state.ui.lineSettings.settings;\n//   });\n//   const onChange = value => {\n//     dispatch(Actions.Toolbar.action_changeDefaultLineBeadHeight(value));\n//   };\n\n//   if (!settings) {\n//     return <React.Fragment />;\n//   }\n//   if (!settings.defaultBead) {\n//     return <React.Fragment />;\n//   }\n//   const value = settings.defaultBead.height ? settings.defaultBead.height : 10;\n\n//   return <FieldsetHeight value={value} onChange={onChange} />;\n// };\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Editor } from \"../../../editorObjects/Editor\";\nimport { ToolbarField } from \"../ui/ToolbarField\";\n\nexport const ToolbarIdle = ({ isVisible }) => {\n  if (isVisible === true) {\n    return <Content />;\n  }\n\n  return <React.Fragment />;\n};\n\nconst Content = () => {\n  const linesLen = useSelector((state: Editor) => {\n    return Object.keys(state.appData.lines).length;\n  });\n\n  const beadsLen = useSelector((state: Editor) => {\n    return Object.keys(state.appData.beads).length;\n  });\n\n  return (\n    <div>\n      <ToolbarField\n        label={\"Beads\"}\n        onToggle={undefined}\n        value={beadsLen}\n        icon={undefined}\n      />\n\n      <ToolbarField\n        label={\"Lines\"}\n        onToggle={undefined}\n        value={linesLen}\n        icon={undefined}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Editor, EditorMode } from \"../editorObjects/Editor\";\nimport { EditorModes } from \"./Toolbar/EditorModes\";\nimport { AddLineMode } from \"./Line/AddLineMode\";\nimport { EditorChangeState } from \"./Toolbar/EditorChangeState\";\nimport { useSelector, useStore, useDispatch } from \"react-redux\";\nimport { MouseSelectionBeads } from \"./Bead/MouseSelectionBeads\";\nimport { MouseSelectionLines } from \"./Line/MouseSelectionLines\";\nimport { DisplayBeads } from \"./Bead/DisplayBeads\";\nimport { DisplayLines } from \"./Line/DisplayLines\";\nimport { GroupSelectionPlaceholder } from \"./operations/GroupSelectionPlaceholder\";\nimport { PickBeadColor } from \"./Toolbar/PickColor\";\nimport { ChangeLinePosition } from \"./Toolbar/ChangeLinePosition\";\nimport { PickBeadType } from \"./Toolbar/PickBeadType\";\nimport { ChangeBeadRotate } from \"./Toolbar/ChangeBeadRotate\";\nimport { LineInspector } from \"./Toolbar/LineInspector\";\nimport { Actions } from \"../store\";\nimport { EditToolbar } from \"./Toolbar/EditToolbar\";\nimport { ToolbarEditLines } from \"./Toolbar/Modes/ToolbarEditLines\";\nimport { ToolbarEditBeads } from \"./Toolbar/Modes/ToolbarEditBeads\";\nimport { ToolbarAddLine } from \"./Toolbar/Modes/ToolbarAddLine\";\nimport { ToolbarIdle } from \"./Toolbar/Modes/ToolbarIdle\";\n\nexport const EditorScene = () => {\n  const editorMode = useSelector((state: Editor) => {\n    return state.mode;\n  });\n  const store = useStore();\n  const state = store.getState();\n  console.log(\"EditorRerender: \", state);\n\n  // @TODO: Dodac funkcje ktora zostaje uruchomiona po rozpoczeciu aplikajci\n  const dispatch = useDispatch();\n  const [firstPass, setFirstPass] = useState(false);\n  useEffect(() => {\n    if (process.env.NODE_ENV && process.env.NODE_ENV === \"development\") {\n      if (firstPass === false) {\n        dispatch(Actions.Persist.action_readSavedCanvas());\n        dispatch(\n          Actions.ChangeEditorMode.action_onChangeEditorMode(\n            EditorMode.EditLines\n          )\n        );\n        dispatch(Actions.Draggable.action_onClickLastestLine());\n        setFirstPass(true);\n      }\n    }\n  });\n\n  return (\n    <div className=\"scene\">\n      <div className=\"topbar-wrapper\">\n        <EditorChangeState />\n      </div>\n\n      <div className=\"actions-wrapper\">\n        <EditorModes editorMode={editorMode} />\n      </div>\n\n      <div className={\"scene-wrapper\"}>\n        <AddLineMode isActive={editorMode === EditorMode.AddLine} />\n\n        <MouseSelectionLines isVisible={editorMode === EditorMode.EditLines} />\n\n        <MouseSelectionBeads isVisible={editorMode === EditorMode.EditBeads} />\n\n        <DisplayBeads mode={editorMode} />\n\n        <DisplayLines mode={editorMode} />\n\n        <GroupSelectionPlaceholder mode={editorMode} />\n      </div>\n\n      <div className={\"toolbar-wrapper\"}>\n        <ToolbarEditLines isVisible={editorMode === EditorMode.EditLines} />\n        <ToolbarEditBeads isVisible={editorMode === EditorMode.EditBeads} />\n        <ToolbarAddLine isVisible={editorMode === EditorMode.AddLine} />\n        <ToolbarIdle isVisible={editorMode === EditorMode.Idle} />\n\n        {/* <ChangeLinePosition mode={editorMode} />\n\n        <PickBeadType mode={editorMode} />\n        <ChangeBeadRotate mode={editorMode} />\n        <PickBeadColor mode={editorMode} />\n        <LineInspector mode={editorMode} />\n\n        <EditToolbar mode={editorMode} /> */}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport \"bulma/css/bulma.css\";\nimport \"./App.css\";\nimport { EditorScene } from \"./components/Editor\";\nimport { createStore } from \"redux\";\nimport { Provider, useDispatch } from \"react-redux\";\nimport { store, Actions } from \"./store\";\n\nconst App: React.FC = () => {\n  const rootStore = createStore(\n    store,\n    \"__REDUX_DEVTOOLS_EXTENSION__\" in window &&\n      (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n  );\n  return (\n    <div className=\"App\">\n      <Provider store={rootStore}>\n        <EditorScene />\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}