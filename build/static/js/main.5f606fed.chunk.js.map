{"version":3,"sources":["editorObjects/Editor.tsx","editorObjects/Point.ts","editorObjects/Bead.ts","editorObjects/Line.ts","immerReducers/DraggableOperationsImmerReducer.tsx","immerReducers/PersistImmerReducer.tsx","immerReducers/ChangeEditorModeImmerReducer.tsx","immerReducers/MainImmerReducer.tsx","immerReducers/MouseSelectionImmerReducer.tsx","immerReducers/ToolbarImmerReducer.tsx","store.tsx","components/Toolbar/EditorModes.tsx","components/colors.ts","components/operations/MapValuesToCss.tsx","components/Line/StraightLine.tsx","components/Line/AddLineMode.tsx","components/Toolbar/EditorChangeState.tsx","components/operations/MouseSelection.tsx","components/Bead/MouseSelectionBeads.tsx","components/Line/MouseSelectionLines.tsx","components/Bead/DisplayBead.tsx","components/Bead/DisplayBeads.tsx","components/Line/SelectionStraightLine.tsx","components/Line/SelectedStraightLine.tsx","components/Line/DisplayLine.tsx","components/Line/DraggableLines.tsx","components/Line/DisplaySimpleLine.tsx","components/Line/DisplayLines.tsx","components/operations/DisplayGroupLines.tsx","components/operations/getGroupPositionFromLines.ts","components/operations/DisplayLinesGroup.tsx","components/operations/DisplayGroupBeads.tsx","components/operations/getGroupPositionFromBeads.ts","components/operations/DisplayBeadsGroup.tsx","components/operations/GroupSelectionPlaceholder.tsx","components/Toolbar/PickColor.tsx","components/Toolbar/ChangeLinePosition.tsx","components/Toolbar/PickBeadType.tsx","components/Toolbar/ChangeBeadRotate.tsx","components/Editor.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BeadTypes","EditorMode","build","x","y","immerable","normalize","point","length","Math","sqrt","getLength","useLen","scale","scalar","add","getDistanceBetweenPoints","start","end","getRotate","atan2","contain","p1","p2","p","position","type","id","generate","beadType","BasicCircle","common","buildBead_BasicCircle","BasicRectangle","buildBead_BasicRectangle","width","height","fill","settings","radius","props","beadIds","beadCount","autoFill","DraggableOperationsImmerReducer","useAutoFill","this","draftState","ui","lineSettings","line","buildLine","appData","lines","mode","EditLines","updateBeadsPositions","saveInfo","saved","key","data","deltaX","deltaY","Object","keys","selectedLinesIds","forEach","lineId","selectedLinesIdsCount","beadId","selectedBeadsIds","selectedBeadsIdsCount","currentLine","len","count","floor","beadWidth","currentCount","remainingCount","i","buildPoint","bead","buildBead","beads","push","arrLen","lastItemBeadId","splice","currentDistance","newPosition","startX","startY","endX","endY","distance","getPointFromStartLine","ImmerReducer","PersistImmerReducer","window","readedData","localStorage","getItem","cached","JSON","parse","currBead","currLine","console","log","info","setItem","stringify","ChangeEditorModeImmerReducer","clearSelectedBeads","clearSelectedLines","newEditorMode","newValue","MainImmerReducer","MouseSelectionImmerReducer","mouseSelection","isDragStarted","isDragged","abs","min","max","selectedIds","newIds","p3","difference","ToolbarImmerReducer","color","deg","defaultAppData","Idle","Actions","Main","createActionCreators","Draggable","Persist","ChangeEditorMode","MouseSelection","Toolbar","store","composeReducers","createReducerFunction","EditorModes","editorMode","dispatch","useDispatch","onChangeEditorMode","action_onChangeEditorMode","className","onClick","icon","faArrowsAlt","faEdit","EditBeads","AddLine","faPlus","getTranslate3dCss","z","getRotateCss","rotate","StraightLine","style","transform","transformOrigin","AddLineMode","isActive","Fragment","AddLineModeContent","useState","startPoint","setStartPoint","endPoint","setEndPoint","isDragEnabled","setIsDragEnabled","lineRef","useRef","onMouseUp","event","current","rect","getBoundingClientRect","clientX","left","clientY","top","onAddLine","action_onAddLine","onMouseDown","onMouseMove","onMouseLeave","ref","EditorChangeState","isSaved","useSelector","state","action_onClearCanvas","faTimes","action_onSaveCanvas","faSave","action_readSavedCanvas","faDownload","isVisible","sceneWrapperRef","mouseSelectionIsDragStarted","zIndex","backgroundColor","border","MouseSelectionBeads","action_onEditBeadsMouseDown","action_onEditBeadsMouseMove","action_onEditBeadsMouseUp","MouseSelectionLines","action_onEditLinesMouseDown","action_onEditLinesMouseMove","action_onEditLinesMouseUp","DisplayBead","opacity","isSelected","isSelectable","isOpacity","undefined","isZindex","styles","background","borderRadius","action_onClickBead","DisplayBeads","fadeOut","onTop","values","map","SelectionStraightLine","cursor","SelectedStraightLine","eventHandlerEndLine","_","action_onLineDrag","onStart","onDrag","onStop","disabled","DisplayLine","eventHandlerStartPoint","action_onStartPointDrag","eventHandlerEndPoint","action_onEndPointDrag","action_onClickLine","DraggableLines","backend","HTML5Backend","DisplaySimpleLine","DisplayLines","isEditable","DisplayGroupLines","location","w","h","getGroupPositionFromLines","selectedLines","xMin","Number","MAX_SAFE_INTEGER","xMax","yMin","yMax","getSelectedLines","MemoizedDisplayLinesGroup","React","memo","action_onGroupLineDrag","DisplayGroupBeads","getSelectedBeads","MemoizedDisplayBeadsGroup","selectedBeads","getGroupPositionFromBeads","GroupSelectionPlaceholder","PickBeadColor","SelectedBeads","DisplayPickColorToolbar","selectedColors","Array","from","Set","colors","action_changeBeadFill","DisplaySelectedColor","display","flexDirection","justifyContent","alignItems","boxSizing","paddingLeft","paddingRight","hex","DisplayAvailableColors","indexOf","DisplayColor","marginBottom","marginRight","boxShadow","ChangeLinePosition","ChangePositionToolbar","DisplayLinePosition","onChangeLocation","label","value","onChange","isDisabled","DisplayGroupLinePosition","InputNumberElement","pattern","step","target","PickBeadType","PickBeadTypeToolbar","DisplayPickTypeToolbar","types","selectedTypes","action_changeBeadType","DisplaySelectedTypes","index","DisplayAvailableTypes","DisplayType","faCircle","faExpand","ChangeBeadRotate","ChangeBeadRotateToolbar","EditorScene","useStore","getState","App","rootStore","createStore","__REDUX_DEVTOOLS_EXTENSION__","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f606fed.chunk.js","sourcesContent":["import { immerable } from \"immer\";\n\nexport interface Point {\n  x: number;\n  y: number;\n  [immerable]: boolean;\n}\n\nexport enum BeadTypes {\n  BasicRectangle = \"BasicRectangle\",\n  BasicCircle = \"BasicCircle\",\n}\n\nexport interface Bead {\n  id: string;\n  position: Point;\n  [immerable]: boolean;\n  width: number;\n  height: number;\n  type: BeadTypes;\n  fill: string;\n  settings?: any;\n}\n\nexport interface Line {\n  id: string;\n  start: Point;\n  end: Point;\n  beadIds: string[];\n  [immerable]: boolean;\n  settings: {\n    beadCount: number;\n    autoFill: boolean;\n  };\n}\n\nexport interface AppData {\n  beads: { [s: string]: Bead };\n  lines: { [s: string]: Line };\n}\n\nexport enum EditorMode {\n  Idle,\n  EditLines,\n  AddLine,\n  EditBeads,\n}\n\nexport interface EditorUi {\n  lineSettings: {\n    autoFill: boolean;\n  };\n  saveInfo: {\n    saved: boolean;\n  };\n  selectedLinesIds: { [s: string]: boolean };\n  selectedLinesIdsCount: number;\n  selectedBeadsIds: { [s: string]: boolean };\n  selectedBeadsIdsCount: number;\n  mouseSelection: {\n    start: Point;\n    end: Point;\n    isDragStarted: boolean;\n    isDragged: boolean;\n  };\n}\n\nexport interface Editor {\n  appData: AppData;\n  ui: EditorUi;\n  mode: EditorMode;\n}\n","import { Point } from \"./Editor\";\nimport { immerable } from \"immer\";\n\nexport const build = (x: number = 0, y: number = 0): Point => {\n  return {\n    x,\n    y,\n    [immerable]: true,\n  } as Point;\n};\n\nexport const getLength = (point: Point) => {\n  return Math.sqrt(point.x * point.x + point.y * point.y);\n};\n\nexport const normalize = (point: Point) => {\n  const length = getLength(point);\n  const useLen = length === 0;\n  const x = useLen ? 0 : point.x / length;\n  const y = useLen ? 0 : point.y / length;\n  return build(x, y);\n};\n\nexport const scale = (point: Point, scalar: number) => {\n  return build(point.x * scalar, point.y * scalar);\n};\n\nexport const add = (point: Point, x: number, y: number) => {\n  return build(point.x + x, point.y + y);\n};\n\nexport const getDistance = (x1, y1, x2, y2): number => {\n  return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n};\n\nexport const getDistanceBetweenPoints = (start: Point, end: Point): number => {\n  return Math.sqrt(\n    (end.x - start.x) * (end.x - start.x) +\n      (end.y - start.y) * (end.y - start.y)\n  );\n};\n\nexport const getRotate = (y, x) => {\n  return Math.atan2(y, x);\n};\n\nexport const contain = (p1: Point, p2: Point, p: Point): boolean => {\n  return p.x > p1.x && p.x < p2.x && p.y > p1.y && p.y < p2.y;\n};\n","import { immerable } from \"immer\";\nimport { generate } from \"shortid\";\nimport { Point, Bead, BeadTypes } from \"./Editor\";\n\nexport const build = (position: Point, type?: BeadTypes): Bead => {\n  const id = generate();\n  const beadType = type ? type : BeadTypes.BasicCircle;\n  const common = {\n    id,\n    position,\n    [immerable]: true,\n    type: beadType,\n  };\n\n  if (beadType === BeadTypes.BasicCircle) {\n    return buildBead_BasicCircle(common);\n  }\n\n  if (beadType === BeadTypes.BasicRectangle) {\n    return buildBead_BasicRectangle(common);\n  }\n\n  return buildBead_BasicCircle(common);\n};\n\nconst buildBead_BasicCircle = common => {\n  return {\n    ...common,\n    width: 20,\n    height: 20,\n    fill: `linear-gradient(\n      to bottom,\n      rgba(254, 204, 177, 1) 0%,\n      rgba(241, 116, 50, 1) 50%,\n      rgba(234, 85, 7, 1) 51%,\n      rgba(251, 149, 94, 1) 100%\n    )`,\n    settings: {\n      radius: 20,\n    },\n  } as Bead;\n};\n\nconst buildBead_BasicRectangle = common => {\n  return {\n    ...common,\n    width: 20,\n    height: 40,\n    fill: \"#b1b1b1\",\n  } as Bead;\n};\n","import { immerable } from \"immer\";\nimport { Line, Point } from \"./Editor\";\nimport { generate } from \"shortid\";\nimport { normalize, scale, add, build as buildPoint } from \"./Point\";\n\nexport const build = (props: {\n  start: Point;\n  end: Point;\n  beadIds?: string[];\n}): Line => {\n  const { start, end, beadIds } = props;\n  const id = generate();\n  return {\n    id,\n    start,\n    end,\n    beadIds: beadIds && beadIds.length > 0 ? beadIds : [],\n    settings: {\n      beadCount: 0,\n      autoFill: true,\n    },\n    [immerable]: true,\n  } as Line;\n};\n\nexport const getLength = (line: Line): number => {\n  return Math.sqrt(\n    (line.end.x - line.start.x) * (line.end.x - line.start.x) +\n      (line.end.y - line.start.y) * (line.end.y - line.start.y)\n  );\n};\n\nexport const getPointFromStart = (line: Line, distance: number): Point => {\n  const x = line.end.x - line.start.x;\n  const y = line.end.y - line.start.y;\n  let point = buildPoint(x, y);\n  point = normalize(point);\n  point = scale(point, distance);\n  point = add(point, line.start.x, line.start.y);\n  return point;\n};\n\nexport const getPointFromStartLine = (\n  startX: number,\n  startY: number,\n  endX: number,\n  endY: number,\n  distance: number\n): Point => {\n  const x = endX - startX;\n  const y = endY - startY;\n  let point = buildPoint(x, y);\n  point = normalize(point);\n  point = scale(point, distance);\n  point = add(point, startX, startY);\n  return point;\n};\n","import { Editor, EditorMode, Point } from \"../editorObjects/Editor\";\nimport {\n  build as buildPoint,\n  getDistanceBetweenPoints,\n} from \"../editorObjects/Point\";\nimport { ImmerReducer } from \"immer-reducer\";\nimport { build as buildBead } from \"../editorObjects/Bead\";\nimport { build as buildLine } from \"../editorObjects/Line\";\nimport { getPointFromStartLine } from \"../editorObjects/Line\";\n\nconst boxOffset = 5;\n\nexport class DraggableOperationsImmerReducer extends ImmerReducer<Editor> {\n  action_onAddLine(start: Point, end: Point) {\n    const useAutoFill = this.draftState.ui.lineSettings.autoFill;\n    const beadIds = [];\n    const line = buildLine({ start, end, beadIds });\n    line.settings.autoFill = useAutoFill;\n    this.draftState.appData.lines[line.id] = line;\n    this.draftState.mode = EditorMode.EditLines;\n    this.updateBeadsPositions(line.id);\n    this.draftState.ui.saveInfo.saved = false;\n  }\n\n  action_onStartPointDrag(\n    key: string,\n    data: {\n      x: number;\n      y: number;\n    }\n  ) {\n    if (this.draftState.appData.lines[key]) {\n      const line = this.draftState.appData.lines[key];\n      line.start.x = data.x - boxOffset;\n      line.start.y = data.y - boxOffset;\n      this.updateBeadsPositions(line.id);\n      this.draftState.ui.saveInfo.saved = false;\n    }\n  }\n\n  action_onEndPointDrag(\n    key: string,\n    data: {\n      x: number;\n      y: number;\n    }\n  ) {\n    if (this.draftState.appData.lines[key]) {\n      const line = this.draftState.appData.lines[key];\n      line.end.x = data.x - boxOffset;\n      line.end.y = data.y - boxOffset;\n      this.updateBeadsPositions(line.id);\n      this.draftState.ui.saveInfo.saved = false;\n    }\n  }\n\n  action_onLineDrag(\n    key: string,\n    data: {\n      deltaX: number;\n      deltaY: number;\n    }\n  ) {\n    if (this.draftState.appData.lines[key]) {\n      const line = this.draftState.appData.lines[key];\n      line.start.x = line.start.x + data.deltaX;\n      line.start.y = line.start.y + data.deltaY;\n      line.end.x = line.end.x + data.deltaX;\n      line.end.y = line.end.y + data.deltaY;\n      this.updateBeadsPositions(line.id);\n      this.draftState.ui.saveInfo.saved = false;\n    }\n  }\n\n  action_onGroupLineDrag(data: { deltaX: number; deltaY: number }) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      if (this.draftState.appData.lines[lineId]) {\n        const line = this.draftState.appData.lines[lineId];\n        line.start.x = line.start.x + data.deltaX;\n        line.start.y = line.start.y + data.deltaY;\n        line.end.x = line.end.x + data.deltaX;\n        line.end.y = line.end.y + data.deltaY;\n        this.updateBeadsPositions(line.id);\n        this.draftState.ui.saveInfo.saved = false;\n      }\n    });\n  }\n\n  action_onGroupBeadsDrag(data: { deltaX: number; deltaY: number }) {}\n\n  action_onClickLine(lineId: string) {\n    this.draftState.ui.selectedLinesIds = {};\n    this.draftState.ui.selectedLinesIds[lineId] = true;\n    this.draftState.ui.selectedLinesIdsCount = 1;\n  }\n\n  action_onClickBead(beadId: string) {\n    this.draftState.ui.selectedBeadsIds = {};\n    this.draftState.ui.selectedBeadsIds[beadId] = true;\n    this.draftState.ui.selectedBeadsIdsCount = 1;\n  }\n\n  private updateBeadsPositions(lineId: string) {\n    const startOffset = 25;\n    const offset = 5;\n    const beadWidth = 20;\n    const size = beadWidth + offset;\n    const currentLine = this.draftState.appData.lines[lineId];\n    const { start, end, beadIds } = currentLine;\n    const len = getDistanceBetweenPoints(start, end);\n    const count = Math.floor((len - startOffset - offset) / size);\n    const currentCount = beadIds.length;\n    if (count > currentCount) {\n      const remainingCount = count - currentCount;\n      for (let i = 0; i < remainingCount; i++) {\n        const position = buildPoint();\n        const bead = buildBead(position);\n        this.draftState.appData.beads[bead.id] = bead;\n        this.draftState.appData.lines[lineId].beadIds.push(bead.id);\n      }\n    } else if (count < currentCount) {\n      const remainingCount = currentCount - count;\n      for (let i = 0; i < remainingCount; i++) {\n        const arrLen = this.draftState.appData.lines[lineId].beadIds.length;\n        const lastItemBeadId = this.draftState.appData.lines[\n          lineId\n        ].beadIds.splice(arrLen - 1, 1);\n        delete this.draftState.appData.beads[lastItemBeadId[0]];\n      }\n    }\n    let currentDistance = startOffset;\n    this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n      const newPosition = getPointFromStartLine(\n        start.x,\n        start.y,\n        end.x,\n        end.y,\n        currentDistance\n      );\n      const halfSize = beadWidth / 2;\n      const x = newPosition.x - halfSize + 5;\n      const y = newPosition.y - halfSize + 5;\n      this.draftState.appData.beads[beadId].position.x = x;\n      this.draftState.appData.beads[beadId].position.y = y;\n      currentDistance = currentDistance + size;\n    });\n  }\n}\n","import { Editor } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\nimport { build as buildBead } from \"../editorObjects/Bead\";\nimport { build as buildLine } from \"../editorObjects/Line\";\n\nexport class PersistImmerReducer extends ImmerReducer<Editor> {\n  action_onClearCanvas() {\n    this.draftState.appData.beads = {};\n    this.draftState.appData.lines = {};\n    this.draftState.ui.saveInfo.saved = false;\n  }\n  action_readSavedCanvas() {\n    this.draftState.ui.saveInfo.saved = true;\n    if (\"localStorage\" in window) {\n      const readedData = localStorage.getItem(\"appData\");\n      if (readedData !== null) {\n        this.draftState.appData = {\n          beads: {},\n          lines: {},\n        };\n        const cached = JSON.parse(readedData) as Editor[\"appData\"];\n        Object.keys(cached.beads).forEach(beadId => {\n          const currBead = cached.beads[beadId];\n          const bead = buildBead(currBead.position);\n          bead.id = currBead.id;\n          this.draftState.appData.beads[beadId] = bead;\n        });\n        Object.keys(cached.lines).forEach(lineId => {\n          const currLine = cached.lines[lineId];\n          const line = buildLine({\n            start: currLine.start,\n            end: currLine.end,\n            beadIds: currLine.beadIds,\n          });\n          line.id = currLine.id;\n          this.draftState.appData.lines[lineId] = line;\n        });\n        console.log(\"action_readSavedCanvas loaded\");\n      } else {\n        console.info(\"No data in localstorage\");\n      }\n    } else {\n      console.info(\"No localstorage available\");\n    }\n  }\n\n  action_onSaveCanvas() {\n    if (\"localStorage\" in window) {\n      localStorage.setItem(\"appData\", JSON.stringify(this.draftState.appData));\n      this.draftState.ui.saveInfo.saved = true;\n        console.log(\"action_onSaveCanvas saved\");\n    } else {\n      console.info(\"No localstorage available\");\n    }\n  }\n}\n","import { Editor, EditorMode } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\n\nexport class ChangeEditorModeImmerReducer extends ImmerReducer<Editor> {\n  action_onChangeEditorMode(newEditorMode: EditorMode) {\n    this.draftState.mode = newEditorMode;\n    this.clearSelectedBeads();\n    this.clearSelectedLines();\n  }\n  private clearSelectedBeads = () => {\n    if (this.draftState.ui.selectedBeadsIdsCount > 0) {\n      this.draftState.ui.selectedBeadsIds = {};\n      this.draftState.ui.selectedBeadsIdsCount = 0;\n    }\n  };\n  private clearSelectedLines = () => {\n    if (this.draftState.ui.selectedLinesIdsCount) {\n      this.draftState.ui.selectedLinesIds = {};\n      this.draftState.ui.selectedLinesIdsCount = 0;\n    }\n  };\n  action_setSaveInfo(newValue: boolean) {\n    this.draftState.ui.saveInfo.saved = newValue;\n  }\n}\n","import { Editor } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\n\nexport class MainImmerReducer extends ImmerReducer<Editor> {\n  action_test() {}\n}\n","import { Editor } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\nimport { build as buildPoint } from \"../editorObjects/Point\";\nimport { contain } from \"../editorObjects/Point\";\nimport { difference } from \"lodash\";\n\nexport class MouseSelectionImmerReducer extends ImmerReducer<Editor> {\n  action_onEditBeadsMouseDown(x, y) {\n    this.draftState.ui.mouseSelection.isDragStarted = true;\n\n    this.draftState.ui.mouseSelection.start.x = x;\n    this.draftState.ui.mouseSelection.start.y = y;\n    this.draftState.ui.mouseSelection.end.x = x;\n    this.draftState.ui.mouseSelection.end.y = y;\n  }\n\n  action_onEditBeadsMouseMove(x, y) {\n    this.draftState.ui.mouseSelection.end.x = x;\n    this.draftState.ui.mouseSelection.end.y = y;\n\n    if (this.draftState.ui.mouseSelection.isDragged === false) {\n      const { start, end } = this.draftState.ui.mouseSelection;\n      const deltaX = end.x - start.x;\n      const deltaY = end.y - start.y;\n\n      if (Math.abs(deltaX) > 5 || Math.abs(deltaY) > 5) {\n        this.draftState.ui.mouseSelection.isDragged = true;\n      }\n    }\n\n    if (this.draftState.ui.mouseSelection.isDragged === true) {\n      const { start, end } = this.draftState.ui.mouseSelection;\n      const p1 = buildPoint(Math.min(start.x, end.x), Math.min(start.y, end.y));\n      const p2 = buildPoint(Math.max(start.x, end.x), Math.max(start.y, end.y));\n\n      const selectedIds = Object.keys(this.draftState.ui.selectedBeadsIds);\n      const newIds: string[] = [];\n\n      Object.keys(this.draftState.appData.beads).forEach(beadId => {\n        const bead = this.draftState.appData.beads[beadId];\n        const p3 = buildPoint(bead.position.x + 10, bead.position.y + 10);\n        if (contain(p1, p2, p3)) {\n          newIds.push(beadId);\n        }\n      });\n\n      const diff = difference(newIds, selectedIds);\n      \n      if (diff.length > 0) {\n        this.draftState.ui.selectedBeadsIds = {};\n        this.draftState.ui.selectedBeadsIdsCount = 0;\n        newIds.forEach(id => {\n          this.draftState.ui.selectedBeadsIds[id] = true;\n          this.draftState.ui.selectedBeadsIdsCount =\n            this.draftState.ui.selectedBeadsIdsCount + 1;\n        });\n      }\n\n      // this.draftState.ui.selectedBeadsIds = {};\n      // this.draftState.ui.selectedBeadsIdsCount = 0;\n      // Object.keys(this.draftState.appData.beads).forEach(beadId => {\n      //   const bead = this.draftState.appData.beads[beadId];\n      //   const p3 = buildPoint(bead.position.x + 10, bead.position.y + 10);\n      //   if (contain(p1, p2, p3)) {\n      //     this.draftState.ui.selectedBeadsIds[beadId] = true;\n      //     this.draftState.ui.selectedBeadsIdsCount =\n      //       this.draftState.ui.selectedBeadsIdsCount + 1;\n      //   }\n      // });\n    }\n  }\n\n  action_onEditBeadsMouseUp() {\n    if (this.draftState.ui.mouseSelection.isDragged === false) {\n      if (this.draftState.ui.selectedBeadsIdsCount > 0) {\n        this.draftState.ui.selectedBeadsIds = {};\n      }\n    }\n\n    this.draftState.ui.mouseSelection.isDragStarted = false;\n    this.draftState.ui.mouseSelection.isDragged = false;\n    this.draftState.ui.mouseSelection.start.x = 0;\n    this.draftState.ui.mouseSelection.start.y = 0;\n    this.draftState.ui.mouseSelection.end.x = 0;\n    this.draftState.ui.mouseSelection.end.y = 0;\n  }\n\n  action_onEditLinesMouseDown(x: number, y: number) {\n    this.draftState.ui.mouseSelection.isDragStarted = true;\n    this.draftState.ui.mouseSelection.start.x = x;\n    this.draftState.ui.mouseSelection.start.y = y;\n    this.draftState.ui.mouseSelection.end.x = x;\n    this.draftState.ui.mouseSelection.end.y = y;\n  }\n\n  action_onEditLinesMouseMove(x: number, y: number) {\n    this.draftState.ui.mouseSelection.end.x = x;\n    this.draftState.ui.mouseSelection.end.y = y;\n\n    if (this.draftState.ui.mouseSelection.isDragged === false) {\n      const { start, end } = this.draftState.ui.mouseSelection;\n      const deltaX = end.x - start.x;\n      const deltaY = end.y - start.y;\n      if (Math.abs(deltaX) > 5 || Math.abs(deltaY) > 5) {\n        this.draftState.ui.mouseSelection.isDragged = true;\n      }\n    }\n\n    if (this.draftState.ui.mouseSelection.isDragged === true) {\n      const { start, end } = this.draftState.ui.mouseSelection;\n      const p1 = buildPoint(Math.min(start.x, end.x), Math.min(start.y, end.y));\n      const p2 = buildPoint(Math.max(start.x, end.x), Math.max(start.y, end.y));\n\n      const selectedIds = Object.keys(this.draftState.ui.selectedLinesIds);\n      const newIds: string[] = [];\n\n      Object.keys(this.draftState.appData.lines).forEach(lineId => {\n        const line = this.draftState.appData.lines[lineId];\n        if (contain(p1, p2, line.start) || contain(p1, p2, line.end)) {\n          newIds.push(lineId);\n        }\n      });\n\n      const diff = difference(newIds, selectedIds);\n      \n      if (diff.length > 0) {\n        this.draftState.ui.selectedLinesIds = {};\n        this.draftState.ui.selectedLinesIdsCount = 0;\n        newIds.forEach(id => {\n          this.draftState.ui.selectedLinesIds[id] = true;\n          this.draftState.ui.selectedLinesIdsCount =\n            this.draftState.ui.selectedLinesIdsCount + 1;\n        });\n      }\n      // this.draftState.ui.selectedLinesIds = {};\n      // this.draftState.ui.selectedLinesIdsCount = 0;\n      // Object.keys(this.draftState.appData.lines).forEach(lineId => {\n      //   const line = this.draftState.appData.lines[lineId];\n      //   if (contain(p1, p2, line.start) || contain(p1, p2, line.end)) {\n      //     this.draftState.ui.selectedLinesIds[lineId] = true;\n      //     this.draftState.ui.selectedLinesIdsCount =\n      //       this.draftState.ui.selectedLinesIdsCount + 1;\n      //   }\n      // });\n    }\n  }\n\n  action_onEditLinesMouseUp() {\n    if (this.draftState.ui.mouseSelection.isDragged === false) {\n      if (this.draftState.ui.selectedLinesIdsCount > 0) {\n        this.draftState.ui.selectedLinesIds = {};\n      }\n    }\n\n    this.draftState.ui.mouseSelection.isDragStarted = false;\n    this.draftState.ui.mouseSelection.isDragged = false;\n    this.draftState.ui.mouseSelection.start.x = 0;\n    this.draftState.ui.mouseSelection.start.y = 0;\n    this.draftState.ui.mouseSelection.end.x = 0;\n    this.draftState.ui.mouseSelection.end.y = 0;\n  }\n}\n","import { Editor, BeadTypes } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\n\nexport class ToolbarImmerReducer extends ImmerReducer<Editor> {\n  action_changeBeadFill(color: string) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].fill = color;\n    });\n  }\n\n  action_changeBeadType(type: BeadTypes) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].type = type;\n    });\n  }\n  action_onBeadRotate(beadId, {deg}){}\n  action_onBeadsRotate({deg}){}\n}\n","import { Editor, EditorMode } from \"./editorObjects/Editor\";\nimport { build as buildPoint } from \"./editorObjects/Point\";\nimport { composeReducers } from \"immer-reducer\";\nimport { createActionCreators, createReducerFunction } from \"immer-reducer\";\nimport { DraggableOperationsImmerReducer } from \"./immerReducers/DraggableOperationsImmerReducer\";\nimport { PersistImmerReducer } from \"./immerReducers/PersistImmerReducer\";\nimport { ChangeEditorModeImmerReducer } from \"./immerReducers/ChangeEditorModeImmerReducer\";\nimport { MainImmerReducer } from \"./immerReducers/MainImmerReducer\";\nimport { MouseSelectionImmerReducer } from \"./immerReducers/MouseSelectionImmerReducer\";\nimport { ToolbarImmerReducer } from \"./immerReducers/ToolbarImmerReducer\";\n\n\nconst defaultAppData: Editor = {\n  appData: {\n    beads: {},\n    lines: {},\n  },\n  ui: {\n    lineSettings: {\n      autoFill: true,\n    },\n    saveInfo: {\n      saved: false,\n    },\n    selectedLinesIds: {},\n    selectedLinesIdsCount: 0,\n    selectedBeadsIds: {},\n    selectedBeadsIdsCount: 0,\n    mouseSelection: {\n      start: buildPoint(0, 0),\n      end: buildPoint(0, 0),\n      isDragStarted: false,\n      isDragged: false,\n    },\n  },\n  mode: EditorMode.Idle,\n};\n\nexport const Actions = {\n  Main: createActionCreators(MainImmerReducer),\n  Draggable: createActionCreators(DraggableOperationsImmerReducer),\n  Persist: createActionCreators(PersistImmerReducer),\n  ChangeEditorMode: createActionCreators(ChangeEditorModeImmerReducer),\n  MouseSelection: createActionCreators(MouseSelectionImmerReducer),\n  Toolbar: createActionCreators(ToolbarImmerReducer),\n};\n\nexport const store = composeReducers(\n  createReducerFunction(MainImmerReducer, defaultAppData),\n  createReducerFunction(DraggableOperationsImmerReducer, defaultAppData),\n  createReducerFunction(PersistImmerReducer, defaultAppData),\n  createReducerFunction(ToolbarImmerReducer, defaultAppData),\n  createReducerFunction(ChangeEditorModeImmerReducer, defaultAppData),\n  createReducerFunction(MouseSelectionImmerReducer, defaultAppData)\n);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faEdit, faArrowsAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { EditorMode } from \"../../editorObjects/Editor\";\nimport { uiButton } from \"../colors\";\nimport { useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\n\nexport const EditorModes = ({ editorMode }) => {\n  const dispatch = useDispatch();\n\n  const onChangeEditorMode = (newEditorMode: EditorMode) => {\n    dispatch(Actions.ChangeEditorMode.action_onChangeEditorMode(newEditorMode));\n  };\n\n  return (\n    <div className=\"\">\n      <div\n        className={`\n              button \n              ${editorMode === EditorMode.Idle ? \"is-active\" : \"\"}\n            `}\n        onClick={() => onChangeEditorMode(EditorMode.Idle)}\n      >\n        <span className=\"icon is-small\">\n          <FontAwesomeIcon icon={faArrowsAlt} color={uiButton} />\n        </span>\n        <span>Idle</span>\n      </div>\n\n      <div\n        className={`\n              button \n              ${editorMode === EditorMode.EditLines ? \"is-active\" : \"\"}\n            `}\n        onClick={() => onChangeEditorMode(EditorMode.EditLines)}\n      >\n        <span className=\"icon is-small\">\n          <FontAwesomeIcon icon={faEdit} color={uiButton} />\n        </span>\n        <span>EditLines</span>\n      </div>\n\n      <div\n        className={`\n              button \n              ${editorMode === EditorMode.EditBeads ? \"is-active\" : \"\"}\n            `}\n        onClick={() => onChangeEditorMode(EditorMode.EditBeads)}\n      >\n        <span className=\"icon is-small\">\n          <FontAwesomeIcon icon={faEdit} color={uiButton} />\n        </span>\n        <span>Edit Beads</span>\n      </div>\n\n      <div\n        className={`\n              button \n              ${editorMode === EditorMode.AddLine ? \"is-active\" : \"\"}\n            `}\n        onClick={() => onChangeEditorMode(EditorMode.AddLine)}\n      >\n        <span className=\"icon is-small\">\n          <FontAwesomeIcon icon={faPlus} color={uiButton} />\n        </span>\n        <span>AddLine</span>\n      </div>\n    </div>\n  );\n};\n","export const uiButton = \"#aeaeae\"","export const getTranslate3dCss = (x, y, z = 1) => {\n  return `translate3d(${x}px, ${y}px, ${z}px)`;\n};\n\nexport const getRotateCss = rotate => {\n  return `rotate(${rotate}rad)`;\n};\n","import React from \"react\";\nimport { getDistanceBetweenPoints, getRotate } from \"../../editorObjects/Point\";\nimport { getTranslate3dCss, getRotateCss } from \"../operations/MapValuesToCss\";\n\nexport const StraightLine = ({ start, end }) => {\n  const size = 5;\n  const height = 1;\n  const width = getDistanceBetweenPoints(start, end);\n  const rotate = getRotate(end.y - start.y, end.x - start.x);\n  return (\n    <div\n      style={{\n        height,\n        width,\n        transform: `${getTranslate3dCss(\n          start.x + size,\n          start.y + size\n        )} ${getRotateCss(rotate)}`,\n        transformOrigin: \"left center\",\n      }}\n      className=\"line\"\n    >\n      &nbsp;\n    </div>\n  );\n};\n","import React, { useState, MouseEvent, useRef } from \"react\";\nimport { StraightLine } from \"./StraightLine\";\nimport { getTranslate3dCss } from \"../operations/MapValuesToCss\";\nimport { useDispatch } from \"react-redux\";\nimport { Point } from \"../../editorObjects/Editor\";\nimport { Actions } from \"../../store\";\n\nexport const AddLineMode = ({ isActive }) => {\n  if (isActive === false) {\n    return <React.Fragment />;\n  }\n\n  return <AddLineModeContent />;\n};\n\nconst AddLineModeContent = () => {\n  interface SimplePoint {\n    x: number;\n    y: number;\n  }\n  const [startPoint, setStartPoint] = useState<SimplePoint>({\n    x: 0,\n    y: 0,\n  });\n  const [endPoint, setEndPoint] = useState<SimplePoint>({\n    x: 0,\n    y: 0,\n  });\n  const [isDragEnabled, setIsDragEnabled] = useState<boolean>(false);\n  const lineRef = useRef<HTMLDivElement>(null);\n  const onMouseDown = (event: MouseEvent<HTMLElement>) => {\n    if (lineRef.current) {\n      const rect = lineRef.current.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      setStartPoint({ x, y });\n      setEndPoint({ x, y });\n      setIsDragEnabled(true);\n    }\n  };\n  const onMouseUp = (event: MouseEvent<HTMLElement>) => {\n    if (isDragEnabled) {\n      if (lineRef.current) {\n        const rect = lineRef.current.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        setEndPoint({ x, y });\n        onAddLine(startPoint, endPoint);\n        setIsDragEnabled(false);\n      }\n    }\n  };\n  const onMouseMove = (event: MouseEvent<HTMLElement>) => {\n    if (isDragEnabled) {\n      if (lineRef.current) {\n        const rect = lineRef.current.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        setEndPoint({ x, y });\n      }\n    }\n  };\n  const dispatch = useDispatch();\n\n  const onAddLine = (start: SimplePoint, end: SimplePoint) => {\n    dispatch(Actions.Draggable.action_onAddLine(start as Point, end as Point));\n  };\n\n  return (\n    <div>\n      <div\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onMouseMove={onMouseMove}\n        onMouseLeave={onMouseUp}\n        className=\"add-line-wrapper\"\n        ref={lineRef}\n      ></div>\n\n      {isDragEnabled ? (\n        <div>\n          <div\n            style={{\n              transform: getTranslate3dCss(startPoint.x, startPoint.y),\n              width: 10,\n              height: 10,\n            }}\n            className={\"line-start\"}\n          >\n            &nbsp;\n          </div>\n          <div\n            style={{\n              transform: getTranslate3dCss(endPoint.x, endPoint.y),\n              width: 10,\n              height: 10,\n            }}\n            className={\"line-end\"}\n          >\n            &nbsp;\n          </div>\n          <StraightLine start={startPoint} end={endPoint} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faSave, faDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport { uiButton } from \"../colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Editor } from \"../../editorObjects/Editor\";\nimport { Actions } from \"../../store\";\n\nexport const EditorChangeState = () => {\n  const dispatch = useDispatch();\n  const isSaved = useSelector((state: Editor) => {\n    return state.ui.saveInfo.saved;\n  });\n\n  const onClearCanvas = () => {\n    dispatch(Actions.Persist.action_onClearCanvas());\n  };\n\n  const readSavedCanvas = () => {\n    dispatch(Actions.Persist.action_readSavedCanvas());\n  };\n\n  const onSaveCanvas = () => {\n    dispatch(Actions.Persist.action_onSaveCanvas());\n  };\n\n  return (\n    <div className=\"field has-addons\">\n      <div className=\"control\">\n        <div className={` button `} onClick={onClearCanvas}>\n          <span className=\"icon is-small\">\n            <FontAwesomeIcon icon={faTimes} color={uiButton} />\n          </span>\n          <span>Clear canvas</span>\n        </div>\n      </div>\n\n      <div className=\"control\">\n        <div\n          className={` button ${isSaved ? \"is-success\" : \"\"}`}\n          onClick={onSaveCanvas}\n        >\n          <span className=\"icon is-small\">\n            <FontAwesomeIcon icon={faSave} color={uiButton} />\n          </span>\n          <span>Save canvas</span>\n        </div>\n      </div>\n\n      <div className=\"control\">\n        <div className={` button `} onClick={readSavedCanvas}>\n          <span className=\"icon is-small\">\n            <FontAwesomeIcon icon={faDownload} />\n          </span>\n          <span>Load from localstorage</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useRef, MouseEvent } from \"react\";\nimport { getTranslate3dCss } from \"./MapValuesToCss\";\nimport { Editor } from \"../../editorObjects/Editor\";\nimport { useSelector } from \"react-redux\";\n\nexport const MouseSelection = (props: {\n  isVisible: boolean;\n  onMouseDown: any;\n  onMouseUp: any;\n  onMouseMove: any;\n}) => {\n  const { isVisible } = props;\n  const sceneWrapperRef = useRef<HTMLDivElement>(null);\n\n  const start = useSelector((state: Editor) => {\n    return state.ui.mouseSelection.start;\n  });\n\n  const end = useSelector((state: Editor) => {\n    return state.ui.mouseSelection.end;\n  });\n\n  const mouseSelectionIsDragStarted = useSelector((state: Editor) => {\n    return state.ui.mouseSelection.isDragStarted;\n  });\n\n  if (isVisible === false) {\n    return <React.Fragment />;\n  }\n\n  const isActive = mouseSelectionIsDragStarted === true;\n  const { onMouseDown, onMouseUp, onMouseMove } = props;\n\n  const onMouseDownHandler = (event: MouseEvent<HTMLElement>) => {\n    if (sceneWrapperRef.current) {\n      const rect = sceneWrapperRef.current.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      onMouseDown(x, y);\n    }\n  };\n\n  const onMouseUpHandler = (event: MouseEvent<HTMLElement>) => {\n    onMouseUp();\n  };\n\n  const onMouseMoveHandler = (event: MouseEvent<HTMLElement>) => {\n    if (isActive) {\n      if (sceneWrapperRef.current) {\n        const rect = sceneWrapperRef.current.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        onMouseMove(x, y);\n      }\n    }\n  };\n\n  const width = Math.abs(end.x - start.x);\n  const height = Math.abs(end.y - start.y);\n  const top = Math.min(end.x, start.x);\n  const left = Math.min(end.y, start.y);\n\n  // @TODO: czy chce odznaczać zaznaczenie po wyjściu poza teren edytora?\n\n  return (\n    <div\n      className={\"mouse-selection\"}\n      ref={sceneWrapperRef}\n      onMouseDown={onMouseDownHandler}\n      onMouseUp={onMouseUpHandler}\n      // onMouseLeave={onMouseUpHandler}\n      onMouseMove={onMouseMoveHandler}\n      style={{\n        zIndex: isActive ? 23 : 9,\n      }}\n    >\n      {isActive ? (\n        <div\n          style={{\n            width,\n            height,\n            backgroundColor: \"rgba(0,0,0, 0.05)\",\n            border: \"1px solid rgba(0,0,0,.3)\",\n            transform: getTranslate3dCss(top, left),\n          }}\n        ></div>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\nimport { MouseSelection } from \"../operations/MouseSelection\";\n\nexport const MouseSelectionBeads = ({ isVisible }) => {\n  const dispatch = useDispatch();\n\n  const onMouseDown = (x, y) => {\n    dispatch(Actions.MouseSelection.action_onEditBeadsMouseDown(x, y));\n  };\n\n  const onMouseMove = (x, y) => {\n    dispatch(Actions.MouseSelection.action_onEditBeadsMouseMove(x, y));\n  };\n\n  const onMouseUp = () => {\n    dispatch(Actions.MouseSelection.action_onEditBeadsMouseUp());\n  };\n\n  return (\n    <MouseSelection\n      isVisible={isVisible}\n      onMouseDown={onMouseDown}\n      onMouseMove={onMouseMove}\n      onMouseUp={onMouseUp}\n    />\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\nimport { MouseSelection } from \"../operations/MouseSelection\";\n\nexport const MouseSelectionLines = ({ isVisible }) => {\n  const dispatch = useDispatch();\n\n  const onMouseDown = (x, y) => {\n    dispatch(Actions.MouseSelection.action_onEditLinesMouseDown(x, y));\n  };\n\n  const onMouseMove = (x, y) => {\n    dispatch(Actions.MouseSelection.action_onEditLinesMouseMove(x, y));\n  };\n\n  const onMouseUp = () => {\n    dispatch(Actions.MouseSelection.action_onEditLinesMouseUp());\n  };\n\n  return (\n    <MouseSelection\n      isVisible={isVisible}\n      onMouseDown={onMouseDown}\n      onMouseMove={onMouseMove}\n      onMouseUp={onMouseUp}\n    />\n  );\n};\n","import React from \"react\";\nimport { Bead, BeadTypes } from \"../../editorObjects/Editor\";\nimport { getTranslate3dCss } from \"../operations/MapValuesToCss\";\nimport { Actions } from \"../../store\";\nimport { useDispatch } from \"react-redux\";\n\nexport const DisplayBead = (props: {\n  bead: Bead;\n  opacity?: number;\n  zIndex?: number;\n  isSelected: boolean;\n  isSelectable: boolean;\n}) => {\n  const { bead, opacity, zIndex, isSelected, isSelectable } = props;\n  const isOpacity = opacity !== undefined && opacity >= 0 && opacity <= 1;\n  const isZindex = zIndex !== undefined && zIndex >= 0 && zIndex <= 9999;\n\n  const dispatch = useDispatch();\n  const onClick = () => {\n    if (isSelectable) {\n      dispatch(Actions.Draggable.action_onClickBead(bead.id));\n    }\n  };\n\n  let styles: React.CSSProperties = {\n    transform: getTranslate3dCss(bead.position.x, bead.position.y),\n    opacity: isOpacity ? opacity : 1,\n    zIndex: isZindex ? zIndex : undefined,\n    border: isSelected ? \"2px solid #000\" : \"\",\n  };\n  \n  if (bead.type === BeadTypes.BasicCircle) {\n    styles.background = bead.fill;\n    styles.width = bead.width;\n    styles.height = bead.height;\n    styles.borderRadius = bead.settings.radius;\n  }\n\n  if (bead.type === BeadTypes.BasicRectangle) {\n    styles.background = bead.fill;\n    styles.width = bead.width;\n    styles.height = bead.height;\n  }\n\n  return (\n    <div className=\"bead-item\" onClick={onClick} style={styles}>\n      &nbsp;\n    </div>\n  );\n};\n","import React from \"react\";\nimport { DisplayBead } from \"./DisplayBead\";\nimport { useSelector } from \"react-redux\";\nimport { Editor, EditorMode } from \"../../editorObjects/Editor\";\n\nexport const DisplayBeads = ({ mode }) => {\n  const fadeOut = mode === EditorMode.EditLines;\n  const onTop = mode === EditorMode.EditBeads;\n  const isSelectable = mode === EditorMode.EditBeads;\n  const beads = useSelector((state: Editor) => {\n    return Object.values(state.appData.beads);\n  });\n  const selectedBeadsIds = useSelector((state: Editor) => {\n    return state.ui.selectedBeadsIds;\n  });\n\n  return (\n    <React.Fragment>\n      {beads.map(bead => {\n        return (\n          <DisplayBead\n            key={bead.id}\n            bead={bead}\n            opacity={fadeOut ? 0.5 : 1}\n            isSelected={selectedBeadsIds[bead.id] !== undefined}\n            isSelectable={isSelectable}\n            zIndex={fadeOut ? 10 : onTop ? 20 : undefined}\n          />\n        );\n      })}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { getDistanceBetweenPoints, getRotate } from \"../../editorObjects/Point\";\nimport { getTranslate3dCss, getRotateCss } from \"../operations/MapValuesToCss\";\n\nexport const SelectionStraightLine = ({ start, end, onClick }) => {\n  const size = 0;\n  const height = 10;\n  const width = getDistanceBetweenPoints(start, end);\n  const rotate = getRotate(end.y - start.y, end.x - start.x);\n\n  return (\n    <div\n      style={{\n        height,\n        width,\n        backgroundColor: \"rgba(0,0,0,0.0)\",\n        transform: `${getTranslate3dCss(\n          start.x + size,\n          start.y + size\n        )} ${getRotateCss(rotate)}`,\n        transformOrigin: \"left center\",\n        cursor: \"pointer\",\n        zIndex: 20,\n      }}\n      onClick={onClick}\n      className=\"line\"\n    >\n      &nbsp;\n    </div>\n  );\n};\n","import React from \"react\";\nimport { getDistanceBetweenPoints, getRotate } from \"../../editorObjects/Point\";\nimport { getTranslate3dCss, getRotateCss } from \"../operations/MapValuesToCss\";\nimport { DraggableCore, DraggableData } from \"react-draggable\";\nimport { useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\n\nexport const SelectedStraightLine = ({ lineId, start, end }) => {\n  const size = 0;\n  const height = 10;\n  const width = getDistanceBetweenPoints(start, end);\n  const rotate = getRotate(end.y - start.y, end.x - start.x);\n\n  const dispatch = useDispatch();\n\n  const eventHandlerEndLine = (_, { deltaX, deltaY }: DraggableData) => {\n    dispatch(Actions.Draggable.action_onLineDrag(lineId, { deltaX, deltaY }));\n  };\n\n  return (\n    <DraggableCore\n      onStart={eventHandlerEndLine}\n      onDrag={eventHandlerEndLine}\n      onStop={eventHandlerEndLine}\n      disabled={false}\n      scale={1}\n    >\n      <div\n        style={{\n          height,\n          width,\n          backgroundColor: \"rgba(0,0,0,0.05)\",\n          border: \"1px dashed rgba(0,0,0,0.60)\",\n          transform: `${getTranslate3dCss(\n            start.x + size,\n            start.y + size\n          )} ${getRotateCss(rotate)}`,\n          transformOrigin: \"left center\",\n          cursor: \"move\",\n          zIndex: 21,\n        }}\n        className=\"line\"\n      >\n        &nbsp;\n      </div>\n    </DraggableCore>\n  );\n};\n","import React from \"react\";\nimport { Line } from \"../../editorObjects/Editor\";\nimport { StraightLine } from \"./StraightLine\";\nimport { DraggableData, DraggableCore } from \"react-draggable\";\nimport { SelectionStraightLine } from \"./SelectionStraightLine\";\nimport { SelectedStraightLine } from \"./SelectedStraightLine\";\nimport { getTranslate3dCss } from \"../operations/MapValuesToCss\";\nimport { useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\n\nexport const DisplayLine = (props: { line: Line; isSelected: boolean }) => {\n  const { isSelected, line } = props;\n  const dispatch = useDispatch();\n  const eventHandlerStartPoint = (_, { x, y }: DraggableData) => {\n    dispatch(Actions.Draggable.action_onStartPointDrag(line.id, { x, y }));\n  };\n  const eventHandlerEndPoint = (_, { x, y }: DraggableData) => {\n    dispatch(Actions.Draggable.action_onEndPointDrag(line.id, { x, y }));\n  };\n  const onClick = () => {\n    dispatch(Actions.Draggable.action_onClickLine(line.id));\n  };\n  const itemWidth = 10;\n  const itemHeight = 10;\n\n  return (\n    <div>\n      <DraggableCore\n        onStart={eventHandlerStartPoint}\n        onDrag={eventHandlerStartPoint}\n        onStop={eventHandlerStartPoint}\n        scale={1}\n        disabled={false}\n      >\n        <div\n          style={{\n            transform: getTranslate3dCss(line.start.x, line.start.y),\n            zIndex: isSelected === true ? 22 : 21,\n            width: itemWidth,\n            height: itemHeight,\n          }}\n          className={\"line-start\"}\n        >\n          &nbsp;\n        </div>\n      </DraggableCore>\n\n      <DraggableCore\n        onStart={eventHandlerEndPoint}\n        onDrag={eventHandlerEndPoint}\n        onStop={eventHandlerEndPoint}\n        disabled={false}\n        scale={1}\n      >\n        <div\n          style={{\n            transform: getTranslate3dCss(line.end.x, line.end.y),\n            zIndex: isSelected === true ? 22 : 21,\n            width: itemWidth,\n            height: itemHeight,\n          }}\n          className={\"line-end\"}\n        >\n          &nbsp;\n        </div>\n      </DraggableCore>\n\n      {isSelected === true ? (\n        <SelectedStraightLine\n          start={line.start}\n          end={line.end}\n          lineId={line.id}\n        />\n      ) : (\n        <SelectionStraightLine\n          start={line.start}\n          end={line.end}\n          onClick={onClick}\n        />\n      )}\n\n      <StraightLine start={line.start} end={line.end} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { DisplayLine } from \"./DisplayLine\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\n\nexport const DraggableLines = ({ lines, selectedLinesIds }) => {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      {lines.map(line => {\n        return (\n          <DisplayLine\n            key={line.id}\n            line={line}\n            isSelected={selectedLinesIds[line.id] !== undefined}\n          />\n        );\n      })}\n    </DndProvider>\n  );\n};\n","import React from \"react\";\nimport { Line } from \"../../editorObjects/Editor\";\nimport { StraightLine } from \"./StraightLine\";\n\nexport const DisplaySimpleLine = (props: { line: Line }) => {\n  const { line } = props;\n  return (\n    <div>\n      <StraightLine start={line.start} end={line.end} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { EditorMode, Editor } from \"../../editorObjects/Editor\";\nimport { DraggableLines } from \"./DraggableLines\";\nimport { DisplaySimpleLine } from \"./DisplaySimpleLine\";\nimport { useSelector } from \"react-redux\";\n\nexport const DisplayLines = ({ mode }) => {\n  const isEditable = mode === EditorMode.EditLines;\n  const lines = useSelector((state: Editor) => {\n    return Object.values(state.appData.lines);\n  });\n  const selectedLinesIds = useSelector((state: Editor) => {\n    return state.ui.selectedLinesIds;\n  });\n\n  if (isEditable) {\n    return <DraggableLines lines={lines} selectedLinesIds={selectedLinesIds} />;\n  }\n\n  return (\n    <React.Fragment>\n      {lines.map(line => {\n        return <DisplaySimpleLine key={line.id} line={line} />;\n      })}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { getTranslate3dCss } from \"./MapValuesToCss\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { DraggableCore } from \"react-draggable\";\n\nexport const DisplayGroupLines = ({ location, onDrag }) => {\n  const { x, y, w, h } = location;\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <DraggableCore\n        onStart={onDrag}\n        onDrag={onDrag}\n        onStop={onDrag}\n        scale={1}\n        disabled={false}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: w,\n            height: h,\n            transform: getTranslate3dCss(x, y),\n            opacity: 1,\n            zIndex: 22,\n            border: \"1px dashed rgba(0,0,0,0.2)\",\n            background: \"rgba(0,0,0,0.05)\",\n            cursor: \"move\",\n          }}\n        >\n          &nbsp;\n        </div>\n      </DraggableCore>\n    </DndProvider>\n  );\n};\n","import { Editor } from \"../../editorObjects/Editor\";\n\nexport const getGroupPositionFromLines = (selectedLines): { x; y; w; h } => {\n  let xMin: number = Number.MAX_SAFE_INTEGER;\n  let xMax: number = Number.MAX_SAFE_INTEGER * -1;\n  let yMin: number = Number.MAX_SAFE_INTEGER;\n  let yMax: number = Number.MAX_SAFE_INTEGER * -1;\n  selectedLines.forEach(line => {\n    const start = line.start;\n    const end = line.end;\n    xMin = Math.min(xMin, start.x, end.x);\n    xMax = Math.max(xMax, start.x, end.x);\n    yMin = Math.min(yMin, start.y, end.y);\n    yMax = Math.max(yMax, start.y, end.y);\n  });\n  return {\n    x: xMin,\n    y: yMin,\n    w: xMax - xMin + 10,\n    h: yMax - yMin + 10,\n  };\n};\n\nexport const getSelectedLines = (state: Editor) => {\n  return Object.keys(state.ui.selectedLinesIds).map(lineId => {\n    return state.appData.lines[lineId];\n  });\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\nimport { DraggableData } from \"react-draggable\";\nimport { DisplayGroupLines } from \"./DisplayGroupLines\";\nimport { getGroupPositionFromLines, getSelectedLines } from \"./getGroupPositionFromLines\";\n\nexport const DisplayLinesGroup = ({ selectedLinesIdsCount }) => {\n  const dispatch = useDispatch();\n  const selectedLines = useSelector(getSelectedLines);\n  const location = getGroupPositionFromLines(selectedLines);\n  const eventDragHandler = (_, { deltaX, deltaY }: DraggableData) => {\n    dispatch(Actions.Draggable.action_onGroupLineDrag({ deltaX, deltaY }));\n  };\n  return <DisplayGroupLines location={location} onDrag={eventDragHandler} />;\n};\n\nexport const MemoizedDisplayLinesGroup = React.memo(DisplayLinesGroup);\n","import React from \"react\";\nimport { getTranslate3dCss } from \"./MapValuesToCss\";\n\nexport const DisplayGroupBeads = ({ location }) => {\n  const { x, y, w, h } = location;\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: w,\n        height: h,\n        transform: getTranslate3dCss(x, y),\n        opacity: 1,\n        zIndex: 22,\n        border: \"1px dashed rgba(0,0,0,0.2)\",\n        background: \"rgba(0,0,0,0.05)\",\n      }}\n    >\n      &nbsp;\n    </div>\n  );\n};\n","import { Editor } from \"../../editorObjects/Editor\";\n\nexport const getGroupPositionFromBeads = (selectedBeads): { x; y; w; h } => {\n  let xMin: number = Number.MAX_SAFE_INTEGER;\n  let xMax: number = Number.MAX_SAFE_INTEGER * -1;\n  let yMin: number = Number.MAX_SAFE_INTEGER;\n  let yMax: number = Number.MAX_SAFE_INTEGER * -1;\n  selectedBeads.forEach(bead => {\n    const startX = bead.position.x;\n    const endX = bead.position.x + 10;\n    const startY = bead.position.y;\n    const endY = bead.position.y + 10;\n    xMin = Math.min(xMin, startX, endX);\n    xMax = Math.max(xMax, startX, endX);\n    yMin = Math.min(yMin, startY, endY);\n    yMax = Math.max(yMax, startY, endY);\n  });\n  return {\n    x: xMin,\n    y: yMin,\n    w: xMax - xMin + 10,\n    h: yMax - yMin + 10,\n  };\n};\n\nexport const getSelectedBeads = (state: Editor) => {\n  return Object.keys(state.ui.selectedBeadsIds).map(beadId => {\n    return state.appData.beads[beadId];\n  });\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { DisplayGroupBeads } from \"./DisplayGroupBeads\";\nimport {\n  getSelectedBeads,\n  getGroupPositionFromBeads,\n} from \"./getGroupPositionFromBeads\";\n\nconst DisplayBeadsGroup = ({ selectedBeadsIdsCount }) => {\n  const selectedBead = useSelector(getSelectedBeads);\n  const location = getGroupPositionFromBeads(selectedBead);\n\n  return <DisplayGroupBeads location={location} />;\n};\n\nexport const MemoizedDisplayBeadsGroup = React.memo(DisplayBeadsGroup);\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Editor, EditorMode } from \"../../editorObjects/Editor\";\nimport { MemoizedDisplayLinesGroup } from \"./DisplayLinesGroup\";\nimport { MemoizedDisplayBeadsGroup } from \"./DisplayBeadsGroup\";\n\nexport const GroupSelectionPlaceholder = ({ mode }) => {\n  const selectedBeadsIdsCount = useSelector((state: Editor) => {\n    return state.ui.selectedBeadsIdsCount;\n  });\n  \n  const selectedLinesIdsCount = useSelector((state: Editor) => {\n    return state.ui.selectedLinesIdsCount;\n  });\n  \n  if (mode === EditorMode.EditBeads && selectedBeadsIdsCount >= 2) {\n    return (\n      <MemoizedDisplayBeadsGroup\n        selectedBeadsIdsCount={selectedBeadsIdsCount}\n      />\n    );\n  }\n\n  if (mode === EditorMode.EditLines && selectedLinesIdsCount >= 2) {\n    return (\n      <MemoizedDisplayLinesGroup\n        selectedLinesIdsCount={selectedLinesIdsCount}\n      />\n    );\n  }\n  return <React.Fragment />;\n};\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Editor, EditorMode } from \"../../editorObjects/Editor\";\nimport { Actions } from \"../../store\";\n\nexport const PickBeadColor = ({ mode }) => {\n  if (mode === EditorMode.EditBeads) {\n    return <SelectedBeads />;\n  }\n\n  return <React.Fragment />;\n};\n\nconst SelectedBeads = () => {\n  const showToolbar = useSelector((state: Editor) => {\n    return state.ui.selectedBeadsIdsCount >= 1;\n  });\n  if (showToolbar) {\n    return <DisplayPickColorToolbar />;\n  }\n  return <React.Fragment />;\n};\n\nconst DisplayPickColorToolbar = () => {\n  const dispatch = useDispatch();\n  const colors = [\"#e3dec1\", \"#e5a947\", \"#7a514a\"];\n  const onClick = color => {\n    dispatch(Actions.Toolbar.action_changeBeadFill(color));\n  };\n  const selectedColors = useSelector((state: Editor) => {\n    return Array.from(\n      new Set(\n        Object.keys(state.ui.selectedBeadsIds).map(beadId => {\n          return state.appData.beads[beadId].fill;\n        })\n      )\n    );\n  });\n  return (\n    <React.Fragment>\n      <DisplaySelectedColor selectedColors={selectedColors} />\n      <DisplayAvailableColors\n        colors={colors}\n        selectedColors={selectedColors}\n        onClick={onClick}\n      />\n    </React.Fragment>\n  );\n};\n\nconst DisplaySelectedColor = ({ selectedColors }) => {\n  return (\n    <div className=\"fieldset\">\n      <div className=\"label\">Wypełnienie:</div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          boxSizing: \"border-box\",\n          paddingLeft: \"10px\",\n          paddingRight: \"20px\",\n          width: \"100%\",\n        }}\n      >\n        {selectedColors.map(hex => {\n          return (\n            <DisplayColor\n              background={hex}\n              key={hex}\n              isSelected={false}\n              onClick={undefined}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst DisplayAvailableColors = ({ colors, selectedColors, onClick }) => {\n  return (\n    <div className=\"fieldset\">\n      <div className=\"label\">Kolory:</div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          boxSizing: \"border-box\",\n          paddingLeft: \"10px\",\n          paddingRight: \"20px\",\n          width: \"100%\",\n        }}\n      >\n        {colors.map(hex => {\n          return (\n            <DisplayColor\n              background={hex}\n              key={hex}\n              isSelected={selectedColors.indexOf(hex) !== -1}\n              onClick={onClick}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst DisplayColor = ({ background, isSelected, onClick }) => {\n  return (\n    <div style={{ border: \"5px solid transparent\" }}>\n      <div\n        onClick={onClick ? () => onClick(background) : undefined}\n        style={{\n          width: 25,\n          height: 25,\n          background: background,\n          marginBottom: 0,\n          marginRight: 0,\n          border: isSelected ? \"2px solid #000\" : \"2px solid #000\",\n          boxShadow: isSelected\n            ? \"2px 2px 2px rgba(0,0,0,1)\"\n            : \"2px 2px 2px rgba(0,0,0,0.1)\",\n        }}\n      ></div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Editor, EditorMode } from \"../../editorObjects/Editor\";\nimport { Actions } from \"../../store\";\nimport {\n  getSelectedLines,\n  getGroupPositionFromLines,\n} from \"../operations/getGroupPositionFromLines\";\n\nexport const ChangeLinePosition = ({ mode }) => {\n  if (mode === EditorMode.EditLines) {\n    return <ChangePositionToolbar />;\n  }\n\n  return <React.Fragment />;\n};\n\nconst ChangePositionToolbar = () => {\n  const selectedLinesIdsCount = useSelector((state: Editor) => {\n    return state.ui.selectedLinesIdsCount;\n  });\n\n  if (selectedLinesIdsCount >= 2) {\n    return (\n      <DisplayGroupLinePosition selectedLinesIdsCount={selectedLinesIdsCount} />\n    );\n  } else if (selectedLinesIdsCount == 1) {\n    return <DisplayLinePosition />;\n  } else {\n    return <React.Fragment />;\n  }\n};\n\nconst DisplayLinePosition = () => {\n  const selectedLines = useSelector(getSelectedLines);\n  const location = getGroupPositionFromLines(selectedLines);\n  const dispatch = useDispatch();\n  const onChangeLocation = (deltaX, deltaY) => {\n    const lineId = selectedLines[0].id;\n    dispatch(\n      Actions.Draggable.action_onLineDrag(lineId, {\n        deltaX,\n        deltaY,\n      })\n    );\n  };\n  return (\n    <React.Fragment>\n      <InputNumberElement\n        label={\"X\"}\n        value={location.x}\n        onChange={newValue => {\n          onChangeLocation(location.x - newValue, 0);\n        }}\n        isDisabled={false}\n      />\n      <InputNumberElement\n        label={\"Y\"}\n        value={location.y}\n        onChange={newValue => {\n          onChangeLocation(0, location.y - newValue);\n        }}\n        isDisabled={false}\n      />\n    </React.Fragment>\n  );\n};\n\nconst DisplayGroupLinePosition = ({ selectedLinesIdsCount }) => {\n  const selectedLines = useSelector(getSelectedLines);\n  const location = getGroupPositionFromLines(selectedLines);\n  const dispatch = useDispatch();\n  const onChangeLocation = (deltaX, deltaY) => {\n    dispatch(Actions.Draggable.action_onGroupLineDrag({ deltaX, deltaY }));\n  };\n\n  return (\n    <React.Fragment>\n      <InputNumberElement\n        label={\"X\"}\n        value={location.x}\n        onChange={newValue => {\n          onChangeLocation(location.x - newValue, 0);\n        }}\n        isDisabled={false}\n      />\n      <InputNumberElement\n        label={\"Y\"}\n        value={location.y}\n        onChange={newValue => {\n          onChangeLocation(0, location.y - newValue);\n        }}\n        isDisabled={false}\n      />\n      <InputNumberElement\n        label={\"W\"}\n        value={location.w}\n        onChange={() => {}}\n        isDisabled={true}\n      />\n      <InputNumberElement\n        label={\"H\"}\n        value={location.h}\n        onChange={() => {}}\n        isDisabled={true}\n      />\n    </React.Fragment>\n  );\n};\n\nconst InputNumberElement = ({ label, value, onChange, isDisabled }) => {\n  return (\n    <div className={\"fieldset\"}>\n      <span className=\"label\">{label}</span>\n      <input\n        className=\"input\"\n        type=\"number\"\n        disabled={isDisabled}\n        min=\"0\"\n        max=\"99999\"\n        pattern=\"\\d*\"\n        step=\"1\"\n        value={value}\n        onChange={event => onChange(event.target.value)}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { EditorMode, Editor, BeadTypes } from \"../../editorObjects/Editor\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircle, faExpand } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const PickBeadType = ({ mode }) => {\n  if (mode === EditorMode.EditBeads) {\n    return <PickBeadTypeToolbar />;\n  }\n\n  return <React.Fragment />;\n};\n\nconst PickBeadTypeToolbar = () => {\n  const showToolbar = useSelector((state: Editor) => {\n    return state.ui.selectedBeadsIdsCount >= 1;\n  });\n\n  if (showToolbar) {\n    return <DisplayPickTypeToolbar />;\n  }\n  return <React.Fragment />;\n};\n\nconst DisplayPickTypeToolbar = () => {\n  const dispatch = useDispatch();\n  const types = [\n    {\n      type: BeadTypes.BasicCircle,\n      icon: \"circle\",\n    },\n    {\n      type: BeadTypes.BasicRectangle,\n      icon: \"rectangle-wide\",\n    },\n  ];\n  const onClick = type => {\n    dispatch(Actions.Toolbar.action_changeBeadType(type));\n  };\n  const selectedTypes = useSelector((state: Editor) => {\n    return Array.from(\n      new Set(\n        Object.keys(state.ui.selectedBeadsIds).map(beadId => {\n          return state.appData.beads[beadId].type;\n        })\n      )\n    );\n  });\n  return (\n    <React.Fragment>\n      <DisplaySelectedTypes selectedTypes={selectedTypes} />\n      <DisplayAvailableTypes\n        types={types}\n        selectedTypes={selectedTypes}\n        onClick={onClick}\n      />\n    </React.Fragment>\n  );\n};\n\nconst DisplaySelectedTypes = ({ selectedTypes }) => {\n  return (\n    <div className=\"fieldset\">\n      <div className=\"label\">Rodzaj:</div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          boxSizing: \"border-box\",\n          paddingLeft: \"10px\",\n          paddingRight: \"20px\",\n          width: \"100%\",\n        }}\n      >\n        {selectedTypes.map((type, index) => {\n          return (\n            <DisplayType\n              icon={type.icon}\n              type={type.type}\n              key={index}\n              isSelected={false}\n              onClick={undefined}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst DisplayAvailableTypes = ({ types, selectedTypes, onClick }) => {\n  return (\n    <div className=\"fieldset\">\n      <div className=\"label\">Rodzaje:</div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          boxSizing: \"border-box\",\n          paddingLeft: \"10px\",\n          paddingRight: \"20px\",\n          width: \"100%\",\n        }}\n      >\n        {types.map((type, index) => {\n          return (\n            <DisplayType\n              icon={type.icon}\n              type={type.type}\n              key={index}\n              isSelected={selectedTypes.indexOf(type.type) !== -1}\n              onClick={onClick}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst DisplayType = ({ icon, type, isSelected, onClick }) => {\n  return (\n    <div style={{ border: \"5px solid transparent\" }}>\n      <div\n        onClick={onClick ? () => onClick(type) : undefined}\n        style={{\n          width: 25,\n          height: 25,\n          background: \"#eee\",\n          marginBottom: 0,\n          marginRight: 0,\n          border: isSelected ? \"2px solid #000\" : \"2px solid #000\",\n          boxShadow: isSelected\n            ? \"2px 2px 2px rgba(0,0,0,1)\"\n            : \"2px 2px 2px rgba(0,0,0,0.1)\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {icon === \"circle\" ? <FontAwesomeIcon icon={faCircle} /> : null}\n        {icon === \"rectangle-wide\" ? <FontAwesomeIcon icon={faExpand} /> : null}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Editor, EditorMode } from \"../../editorObjects/Editor\";\n// import { Actions } from \"../../store\";\n// import {\n//   getSelectedLines,\n//   getGroupPositionFromLines,\n// } from \"../operations/getGroupPositionFromLines\";\n// import { getSelectedBeads } from \"../operations/getGroupPositionFromBeads\";\n\nexport const ChangeBeadRotate = ({ mode }) => {\n  if (mode === EditorMode.EditBeads) {\n    return <ChangeBeadRotateToolbar />;\n  }\n\n  return <React.Fragment />;\n};\n\n\nconst ChangeBeadRotateToolbar = () => {\n  const selectedBeadsIdsCount = useSelector((state: Editor) => {\n    return state.ui.selectedBeadsIdsCount;\n  });\n\n//   if (selectedBeadsIdsCount >= 2) {\n//     return (\n//       <DisplayGroupBeadRotation selectedBeadsIdsCount={selectedBeadsIdsCount} />\n//     );\n//   } else if (selectedBeadsIdsCount == 1) {\n//     return <DisplayBeadRotation />;\n//   } else {\n//     return <React.Fragment />;\n//   }\n  return <React.Fragment />;\n};\n\n// const DisplayBeadRotation = () => {\n//   const selectedBeads = useSelector(getSelectedLines);\n//   const rotate = getGroupRotationFromBeads(selectedBeads);\n//   const dispatch = useDispatch();\n//   const onChangeRotate = deg => {\n//     const beadId = selectedBeads[0];\n//     dispatch(\n//       Actions.Toolbar.action_onBeadRotate(beadId, {\n//         deg,\n//       })\n//     );\n//   };\n//   return (\n//     <React.Fragment>\n//       <InputNumberElement\n//         label={\"Stopni\"}\n//         value={rotate}\n//         onChange={onChangeRotate}\n//         isDisabled={false}\n//       />\n//     </React.Fragment>\n//   );\n// };\n\n// const DisplayGroupBeadRotation = ({ selectedBeadsIdsCount }) => {\n//   const selectedBeads = useSelector(getSelectedBeads);\n//   const rotate = getGroupRotationFromBeads(selectedBeads);\n//   const dispatch = useDispatch();\n//   const onChangeRotate = deg => {\n//     dispatch(Actions.Toolbar.action_onBeadsRotate({ deg }));\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <InputNumberElement\n//         label={\"Stopni\"}\n//         value={rotate}\n//         onChange={onChangeRotate}\n//         isDisabled={false}\n//       />\n//     </React.Fragment>\n//   );\n// };\n\n// const InputNumberElement = ({ label, value, onChange, isDisabled }) => {\n//   return (\n//     <div className={\"fieldset\"}>\n//       <span className=\"label\">{label}</span>\n//       <input\n//         className=\"input\"\n//         type=\"number\"\n//         disabled={isDisabled}\n//         min=\"0\"\n//         max=\"360\"\n//         pattern=\"\\d*\"\n//         step=\"1\"\n//         value={value}\n//         onChange={event => onChange(event.target.value)}\n//       />\n//     </div>\n//   );\n// };\n","import React from \"react\";\nimport { Editor, EditorMode } from \"../editorObjects/Editor\";\nimport { EditorModes } from \"./Toolbar/EditorModes\";\nimport { AddLineMode } from \"./Line/AddLineMode\";\nimport { EditorChangeState } from \"./Toolbar/EditorChangeState\";\nimport { useSelector, useStore } from \"react-redux\";\nimport { MouseSelectionBeads } from \"./Bead/MouseSelectionBeads\";\nimport { MouseSelectionLines } from \"./Line/MouseSelectionLines\";\nimport { DisplayBeads } from \"./Bead/DisplayBeads\";\nimport { DisplayLines } from \"./Line/DisplayLines\";\nimport { GroupSelectionPlaceholder } from \"./operations/GroupSelectionPlaceholder\";\nimport { PickBeadColor } from \"./Toolbar/PickColor\";\nimport { ChangeLinePosition } from \"./Toolbar/ChangeLinePosition\";\nimport { PickBeadType } from \"./Toolbar/PickBeadType\";\nimport { ChangeBeadRotate } from \"./Toolbar/ChangeBeadRotate\";\n\nexport const EditorScene = () => {\n  const editorMode = useSelector((state: Editor) => {\n    return state.mode;\n  });\n\n  const store = useStore();\n  const state = store.getState();\n  console.log(\"EditorRerender: \", state);\n\n  return (\n    <div className=\"scene\">\n      <div className=\"topbar-wrapper\">\n        <EditorChangeState />\n      </div>\n\n      <div className=\"actions-wrapper\">\n        <EditorModes editorMode={editorMode} />\n      </div>\n\n      <div className={\"scene-wrapper\"}>\n        <AddLineMode isActive={editorMode === EditorMode.AddLine} />\n\n        <MouseSelectionLines isVisible={editorMode === EditorMode.EditLines} />\n\n        <MouseSelectionBeads isVisible={editorMode === EditorMode.EditBeads} />\n\n        <DisplayBeads mode={editorMode} />\n\n        <DisplayLines mode={editorMode} />\n\n        <GroupSelectionPlaceholder mode={editorMode} />\n      </div>\n\n      <div className={\"toolbar-wrapper\"}>\n        <ChangeLinePosition mode={editorMode} />\n        <PickBeadType mode={editorMode} />\n        <ChangeBeadRotate mode={editorMode} />\n        <PickBeadColor mode={editorMode} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"bulma/css/bulma.css\";\nimport \"./App.css\";\nimport { EditorScene } from \"./components/Editor\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nconst App: React.FC = () => {\n  const rootStore = createStore(\n    store,\n    \"__REDUX_DEVTOOLS_EXTENSION__\" in window &&\n      (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n  );\n  return (\n    <div className=\"App\">\n      <Provider store={rootStore}>\n        <EditorScene />\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}