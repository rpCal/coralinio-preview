{"version":3,"sources":["editorObjects/Editor.tsx","components/colors.ts","editorObjects/Point.ts","editorObjects/Bead.ts","editorObjects/Line.ts","immerReducers/BeadSnapperImmerReducer.tsx","immerReducers/DraggableOperationsImmerReducer.tsx","immerReducers/PersistImmerReducer.tsx","immerReducers/ChangeEditorModeImmerReducer.tsx","immerReducers/MainImmerReducer.tsx","immerReducers/MouseSelectionImmerReducer.tsx","immerReducers/ToolbarImmerReducer.tsx","immerReducers/TopbarImmerReducer.tsx","immerReducers/PaintImmerReducer.tsx","store.tsx","components/Toolbar/EditorModes.tsx","components/operations/MapValuesToCss.tsx","components/Line/StraightLine.tsx","components/Line/AddLineMode.tsx","components/operations/MouseSelection.tsx","components/Bead/MouseSelectionBeads.tsx","components/Line/MouseSelectionLines.tsx","components/Bead/DisplayBead.tsx","components/Bead/DisplayBeads.tsx","components/Line/SelectionStraightLine.tsx","components/Line/SelectedStraightLine.tsx","components/Line/DisplayLine.tsx","components/Line/DraggableLines.tsx","components/Line/DisplaySimpleLine.tsx","components/Line/DisplayLines.tsx","components/operations/DisplayGroupLines.tsx","components/operations/getGroupPositionFromLines.ts","components/operations/DisplayLinesGroup.tsx","components/operations/DisplayGroupBeads.tsx","components/operations/getGroupPositionFromBeads.ts","components/operations/DisplayBeadsGroup.tsx","components/operations/GroupSelectionPlaceholder.tsx","components/Toolbar/ui/FieldBeadPreview.tsx","components/Toolbar/ui/ToolbarField.tsx","components/Toolbar/ui/ToolbarFieldSet.tsx","components/Toolbar/ui/FieldColorPicker.tsx","components/Toolbar/ui/FieldColor.tsx","components/Toolbar/ui/FieldsetColor.tsx","components/Toolbar/ui/FieldBeadTypePicker.tsx","components/Toolbar/ui/FieldsetBeadType.tsx","components/Toolbar/ui/FieldSlider.tsx","components/Toolbar/ui/FieldCheckbox.tsx","components/Toolbar/ui/FieldsetBeadSpacing.tsx","components/Toolbar/ui/FieldsetBeadCount.tsx","components/Toolbar/ui/FieldSliderWithLabel.tsx","components/Toolbar/ui/FieldsetWidthAndHeight.tsx","components/Toolbar/ui/FieldDeleteAndCopy.tsx","components/Toolbar/ui/FieldsetBeadRotate.tsx","components/Toolbar/Modes/ToolbarEditLines.tsx","components/Toolbar/Modes/ToolbarEditBeads.tsx","components/Toolbar/Modes/ToolbarAddLine.tsx","components/Toolbar/Modes/ToolbarIdle.tsx","components/operations/DisplayGridLines.tsx","components/Topbar/TopbarMain.tsx","components/Toolbar/EditorChangeState.tsx","components/Topbar/TopbarSecoundary.tsx","components/operations/Brush.tsx","components/Toolbar/ui/FieldsetSize.tsx","components/Toolbar/Modes/ToolbarPaint.tsx","components/Editor.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BeadTypes","EditorMode","EditorMenuMain","EditorGridType","BrushType","uiButton","buildPoint","x","y","immerable","normalize","point","length","Math","sqrt","getLength","useLen","scale","scalar","add","getDistanceBetweenPoints","start","end","getRotate","atan2","contain","p1","p2","p","buildBead","props","defaults","id","generate","position","type","BasicEllipse","rotate","lineRotate","color","height","width","keepAspectRatio","merge","buildLine","__defaults","beadIds","settings","beadsCount","beadsAutoCount","beadsSpacing","beadsAutoSpacing","defaultBead","getPointFromStartLine","startX","startY","endX","endY","distance","BeadSnapperImmerReducer","lineId","currentLine","this","draftState","appData","lines","count","getLineBeadsCount","currentCount","remaining","addRemainingBeads","overflow","removeOverflowBeads","modifyBeadsPosition","modifyBeadsRotate","lineLen","beadsWidths","beadsWidth","forEach","beadId","beads","push","defaultBeadWidth","remainingSpace","floor","i","remainingCount","ui","lineSettings","undefined","bead","overflowCount","arrLen","lastItemBeadId","splice","currentDistance","newPosition","standardLineHeight","avaiableSpace","dynamicBeadsSpacing","lineRotateRadian","PI","ImmerReducer","DraggableOperationsImmerReducer","saveInfo","saved","haveUnsavedChanges","line","mode","EditLines","updateBeadsPositions","editorAppDataHasChanged","key","data","grid","snapEnabled","hexSize","Box","round","Hex","hSpace","hexHeight","vSpace","changeX","vLine","changeY","lineStart","lineEnd","deltaX","deltaY","newX","newY","Object","keys","selectedLinesIds","selectedLinesIdsCount","action_onClickLine","selectedBeadsIds","selectedBeadsIdsCount","PersistImmerReducer","console","log","window","readedData","localStorage","getItem","cached","JSON","parse","currBead","currLine","err","error","info","setItem","stringify","ChangeEditorModeImmerReducer","clearSelectedBeads","clearSelectedLines","newEditorMode","newValue","MainImmerReducer","MouseSelectionImmerReducer","mouseSelection","isDragStarted","isDragged","abs","min","max","p3","ToolbarImmerReducer","deg","value","firstLineId","newLinesIds","newLine","newBead","ratio","updateLineFromSelectedBeads","results","indexOf","brush","size","TopbarImmerReducer","currentMenuMainOpen","File","None","Settings","isVisible","PaintImmerReducer","Color","mousePoint","centerPoint","defaultAppData","Idle","Actions","Main","createActionCreators","Draggable","Persist","ChangeEditorMode","MouseSelection","Toolbar","Topbar","Paint","store","composeReducers","createReducerFunction","EditorModes","editorMode","dispatch","useDispatch","onChangeEditorMode","action_onChangeEditorMode","className","label","icon","faArrowsAlt","onClick","isSelected","faEdit","EditBeads","faPlus","AddLine","faPaintBrush","StateButton","getTranslate3dCss","z","getRotateCss","StraightLine","style","transform","transformOrigin","AddLineMode","isActive","Fragment","AddLineModeContent","useState","startPoint","setStartPoint","endPoint","setEndPoint","isDragEnabled","setIsDragEnabled","lineRef","useRef","onMouseUp","event","current","rect","getBoundingClientRect","clientX","left","clientY","top","onAddLine","action_onAddLine","onMouseDown","onMouseMove","onMouseLeave","ref","sceneWrapperRef","useSelector","state","mouseSelectionIsDragStarted","zIndex","backgroundColor","border","MouseSelectionBeads","action_onEditBeadsMouseDown","action_onEditBeadsMouseMove","action_onEditBeadsMouseUp","MouseSelectionLines","action_onEditLinesMouseDown","action_onEditLinesMouseMove","action_onEditLinesMouseUp","DisplayBead","opacity","isSelectable","isOpacity","isZindex","translate3d","rotateCss","styles","background","borderRadius","action_onClickBead","DisplayBeads","fadeOut","onTop","values","map","SelectionStraightLine","cursor","SelectedStraightLine","snapToGrid","gridItemW","gridItemH","set_tempX","set_tempY","set_lineStart","set_lineEnd","onStart","_","onDrag","action_onLineDrag","onStop","disabled","DisplayLine","action_onStartPointDrag","action_onEndPointDrag","DraggableLines","backend","HTML5Backend","DisplaySimpleLine","DisplayLines","isEditable","DisplayGroupLines","location","w","h","getSelectedLines","MemoizedDisplayLinesGroup","React","memo","selectedLines","xMin","Number","MAX_SAFE_INTEGER","xMax","yMin","yMax","getGroupPositionFromLines","action_onGroupLineDrag","DisplayGroupBeads","getSelectedBeads","MemoizedDisplayBeadsGroup","selectedBeads","getGroupPositionFromBeads","GroupSelectionPlaceholder","FieldBeadPreview","displayBead","marginTop","marginBottom","display","justifyContent","alignItems","boxSizing","ToolbarField","onToggle","marginRight","flexDirection","paddingLeft","paddingRight","ToolbarFieldSet","selected","children","isPickerOpen","setIsPickerOpen","borderTop","cloneElement","FieldColorPicker","onChange","colors","material","paddingTop","paddingBottom","DisplayColorsGroup","flexWrap","group","toString","FieldColor","boxShadow","FieldsetColor","faPalette","BeadTypesIcons","BasicRectangle","FieldBeadTypePicker","types","selectedType","DisplayAvailableBeadTypes","index","DisplayBeadType","faCircle","faExpand","FieldsetBeadType","faShapes","SliderWithTooltip","createSliderWithTooltip","Slider","FieldSlider","step","defaultValue","marks","0","50","100","FieldCheckbox","isDisabled","checked","target","FieldsetBeadSpacing","onChange_beadsSpacing","onChange_beadsAutoSpacing","faDivide","FieldsetBeadCount","onChange_beadsCount","onChange_beadsAutoCount","faDiceSix","1","FieldSliderWithLabel","borderBottom","padding","flexGrow","FieldsetWidthAndHeight","onChange_beadHeight","onChange_beadWidth","onChange_keepAspectRatio","format","toLocaleString","maximumFractionDigits","faExpandArrowsAlt","faLink","faUnlink","faArrowsAltH","faArrowsAltV","FieldDeleteAndCopy","onDelete","onClone","onReset","faTrash","faClone","faDizzy","FieldsetBeadRotate","faSyncAlt","suffix","allowNegative","allowEmptyFormatting","onValueChange","floatValue","placeholder","textAlign","fontFamily","fontSize","fontWeight","lineHeight","ToolbarEditLines","ToolbarEditLinesWrapper","Content","BeadsRotate","isNaN","action_changeSelectedLines_defaultBead_rotate","BeadSize","action_changeSelectedLines_defaultBead_height","action_changeSelectedLines_defaultBead_width","action_changeSelectedLines_defaultBead_keepAspectRatio","BeadsCount","action_changeSelectedLines_settings_beadsAutoCount","action_changeSelectedLines_settings_beadsCount","BeadsSpacing","action_changeSelectedLines_settings_beadsAutoSpacing","action_changeSelectedLines_settings_beadsSpacing","BeadType","action_changeSelectedLines_defaultBead_type","BeadColor","action_changeSelectedLines_defaultBead_color","BeadPreview","DeleteAndClone","action_deleteSelectedLines","action_cloneSelectedLines","action_resetSelectedLines","ToolbarEditBeads","ContentWrapper","action_changeSelectedBeads_rotate","action_changeSelectedBeads_height","action_changeSelectedBeads_width","action_changeSelectedBeads_keepAspectRatio","action_changeSelectedBeads_type","action_changeSelectedBeads_color","ToolbarAddLine","action_changeDefaultLineBeadRotate","action_changeDefaultLineBeadHeight","action_changeDefaultLineBeadWidth","action_changeDefaultLineBeadKeepAspectRatio","action_changeDefaultLineBeadsAutoCount","action_changeDefaultLineBeadsCount","action_changeDefaultLineBeadsAutoSpacing","action_changeDefaultLineBeadsSpacing","action_changeDefaultLineBeadType","action_changeDefaultLineColor","ToolbarIdle","linesLen","beadsLen","DisplayGridLines","GridBox","svg","backgroundUrl","backgroundImage","backgroundRepeat","backgroundPosition","pointy_hex_corner","center","angle_deg","angle_rad","cos","sin","GridHex","movedPoint","moreMovedPoint","evenmoreMovedPoint","boxH","points","a","b","TopbarMain","margin","action_toggleMenuFile","faFileAlt","action_toggleMenuSettings","faCog","EditorChangeState","isSaved","action_onClearCanvas","faTimes","action_onSaveCanvas","faSave","action_readSavedCanvas","faDownload","alignSelf","TopbarSecoundary","SubMenuFile","SubMenuSettings","onChange_isVisible","action_toggleGridIsVisible","onChange_snapEnabled","action_toggleGridSnapEnabled","onClick_selectTypeHex","action_setGridType","onClick_selectTypeBox","onChange_gridItemW","action_setGridWidth","onChange_gridItemH","action_setGridHeight","onChange_hexSize","action_setGridHexSize","GridOptions","GridBoxSettings","maxLength","maxWidth","GridHexSettings","Brush","ColorBrush","set_isVisible","isActivated","set_isActivated","pointX","set_pointX","pointY","set_pointY","set_rect","action_applyColorBrush","onMouseEnter","BrushElement","FieldsetSize","ToolbarPaint","BrushSize","action_updateBrushSize","BrushColor","action_updateBrushColor","EditorScene","useStore","getState","App","rootStore","createStore","Boolean","hostname","match","Sentry","dsn","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5e9a993.chunk.js","sourcesContent":["import { immerable } from \"immer\";\nimport { DeepPartial } from \"ts-essentials\";\n\nexport interface Point {\n  x: number;\n  y: number;\n  [immerable]: boolean;\n}\n\nexport enum BeadTypes {\n  BasicRectangle = \"BasicRectangle\",\n  BasicEllipse = \"BasicEllipse\",\n}\n\nexport interface Bead {\n  id: string;\n  position: Point;\n  [immerable]: boolean;\n  width: number;\n  height: number;\n  type: BeadTypes;\n  color: string;\n  rotate: number;\n  lineRotate: number;\n  keepAspectRatio: boolean;\n}\n\nexport interface Line {\n  id: string;\n  start: Point;\n  end: Point;\n  beadIds: string[];\n  [immerable]: boolean;\n  settings: {\n    beadsCount: number;\n    beadsAutoCount: boolean;\n    beadsSpacing: number;\n    beadsAutoSpacing: boolean;\n    defaultBead: Partial<Bead>;\n  };\n}\n\nexport interface AppData {\n  beads: { [s: string]: Bead };\n  lines: { [s: string]: Line };\n}\n\nexport enum EditorMode {\n  Idle = \"Idle\",\n  EditLines = \"EditLines\",\n  AddLine = \"AddLine\",\n  EditBeads = \"EditBeads\",\n  Paint = \"ColorPaint\",\n}\nexport enum EditorMenuMain {\n  None = \"None\",\n  File = \"File\",\n  Settings = \"Settings\",\n}\nexport enum EditorGridType {\n  Hex = \"Hex\",\n  Box = \"Box\",\n}\nexport enum BrushType {\n  Color = \"Color\",\n}\n\nexport interface EditorUi {\n  lineSettings: DeepPartial<Line>;\n  saveInfo: {\n    saved: boolean;\n    haveUnsavedChanges: boolean;\n  };\n  selectedLinesIds: { [s: string]: boolean };\n  selectedLinesIdsCount: number;\n  selectedBeadsIds: { [s: string]: boolean };\n  selectedBeadsIdsCount: number;\n  mouseSelection: {\n    start: Point;\n    end: Point;\n    isDragStarted: boolean;\n    isDragged: boolean;\n  };\n  currentMenuMainOpen: EditorMenuMain;\n  grid: {\n    type: EditorGridType;\n    hexSize: number;\n    snapEnabled: boolean;\n    isVisible: boolean;\n    width: number;\n    height: number;\n  };\n  brush: {\n    type: BrushType;\n    size: number;\n    color: string;\n  };\n}\n\nexport interface Editor {\n  appData: AppData;\n  ui: EditorUi;\n  mode: EditorMode;\n}\n","export const uiButton = \"#aeaeae\"\nexport const defaulBeadColor = \"#4fc3f7\";","import { Point } from \"./Editor\";\nimport { immerable } from \"immer\";\n\nexport const buildPoint = (x: number = 0, y: number = 0): Point => {\n  return {\n    x,\n    y,\n    [immerable]: true,\n  } as Point;\n};\n\nexport const getLength = (point: Point) => {\n  return Math.sqrt(point.x * point.x + point.y * point.y);\n};\n\nexport const normalize = (point: Point) => {\n  const length = getLength(point);\n  const useLen = length === 0;\n  const x = useLen ? 0 : point.x / length;\n  const y = useLen ? 0 : point.y / length;\n  return buildPoint(x, y);\n};\n\nexport const scale = (point: Point, scalar: number) => {\n  return buildPoint(point.x * scalar, point.y * scalar);\n};\n\nexport const add = (point: Point, x: number, y: number) => {\n  return buildPoint(point.x + x, point.y + y);\n};\n\nexport const getDistance = (x1, y1, x2, y2): number => {\n  return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n};\n\nexport const getDistanceBetweenPoints = (start: Point, end: Point): number => {\n  return Math.sqrt(\n    (end.x - start.x) * (end.x - start.x) +\n      (end.y - start.y) * (end.y - start.y)\n  );\n};\n\nexport const getRotate = (y, x) => {\n  return Math.atan2(y, x);\n};\n\nexport const contain = (p1: Point, p2: Point, p: Point): boolean => {\n  return p.x > p1.x && p.x < p2.x && p.y > p1.y && p.y < p2.y;\n};\n\nexport const toRadian = (radians: number) => {\n  return (radians / 180) * Math.PI;\n};\n\nexport const toDeg = (radians: number) => {\n  return (radians * 180) / Math.PI;\n};\n","import { immerable } from \"immer\";\nimport { generate } from \"shortid\";\nimport { Point, Bead, BeadTypes } from \"./Editor\";\nimport { DeepPartial } from \"ts-essentials\";\nimport { buildPoint } from \"./Point\";\nimport { merge } from \"lodash\";\nimport { defaulBeadColor } from \"../components/colors\";\n\nexport const buildBead = (props: DeepPartial<Bead>): Bead => {\n  const defaults: Bead = {\n    id: generate(),\n    position: buildPoint(0, 0),\n    type: BeadTypes.BasicEllipse,\n    rotate: 0,\n    lineRotate: 0,\n    color: defaulBeadColor,\n    height: 10,\n    width: 10,\n    keepAspectRatio: false,\n    [immerable]: true,\n  };\n  return merge(defaults, props);\n  // const id = generate();\n  // const beadType = type ? type : BeadTypes.BasicCircle;\n  // const common = {\n  //   id,\n  //   position,\n  //   [immerable]: true,\n  //   type: beadType,\n  // };\n\n  // if (beadType === BeadTypes.BasicCircle) {\n  //   return buildBead_BasicCircle(common);\n  // }\n\n  // if (beadType === BeadTypes.BasicRectangle) {\n  //   return buildBead_BasicRectangle(common);\n  // }\n\n  // return buildBead_BasicCircle(common);\n};\n\n// const buildBead_BasicCircle = common => {\n//   return {\n//     ...common,\n//     width: 20,\n//     height: 20,\n//     fill: `linear-gradient(\n//       to bottom,\n//       rgba(254, 204, 177, 1) 0%,\n//       rgba(241, 116, 50, 1) 50%,\n//       rgba(234, 85, 7, 1) 51%,\n//       rgba(251, 149, 94, 1) 100%\n//     )`,\n//     settings: {\n//       radius: 20,\n//     },\n//   } as Bead;\n// };\n\n// const buildBead_BasicRectangle = common => {\n//   return {\n//     ...common,\n//     width: 20,\n//     height: 40,\n//     fill: \"#b1b1b1\",\n//   } as Bead;\n// };\n","import { immerable } from \"immer\";\nimport { Line, Point } from \"./Editor\";\nimport { generate } from \"shortid\";\nimport { normalize, scale, add, buildPoint } from \"./Point\";\nimport { merge } from \"lodash\";\nimport { DeepPartial } from \"ts-essentials\";\nimport { buildBead } from \"./Bead\";\n\nexport const buildLine = (props: DeepPartial<Line>): Line => {\n  const __defaults = {\n    id: generate(),\n    start: buildPoint(10, 10),\n    end: buildPoint(100, 100),\n    beadIds: [],\n    settings: {\n      beadsCount: 0,\n      beadsAutoCount: true,\n      beadsSpacing: 0,\n      beadsAutoSpacing: false,\n      defaultBead: buildBead({}),\n    },\n    [immerable]: true,\n  };\n\n  return merge(__defaults, props);\n};\n\nexport const getLength = (line: Line): number => {\n  return Math.sqrt(\n    (line.end.x - line.start.x) * (line.end.x - line.start.x) +\n      (line.end.y - line.start.y) * (line.end.y - line.start.y)\n  );\n};\n\nexport const getPointFromStart = (line: Line, distance: number): Point => {\n  const x = line.end.x - line.start.x;\n  const y = line.end.y - line.start.y;\n  let point = buildPoint(x, y);\n  point = normalize(point);\n  point = scale(point, distance);\n  point = add(point, line.start.x, line.start.y);\n  return point;\n};\n\nexport const getPointFromStartLine = (\n  startX: number,\n  startY: number,\n  endX: number,\n  endY: number,\n  distance: number\n): Point => {\n  const x = endX - startX;\n  const y = endY - startY;\n  let point = buildPoint(x, y);\n  point = normalize(point);\n  point = scale(point, distance);\n  point = add(point, startX, startY);\n  return point;\n};\n","import { ImmerReducer } from \"immer-reducer\";\nimport { Editor, EditorMode, Point } from \"../editorObjects/Editor\";\nimport {\n  buildPoint,\n  getDistanceBetweenPoints,\n  getRotate,\n  toDeg,\n} from \"../editorObjects/Point\";\nimport { buildBead } from \"../editorObjects/Bead\";\nimport { buildLine } from \"../editorObjects/Line\";\nimport { getPointFromStartLine } from \"../editorObjects/Line\";\nimport { merge } from \"lodash\";\n\nexport class BeadSnapperImmerReducer extends ImmerReducer<Editor> {\n  \n  // useHexGrid(){\n  //   xPos = P.transform.position[0];\n  //   yPos = P.transform.position[1];\n\n  //   cSize = L.effect(\"Cell Size\")(\"Slider\");\n  //   xOffset = L.effect(\"X Offset\")(\"Slider\");\n  //   yOffset = L.effect(\"Y Offset\")(\"Slider\");\n\n  //   // Convert size value into distance values between cells\n  //   cWidth = cSize*.75;\n  //   cHeight = cSize*13/15;\n\n  //   // Find new X and Y positions\n  //   yNew = yPos - yPos % cHeight + cHeight/2;\n  //   xNew = xPos - (xPos % cWidth) + (((yNew - cHeight/2).toFixed(2)/cHeight).toFixed(2) % 1) * (cWidth/2);\n\n  //   // Check for even/odd column, adjust properly\n  //   if (!(xNew % (cWidth*2) == 0)) yNew += cHeight/2;\n\n  //   // Implement offset\n  //   [xNew + xOffset, yNew+yOffset]\n  // }\n\n  updateBeadsPositions(lineId: string) {\n    // console.log(\"updateBeadsPositions: ---------------------- start\");\n    const currentLine = this.draftState.appData.lines[lineId];\n    const count = this.getLineBeadsCount(lineId);\n    const currentCount = currentLine.beadIds.length;\n    // console.log(\n    //   \"updateBeadsPositions: currentCount: \",\n    //   currentCount,\n    //   \" count\",\n    //   count\n    // );\n    if (count > currentCount) {\n      const remaining = count - currentCount;\n      this.addRemainingBeads(lineId, remaining);\n    } else if (count < currentCount) {\n      const overflow = currentCount - count;\n      this.removeOverflowBeads(lineId, overflow);\n    }\n    this.draftState.appData.lines[lineId].settings.beadsCount = count;\n    this.modifyBeadsPosition(lineId);\n    this.modifyBeadsRotate(lineId);\n    // console.log(\"updateBeadsPositions: ----------------------  end\");\n  }\n\n  getLineBeadsCount(lineId) {\n    const currentLine = this.draftState.appData.lines[lineId];\n    const {\n      beadsAutoCount,\n      beadsAutoSpacing,\n      beadsCount,\n      beadsSpacing,\n      defaultBead,\n    } = currentLine.settings;\n    const { start, end, beadIds } = currentLine;\n    const lineLen = getDistanceBetweenPoints(start, end);\n\n    // console.log(\n    //   \"getLineBeadsCount \",\n    //   lineLen,\n    //   beadsAutoCount === true,\n    //   beadsAutoSpacing === true\n    // );\n    if (beadsAutoCount === true && beadsAutoSpacing === true) {\n      // beadsy sa przyklejone do siebie. COunt powinien byc tyle ile sie zmiesci na lini\n      let beadsWidths: number[] = [];\n      let beadsWidth = 0;\n      beadIds.forEach(beadId => {\n        const width = this.draftState.appData.beads[beadId].width;\n        beadsWidth = beadsWidth + width;\n        beadsWidths.push(width);\n      });\n      if (lineLen >= beadsWidth) {\n        // ile defaultsow trzeba dodac aby linia byla wypelniona?\n        const defaultBeadWidth = defaultBead.width ? defaultBead.width : 10;\n        const remainingSpace = lineLen - beadsWidth;\n        const count =\n          Math.floor(remainingSpace / defaultBeadWidth) + beadsWidths.length;\n\n        return count;\n      } else {\n        // trzeba odejmowac elementy z lini do momentu az wszystkie sie zmnieszcza\n        for (let i = beadsWidths.length - 1; i >= 0; i--) {\n          beadsWidth = beadsWidth - beadsWidths[i];\n          if (lineLen > beadsWidth) {\n            const count = i;\n            return count;\n          }\n        }\n        // nie powinno byc elementow na linie, bo nie ma miejsca z lineLen\n        return 0;\n      }\n    } else if (beadsAutoCount === false && beadsAutoSpacing === false) {\n      return beadsCount;\n    } else if (beadsAutoCount === true && beadsAutoSpacing === false) {\n      let beadsWidths: number[] = [];\n      let beadsWidth = 0;\n      beadIds.forEach(beadId => {\n        const width =\n          this.draftState.appData.beads[beadId].width + beadsSpacing;\n        beadsWidth = beadsWidth + width;\n        beadsWidths.push(width);\n      });\n      if (lineLen >= beadsWidth - beadsSpacing) {\n        const defaultBeadWidth = defaultBead.width ? defaultBead.width : 10;\n        const remainingSpace = lineLen - (beadsWidth - beadsSpacing);\n        const count =\n          Math.floor(remainingSpace / (defaultBeadWidth + beadsSpacing)) +\n          beadsWidths.length;\n        return count;\n      } else {\n        for (let i = beadsWidths.length - 1; i >= 0; i--) {\n          beadsWidth = beadsWidth - beadsWidths[i];\n          if (lineLen > beadsWidth - beadsSpacing) {\n            const count = i;\n            return count;\n          }\n        }\n        return 0;\n      }\n    } else if (beadsAutoCount === false && beadsAutoSpacing === true) {\n      return beadsCount;\n    }\n    return 0;\n  }\n\n  addRemainingBeads(lineId, remainingCount) {\n    const currentLine = this.draftState.appData.lines[lineId];\n    for (let i = 0; i < remainingCount; i++) {\n      let defaultBead: any = {};\n      if (currentLine.settings.defaultBead) {\n        defaultBead = { ...currentLine.settings.defaultBead };\n      } else if (\n        this.draftState.ui.lineSettings.settings &&\n        this.draftState.ui.lineSettings.settings.defaultBead\n      ) {\n        defaultBead = {\n          ...this.draftState.ui.lineSettings.settings.defaultBead,\n        };\n      }\n      defaultBead.id = undefined;\n      defaultBead.position = undefined;\n      const bead = buildBead(defaultBead);\n      this.draftState.appData.beads[bead.id] = bead;\n      this.draftState.appData.lines[lineId].beadIds.push(bead.id);\n    }\n  }\n\n  removeOverflowBeads(lineId, overflowCount) {\n    for (let i = 0; i < overflowCount; i++) {\n      const arrLen = this.draftState.appData.lines[lineId].beadIds.length;\n      const lastItemBeadId = this.draftState.appData.lines[\n        lineId\n      ].beadIds.splice(arrLen - 1, 1);\n      delete this.draftState.appData.beads[lastItemBeadId[0]];\n    }\n  }\n\n  modifyBeadsPosition(lineId) {\n    const currentLine = this.draftState.appData.lines[lineId];\n    const { start, end, beadIds } = currentLine;\n    const {\n      beadsAutoCount,\n      beadsAutoSpacing,\n      beadsCount,\n      beadsSpacing,\n      defaultBead,\n    } = currentLine.settings;\n\n    const standardLineHeight = 10;\n\n    if (beadsAutoCount === true && beadsAutoSpacing === true) {\n      let currentDistance = 0;\n      this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n        const { width, height } = this.draftState.appData.beads[beadId];\n        currentDistance = currentDistance + width / 2;\n        const newPosition = getPointFromStartLine(\n          start.x,\n          start.y,\n          end.x,\n          end.y,\n          currentDistance\n        );\n        const x = newPosition.x - width / 2;\n        const y = newPosition.y - height / 2 + standardLineHeight / 2;\n        this.draftState.appData.beads[beadId].position.x = x;\n        this.draftState.appData.beads[beadId].position.y = y;\n        currentDistance = currentDistance + width / 2;\n      });\n    } else if (beadsAutoCount === false && beadsAutoSpacing === false) {\n      let currentDistance = 0;\n      this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n        const { width, height } = this.draftState.appData.beads[beadId];\n        currentDistance = currentDistance + width / 2;\n        const newPosition = getPointFromStartLine(\n          start.x,\n          start.y,\n          end.x,\n          end.y,\n          currentDistance\n        );\n        const x = newPosition.x - width / 2;\n        const y = newPosition.y - height / 2 + standardLineHeight / 2;\n        this.draftState.appData.beads[beadId].position.x = x;\n        this.draftState.appData.beads[beadId].position.y = y;\n        currentDistance = currentDistance + width / 2 + beadsSpacing;\n      });\n    } else if (beadsAutoCount === true && beadsAutoSpacing === false) {\n      let currentDistance = 0;\n      this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n        const { width, height } = this.draftState.appData.beads[beadId];\n\n        currentDistance = currentDistance + width / 2;\n        const newPosition = getPointFromStartLine(\n          start.x,\n          start.y,\n          end.x,\n          end.y,\n          currentDistance\n        );\n        const x = newPosition.x - width / 2;\n        const y = newPosition.y - height / 2 + standardLineHeight / 2;\n        this.draftState.appData.beads[beadId].position.x = x;\n        this.draftState.appData.beads[beadId].position.y = y;\n        currentDistance = currentDistance + width / 2 + beadsSpacing;\n      });\n    } else if (beadsAutoCount === false && beadsAutoSpacing === true) {\n      let beadsWidth = 0;\n      beadIds.forEach(beadId => {\n        const width = this.draftState.appData.beads[beadId].width;\n        beadsWidth = beadsWidth + width;\n      });\n      const lineLen = getDistanceBetweenPoints(start, end);\n      const avaiableSpace = lineLen - beadsWidth;\n      let dynamicBeadsSpacing = 0;\n      if (beadIds.length > 1) {\n        dynamicBeadsSpacing = avaiableSpace / (beadIds.length - 1);\n      }\n      let currentDistance = 0;\n      this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n        const { width, height } = this.draftState.appData.beads[beadId];\n        currentDistance = currentDistance + width / 2;\n        const newPosition = getPointFromStartLine(\n          start.x,\n          start.y,\n          end.x,\n          end.y,\n          currentDistance\n        );\n        const x = newPosition.x - width / 2;\n        const y = newPosition.y - height / 2 + standardLineHeight / 2;\n        this.draftState.appData.beads[beadId].position.x = x;\n        this.draftState.appData.beads[beadId].position.y = y;\n        currentDistance = currentDistance + width / 2 + dynamicBeadsSpacing;\n      });\n    }\n  }\n\n  modifyBeadsRotate(lineId) {\n    const currentLine = this.draftState.appData.lines[lineId];\n    const { start, end, beadIds } = currentLine;\n    const lineRotateRadian = getRotate(start.x - end.x, start.y - end.y);\n    beadIds.forEach(beadId => {\n      this.draftState.appData.beads[beadId].lineRotate =\n        toDeg(lineRotateRadian) * -1;\n    });\n  }\n}\n","import {\n  Editor,\n  EditorMode,\n  Point,\n  EditorGridType,\n} from \"../editorObjects/Editor\";\nimport { buildPoint, getDistanceBetweenPoints } from \"../editorObjects/Point\";\nimport { ImmerReducer } from \"immer-reducer\";\nimport { buildBead } from \"../editorObjects/Bead\";\nimport { buildLine } from \"../editorObjects/Line\";\nimport { getPointFromStartLine } from \"../editorObjects/Line\";\nimport { BeadSnapperImmerReducer } from \"./BeadSnapperImmerReducer\";\n\nconst lineBoxOffset = 5;\n\nexport class DraggableOperationsImmerReducer extends BeadSnapperImmerReducer {\n  editorAppDataHasChanged() {\n    this.draftState.ui.saveInfo.saved = false;\n    this.draftState.ui.saveInfo.haveUnsavedChanges = true;\n  }\n\n  action_onAddLine(start: Point, end: Point) {\n    const line = buildLine({ ...this.draftState.ui.lineSettings, start, end });\n    this.draftState.appData.lines[line.id] = line;\n    this.draftState.mode = EditorMode.EditLines;\n    this.updateBeadsPositions(line.id);\n    this.editorAppDataHasChanged();\n  }\n\n  action_onStartPointDrag(\n    key: string,\n    data: {\n      x: number;\n      y: number;\n    }\n  ) {\n    // console.log(\"action_onStartPointDrag\");\n    if (this.draftState.appData.lines[key]) {\n      const line = this.draftState.appData.lines[key];\n      const {\n        width,\n        height,\n        snapEnabled,\n        type,\n        hexSize,\n      } = this.draftState.ui.grid;\n      if (snapEnabled === true) {\n        if (type === EditorGridType.Box) {\n          line.start.x = Math.round(data.x / width) * width - lineBoxOffset;\n          line.start.y = Math.round(data.y / height) * height - lineBoxOffset;\n        } else if (type === EditorGridType.Hex) {\n          const hexWidth = Math.sqrt(3) * hexSize;\n          const hSpace = hexWidth;\n          const hexHeight = 2 * hexSize;\n          const vSpace = hexHeight * (3 / 4);\n          const changeX = Math.round(data.x / hSpace) * hSpace - lineBoxOffset;\n          const vLine = Math.round(data.y / vSpace);\n          const changeY = vLine * vSpace - lineBoxOffset - hexHeight / 4;\n          line.start.y = changeY;\n          if (vLine % 2 === 0) {\n            line.start.x = hSpace / 2 + changeX;\n          } else {\n            line.start.x = changeX;\n          }\n        }\n      } else {\n        line.start.x = data.x - lineBoxOffset;\n        line.start.y = data.y - lineBoxOffset;\n      }\n      this.updateBeadsPositions(line.id);\n      this.editorAppDataHasChanged();\n    }\n  }\n\n  action_onEndPointDrag(\n    key: string,\n    data: {\n      x: number;\n      y: number;\n    }\n  ) {\n    // console.log(\"action_onEndPointDrag\");\n    if (this.draftState.appData.lines[key]) {\n      const line = this.draftState.appData.lines[key];\n      const {\n        width,\n        height,\n        snapEnabled,\n        hexSize,\n        type,\n      } = this.draftState.ui.grid;\n      if (snapEnabled === true) {\n        if (type === EditorGridType.Box) {\n          line.end.x = Math.round(data.x / width) * width - lineBoxOffset;\n          line.end.y = Math.round(data.y / height) * height - lineBoxOffset;\n        } else if (type === EditorGridType.Hex) {\n          const hexWidth = Math.sqrt(3) * hexSize;\n          const hSpace = hexWidth;\n          const hexHeight = 2 * hexSize;\n          const vSpace = hexHeight * (3 / 4);\n          const changeX = Math.round(data.x / hSpace) * hSpace - lineBoxOffset;\n          const vLine = Math.round(data.y / vSpace);\n          const changeY = vLine * vSpace - lineBoxOffset - hexHeight / 4;\n          line.end.y = changeY;\n          if (vLine % 2 === 0) {\n            line.end.x = hSpace / 2 + changeX;\n          } else {\n            line.end.x = changeX;\n          }\n        }\n      } else {\n        line.end.x = data.x - lineBoxOffset;\n        line.end.y = data.y - lineBoxOffset;\n      }\n      this.updateBeadsPositions(line.id);\n      this.editorAppDataHasChanged();\n    }\n  }\n\n  action_onLineDrag(\n    key: string,\n    data: {\n      x: number;\n      y: number;\n      deltaX: number;\n      deltaY: number;\n      startX: number;\n      startY: number;\n      lineStart: Point | null;\n      lineEnd: Point | null;\n    }\n  ) {\n    const { startX, startY, lineStart, lineEnd, x, y } = data;\n    if (this.draftState.appData.lines[key]) {\n      const line = this.draftState.appData.lines[key];\n      const {\n        width,\n        height,\n        snapEnabled,\n        type,\n        hexSize,\n      } = this.draftState.ui.grid;\n\n      if (snapEnabled === true) {\n        if (type === EditorGridType.Box) {\n          line.start.x =\n            Math.round((line.start.x + data.deltaX) / width) * width -\n            lineBoxOffset;\n\n          line.start.y =\n            Math.round((line.start.y + data.deltaY) / height) * height -\n            lineBoxOffset;\n\n          line.end.x =\n            Math.round((line.end.x + data.deltaX) / width) * width -\n            lineBoxOffset;\n\n          line.end.y =\n            Math.round((line.end.y + data.deltaY) / height) * height -\n            lineBoxOffset;\n        } else if (type === EditorGridType.Hex) {\n          const hexWidth = Math.sqrt(3) * hexSize;\n          const hSpace = hexWidth;\n          const hexHeight = 2 * hexSize;\n          const vSpace = hexHeight * (3 / 4);\n\n          if (lineStart !== null) {\n            const newX = lineStart.x + (x - startX);\n            const newY = lineStart.y + (y - startY);\n            const changeX = Math.round(newX / hSpace) * hSpace - lineBoxOffset;\n\n            const vLine = Math.round(newY / vSpace);\n            const newChangeY = vLine * vSpace;\n            const temp = hexHeight / 4;\n            let changeY = newChangeY - lineBoxOffset - temp;\n            line.start.y = changeY;\n            if (vLine % 2 === 0) {\n              line.start.x = hSpace / 2 + changeX;\n            } else {\n              line.start.x = changeX;\n            }\n          }\n\n          if (lineEnd !== null) {\n            const newX = lineEnd.x + (x - startX);\n            const newY = lineEnd.y + (y - startY);\n            const changeX = Math.round(newX / hSpace) * hSpace - lineBoxOffset;\n\n            const vLine = Math.round(newY / vSpace);\n            const newChangeY = vLine * vSpace;\n            const temp = hexHeight / 4;\n            let changeY = newChangeY - lineBoxOffset - temp;\n            line.end.y = changeY;\n            if (vLine % 2 === 0) {\n              line.end.x = hSpace / 2 + changeX;\n            } else {\n              line.end.x = changeX;\n            }\n          }\n        }\n      } else {\n        line.start.x = line.start.x + data.deltaX;\n        line.start.y = line.start.y + data.deltaY;\n        line.end.x = line.end.x + data.deltaX;\n        line.end.y = line.end.y + data.deltaY;\n      }\n      this.updateBeadsPositions(line.id);\n      this.editorAppDataHasChanged();\n    }\n  }\n\n  action_onGroupLineDrag(data: { deltaX: number; deltaY: number }) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      if (this.draftState.appData.lines[lineId]) {\n        const line = this.draftState.appData.lines[lineId];\n        const { width, height, snapEnabled } = this.draftState.ui.grid;\n        if (snapEnabled === true) {\n          line.start.x =\n            Math.round((line.start.x + data.deltaX) / width) * width -\n            lineBoxOffset;\n\n          line.start.y =\n            Math.round((line.start.y + data.deltaY) / height) * height -\n            lineBoxOffset;\n\n          line.end.x =\n            Math.round((line.end.x + data.deltaX) / width) * width -\n            lineBoxOffset;\n\n          line.end.y =\n            Math.round((line.end.y + data.deltaY) / height) * height -\n            lineBoxOffset;\n        } else {\n          line.start.x = line.start.x + data.deltaX;\n          line.start.y = line.start.y + data.deltaY;\n          line.end.x = line.end.x + data.deltaX;\n          line.end.y = line.end.y + data.deltaY;\n        }\n        this.updateBeadsPositions(line.id);\n      }\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_onGroupBeadsDrag(data: { deltaX: number; deltaY: number }) {}\n\n  action_onClickLine(lineId: string) {\n    this.draftState.ui.selectedLinesIds = {};\n    this.draftState.ui.selectedLinesIds[lineId] = true;\n    this.draftState.ui.selectedLinesIdsCount = 1;\n  }\n\n  action_onClickLastestLine() {\n    const keys = Object.keys(this.draftState.appData.lines);\n    if (keys.length > 0) {\n      const lineId = keys[keys.length - 1];\n      this.action_onClickLine(lineId);\n    }\n  }\n\n  action_onClickBead(beadId: string) {\n    this.draftState.ui.selectedBeadsIds = {};\n    this.draftState.ui.selectedBeadsIds[beadId] = true;\n    this.draftState.ui.selectedBeadsIdsCount = 1;\n  }\n}\n","import { Editor } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\nimport { buildBead } from \"../editorObjects/Bead\";\nimport { buildLine } from \"../editorObjects/Line\";\nimport { BeadSnapperImmerReducer } from \"./BeadSnapperImmerReducer\";\n\nexport class PersistImmerReducer extends BeadSnapperImmerReducer {\n  action_onClearCanvas() {\n    this.draftState.appData.beads = {};\n    this.draftState.appData.lines = {};\n    this.draftState.ui.selectedBeadsIds = {};\n    this.draftState.ui.selectedBeadsIdsCount = 0;\n    this.draftState.ui.selectedLinesIds = {};\n    this.draftState.ui.selectedLinesIdsCount = 0;\n    this.draftState.ui.saveInfo.saved = false;\n    this.draftState.ui.saveInfo.haveUnsavedChanges = false;\n  }\n\n  action_readSavedCanvas() {\n    console.log(\"action_readSavedCanvas\");\n    if (\"localStorage\" in window) {\n      this.draftState.ui.saveInfo.saved = true;\n      this.draftState.ui.saveInfo.haveUnsavedChanges = false;\n      const readedData = localStorage.getItem(\"appData\");\n      if (readedData !== null) {\n        try {\n          const cached = JSON.parse(readedData) as Editor[\"appData\"];\n          this.draftState.appData = {\n            beads: {},\n            lines: {},\n          };\n          Object.keys(cached.beads).forEach(beadId => {\n            const currBead = cached.beads[beadId];\n            const bead = buildBead(currBead);\n            this.draftState.appData.beads[beadId] = bead;\n          });\n          Object.keys(cached.lines).forEach(lineId => {\n            const currLine = cached.lines[lineId];\n            const line = buildLine(currLine);\n            this.draftState.appData.lines[lineId] = line;\n          });\n          Object.keys(this.draftState.appData.lines).forEach(lineId => {\n            this.updateBeadsPositions(lineId);\n          });\n          console.log(\"action_readSavedCanvas loaded\");\n        } catch (err) {\n          console.error(\"action_readSavedCanvas error: \", err);\n        }\n      } else {\n        console.info(\"No data in localstorage\");\n      }\n    } else {\n      console.info(\"No localstorage available\");\n    }\n  }\n\n  action_onSaveCanvas() {\n    if (\"localStorage\" in window) {\n      localStorage.setItem(\"appData\", JSON.stringify(this.draftState.appData));\n      this.draftState.ui.saveInfo.saved = true;\n      this.draftState.ui.saveInfo.haveUnsavedChanges = false;\n      console.log(\"action_onSaveCanvas saved\");\n    } else {\n      this.draftState.ui.saveInfo.saved = false;\n      console.info(\"No localstorage available\");\n    }\n  }\n}\n\nconst a = {\n  beads: {\n    \"a19AKjQX-\": {\n      id: \"a19AKjQX-\",\n      position: { x: 124.9038105676658, y: 49 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"KYwow-3r-\": {\n      id: \"KYwow-3r-\",\n      position: { x: 176.9038105676658, y: 49 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"8Zv9yoc3O\": {\n      id: \"8Zv9yoc3O\",\n      position: { x: 228.9038105676658, y: 49 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    Csyy61dk7: {\n      id: \"Csyy61dk7\",\n      position: { x: 280.9038105676658, y: 49 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"K9seOU-sZ\": {\n      id: \"K9seOU-sZ\",\n      position: { x: 332.9038105676658, y: 49 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"4OluG2val\": {\n      id: \"4OluG2val\",\n      position: { x: 384.9038105676658, y: 49 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    WyVILEjgG: {\n      id: \"WyVILEjgG\",\n      position: { x: 436.9038105676658, y: 49 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    oQ14N6Po8: {\n      id: \"oQ14N6Po8\",\n      position: { x: 98.92304845413263, y: 94 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    Av87g3peZ: {\n      id: \"Av87g3peZ\",\n      position: { x: 150.92304845413264, y: 94 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    I2UB_GTly: {\n      id: \"I2UB_GTly\",\n      position: { x: 202.92304845413264, y: 94 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    yGTQ4IT7l: {\n      id: \"yGTQ4IT7l\",\n      position: { x: 254.92304845413264, y: 94 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    sAXQ7hsQP: {\n      id: \"sAXQ7hsQP\",\n      position: { x: 306.92304845413264, y: 94 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    deV4qFK6b: {\n      id: \"deV4qFK6b\",\n      position: { x: 358.92304845413264, y: 94 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    VKyNP8c6Q: {\n      id: \"VKyNP8c6Q\",\n      position: { x: 410.92304845413264, y: 94 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    uwSd7QcQe: {\n      id: \"uwSd7QcQe\",\n      position: { x: 124.9038105676658, y: 139 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    fnAnxCx1i: {\n      id: \"fnAnxCx1i\",\n      position: { x: 176.9038105676658, y: 139 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    gZX7etv17: {\n      id: \"gZX7etv17\",\n      position: { x: 228.9038105676658, y: 139 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"0tH_CViDI\": {\n      id: \"0tH_CViDI\",\n      position: { x: 280.9038105676658, y: 139 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"8R3hzq0Kk\": {\n      id: \"8R3hzq0Kk\",\n      position: { x: 332.9038105676658, y: 139 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"4vauo8kt4\": {\n      id: \"4vauo8kt4\",\n      position: { x: 384.9038105676658, y: 139 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"ZqMNO9Q5-\": {\n      id: \"ZqMNO9Q5-\",\n      position: { x: 436.9038105676658, y: 139 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    wxjOD75mB: {\n      id: \"wxjOD75mB\",\n      position: { x: 98.92304845413263, y: 184 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    EyabW_7SH: {\n      id: \"EyabW_7SH\",\n      position: { x: 150.92304845413264, y: 184 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"QX-VSqWHJ\": {\n      id: \"QX-VSqWHJ\",\n      position: { x: 202.92304845413264, y: 184 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    YRjrowdYg: {\n      id: \"YRjrowdYg\",\n      position: { x: 254.92304845413264, y: 184 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    NwMuNbOKC: {\n      id: \"NwMuNbOKC\",\n      position: { x: 306.92304845413264, y: 184 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    Nia0xNTig: {\n      id: \"Nia0xNTig\",\n      position: { x: 358.92304845413264, y: 184 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"4t8McpTRT\": {\n      id: \"4t8McpTRT\",\n      position: { x: 410.92304845413264, y: 184 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    QZM85vE4H: {\n      id: \"QZM85vE4H\",\n      position: { x: 124.9038105676658, y: 229 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    m6NK9xpnJ: {\n      id: \"m6NK9xpnJ\",\n      position: { x: 176.9038105676658, y: 229 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"4SXetBeWL\": {\n      id: \"4SXetBeWL\",\n      position: { x: 228.9038105676658, y: 229 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    UhzJs0GPl: {\n      id: \"UhzJs0GPl\",\n      position: { x: 280.9038105676658, y: 229 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    yeLLzgEY6: {\n      id: \"yeLLzgEY6\",\n      position: { x: 332.9038105676658, y: 229 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    ZEU_ZVZik: {\n      id: \"ZEU_ZVZik\",\n      position: { x: 384.9038105676658, y: 229 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"5GbXtZC9B\": {\n      id: \"5GbXtZC9B\",\n      position: { x: 98.92304845413263, y: 274 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    N8qDr6L3f: {\n      id: \"N8qDr6L3f\",\n      position: { x: 150.92304845413264, y: 274 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"9IUytGuY1\": {\n      id: \"9IUytGuY1\",\n      position: { x: 202.92304845413264, y: 274 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    WPv1QJeJa: {\n      id: \"WPv1QJeJa\",\n      position: { x: 254.92304845413264, y: 274 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    dVhb5iUkr: {\n      id: \"dVhb5iUkr\",\n      position: { x: 306.92304845413264, y: 274 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    LlVZEDtJ9: {\n      id: \"LlVZEDtJ9\",\n      position: { x: 358.92304845413264, y: 274 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n    \"yQ-h8_tm0\": {\n      id: \"yQ-h8_tm0\",\n      position: { x: 410.92304845413264, y: 274 },\n      type: \"BasicEllipse\",\n      rotate: 0,\n      lineRotate: 90,\n      color: \"#4fc3f7\",\n      height: 52,\n      width: 52,\n      keepAspectRatio: true,\n    },\n  },\n  lines: {\n    \"YaQ3-jOG\": {\n      id: \"YaQ3-jOG\",\n      start: { x: 124.90381056766579, y: 70 },\n      end: { x: 540.5960043841962, y: 70 },\n      beadIds: [\n        \"a19AKjQX-\",\n        \"KYwow-3r-\",\n        \"8Zv9yoc3O\",\n        \"Csyy61dk7\",\n        \"K9seOU-sZ\",\n        \"4OluG2val\",\n        \"WyVILEjgG\",\n      ],\n      settings: {\n        beadsCount: 7,\n        beadsAutoCount: true,\n        beadsSpacing: 0,\n        beadsAutoSpacing: true,\n        defaultBead: {\n          id: \"dZjyRBQrH\",\n          position: { x: 0, y: 0 },\n          type: \"BasicEllipse\",\n          rotate: 0,\n          lineRotate: 0,\n          color: \"#4fc3f7\",\n          height: 52,\n          width: 52,\n          keepAspectRatio: true,\n        },\n      },\n    },\n    CRcLEam9P: {\n      id: \"CRcLEam9P\",\n      start: { x: 98.92304845413263, y: 115 },\n      end: { x: 514.6152422706631, y: 115 },\n      beadIds: [\n        \"oQ14N6Po8\",\n        \"Av87g3peZ\",\n        \"I2UB_GTly\",\n        \"yGTQ4IT7l\",\n        \"sAXQ7hsQP\",\n        \"deV4qFK6b\",\n        \"VKyNP8c6Q\",\n      ],\n      settings: {\n        beadsCount: 7,\n        beadsAutoCount: true,\n        beadsSpacing: 0,\n        beadsAutoSpacing: true,\n        defaultBead: {\n          id: \"ILgHjX7En\",\n          position: { x: 0, y: 0 },\n          type: \"BasicEllipse\",\n          rotate: 0,\n          lineRotate: 0,\n          color: \"#4fc3f7\",\n          height: 52,\n          width: 52,\n          keepAspectRatio: true,\n        },\n      },\n    },\n    Tml7p6ZKI: {\n      id: \"Tml7p6ZKI\",\n      start: { x: 124.90381056766579, y: 160 },\n      end: { x: 540.5960043841962, y: 160 },\n      beadIds: [\n        \"uwSd7QcQe\",\n        \"fnAnxCx1i\",\n        \"gZX7etv17\",\n        \"0tH_CViDI\",\n        \"8R3hzq0Kk\",\n        \"4vauo8kt4\",\n        \"ZqMNO9Q5-\",\n      ],\n      settings: {\n        beadsCount: 7,\n        beadsAutoCount: true,\n        beadsSpacing: 0,\n        beadsAutoSpacing: true,\n        defaultBead: {\n          id: \"ibloOzyTR\",\n          position: { x: 0, y: 0 },\n          type: \"BasicEllipse\",\n          rotate: 0,\n          lineRotate: 0,\n          color: \"#4fc3f7\",\n          height: 52,\n          width: 52,\n          keepAspectRatio: true,\n        },\n      },\n    },\n    Bq4W3C3Ew: {\n      id: \"Bq4W3C3Ew\",\n      start: { x: 98.92304845413263, y: 205 },\n      end: { x: 514.6152422706631, y: 205 },\n      beadIds: [\n        \"wxjOD75mB\",\n        \"EyabW_7SH\",\n        \"QX-VSqWHJ\",\n        \"YRjrowdYg\",\n        \"NwMuNbOKC\",\n        \"Nia0xNTig\",\n        \"4t8McpTRT\",\n      ],\n      settings: {\n        beadsCount: 7,\n        beadsAutoCount: true,\n        beadsSpacing: 0,\n        beadsAutoSpacing: true,\n        defaultBead: {\n          id: \"w648Um7U6\",\n          position: { x: 0, y: 0 },\n          type: \"BasicEllipse\",\n          rotate: 0,\n          lineRotate: 0,\n          color: \"#4fc3f7\",\n          height: 52,\n          width: 52,\n          keepAspectRatio: true,\n        },\n      },\n    },\n    mJvdHpK60: {\n      id: \"mJvdHpK60\",\n      start: { x: 124.90381056766579, y: 250 },\n      end: { x: 488.63448015713, y: 250 },\n      beadIds: [\n        \"QZM85vE4H\",\n        \"m6NK9xpnJ\",\n        \"4SXetBeWL\",\n        \"UhzJs0GPl\",\n        \"yeLLzgEY6\",\n        \"ZEU_ZVZik\",\n      ],\n      settings: {\n        beadsCount: 6,\n        beadsAutoCount: true,\n        beadsSpacing: 0,\n        beadsAutoSpacing: true,\n        defaultBead: {\n          id: \"irTbjtCzJ\",\n          position: { x: 0, y: 0 },\n          type: \"BasicEllipse\",\n          rotate: 0,\n          lineRotate: 0,\n          color: \"#4fc3f7\",\n          height: 52,\n          width: 52,\n          keepAspectRatio: true,\n        },\n      },\n    },\n    pA1FF6_zm: {\n      id: \"pA1FF6_zm\",\n      start: { x: 98.92304845413263, y: 295 },\n      end: { x: 514.6152422706631, y: 295 },\n      beadIds: [\n        \"5GbXtZC9B\",\n        \"N8qDr6L3f\",\n        \"9IUytGuY1\",\n        \"WPv1QJeJa\",\n        \"dVhb5iUkr\",\n        \"LlVZEDtJ9\",\n        \"yQ-h8_tm0\",\n      ],\n      settings: {\n        beadsCount: 7,\n        beadsAutoCount: true,\n        beadsSpacing: 0,\n        beadsAutoSpacing: true,\n        defaultBead: {\n          id: \"MtRiOzAsd\",\n          position: { x: 0, y: 0 },\n          type: \"BasicEllipse\",\n          rotate: 0,\n          lineRotate: 0,\n          color: \"#4fc3f7\",\n          height: 52,\n          width: 52,\n          keepAspectRatio: true,\n        },\n      },\n    },\n  },\n};\n","import { Editor, EditorMode } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\n\nexport class ChangeEditorModeImmerReducer extends ImmerReducer<Editor> {\n  action_onChangeEditorMode(newEditorMode: EditorMode) {\n    this.draftState.mode = newEditorMode;\n    this.clearSelectedBeads();\n    this.clearSelectedLines();\n  }\n  private clearSelectedBeads = () => {\n    if (this.draftState.ui.selectedBeadsIdsCount > 0) {\n      this.draftState.ui.selectedBeadsIds = {};\n      this.draftState.ui.selectedBeadsIdsCount = 0;\n    }\n  };\n  private clearSelectedLines = () => {\n    if (this.draftState.ui.selectedLinesIdsCount) {\n      this.draftState.ui.selectedLinesIds = {};\n      this.draftState.ui.selectedLinesIdsCount = 0;\n    }\n  };\n  action_setSaveInfo(newValue: boolean) {\n    this.draftState.ui.saveInfo.saved = newValue;\n  }\n}\n","import { Editor } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\n\nexport class MainImmerReducer extends ImmerReducer<Editor> {\n  action_test() {}\n  action_restoreState() {}\n}\n","import { Editor } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\nimport { buildPoint } from \"../editorObjects/Point\";\nimport { contain } from \"../editorObjects/Point\";\nimport { difference } from \"lodash\";\n\nexport class MouseSelectionImmerReducer extends ImmerReducer<Editor> {\n  action_onEditBeadsMouseDown(x, y) {\n    this.draftState.ui.mouseSelection.isDragStarted = true;\n\n    this.draftState.ui.mouseSelection.start.x = x;\n    this.draftState.ui.mouseSelection.start.y = y;\n    this.draftState.ui.mouseSelection.end.x = x;\n    this.draftState.ui.mouseSelection.end.y = y;\n  }\n\n  action_onEditBeadsMouseMove(x, y) {\n    this.draftState.ui.mouseSelection.end.x = x;\n    this.draftState.ui.mouseSelection.end.y = y;\n\n    if (this.draftState.ui.mouseSelection.isDragged === false) {\n      const { start, end } = this.draftState.ui.mouseSelection;\n      const deltaX = end.x - start.x;\n      const deltaY = end.y - start.y;\n\n      if (Math.abs(deltaX) > 5 || Math.abs(deltaY) > 5) {\n        this.draftState.ui.mouseSelection.isDragged = true;\n      }\n    }\n\n    if (this.draftState.ui.mouseSelection.isDragged === true) {\n      const { start, end } = this.draftState.ui.mouseSelection;\n      const p1 = buildPoint(Math.min(start.x, end.x), Math.min(start.y, end.y));\n      const p2 = buildPoint(Math.max(start.x, end.x), Math.max(start.y, end.y));\n\n      // const selectedIds = Object.keys(this.draftState.ui.selectedBeadsIds);\n      // const newIds: string[] = [];\n\n      // Object.keys(this.draftState.appData.beads).forEach(beadId => {\n      //   const bead = this.draftState.appData.beads[beadId];\n      //   const p3 = buildPoint(bead.position.x + 10, bead.position.y + 10);\n      //   if (contain(p1, p2, p3)) {\n      //     newIds.push(beadId);\n      //   }\n      // });\n\n      // const diff = difference(newIds, selectedIds);\n\n      // if (diff.length > 0) {\n      //   this.draftState.ui.selectedBeadsIds = {};\n      //   this.draftState.ui.selectedBeadsIdsCount = 0;\n      //   newIds.forEach(id => {\n      //     this.draftState.ui.selectedBeadsIds[id] = true;\n      //     this.draftState.ui.selectedBeadsIdsCount =\n      //       this.draftState.ui.selectedBeadsIdsCount + 1;\n      //   });\n      // }\n\n      this.draftState.ui.selectedBeadsIds = {};\n      this.draftState.ui.selectedBeadsIdsCount = 0;\n      Object.keys(this.draftState.appData.beads).forEach(beadId => {\n        const bead = this.draftState.appData.beads[beadId];\n        const p3 = buildPoint(bead.position.x + 10, bead.position.y + 10);\n        if (contain(p1, p2, p3)) {\n          this.draftState.ui.selectedBeadsIds[beadId] = true;\n          this.draftState.ui.selectedBeadsIdsCount =\n            this.draftState.ui.selectedBeadsIdsCount + 1;\n        }\n      });\n    }\n  }\n\n  action_onEditBeadsMouseUp() {\n    if (this.draftState.ui.mouseSelection.isDragged === false) {\n      if (this.draftState.ui.selectedBeadsIdsCount > 0) {\n        this.draftState.ui.selectedBeadsIds = {};\n        this.draftState.ui.selectedBeadsIdsCount = 0;\n      }\n    }\n\n    this.draftState.ui.mouseSelection.isDragStarted = false;\n    this.draftState.ui.mouseSelection.isDragged = false;\n    this.draftState.ui.mouseSelection.start.x = 0;\n    this.draftState.ui.mouseSelection.start.y = 0;\n    this.draftState.ui.mouseSelection.end.x = 0;\n    this.draftState.ui.mouseSelection.end.y = 0;\n  }\n\n  action_onEditLinesMouseDown(x: number, y: number) {\n    this.draftState.ui.mouseSelection.isDragStarted = true;\n    this.draftState.ui.mouseSelection.start.x = x;\n    this.draftState.ui.mouseSelection.start.y = y;\n    this.draftState.ui.mouseSelection.end.x = x;\n    this.draftState.ui.mouseSelection.end.y = y;\n  }\n\n  action_onEditLinesMouseMove(x: number, y: number) {\n    this.draftState.ui.mouseSelection.end.x = x;\n    this.draftState.ui.mouseSelection.end.y = y;\n\n    if (this.draftState.ui.mouseSelection.isDragged === false) {\n      const { start, end } = this.draftState.ui.mouseSelection;\n      const deltaX = end.x - start.x;\n      const deltaY = end.y - start.y;\n      if (Math.abs(deltaX) > 5 || Math.abs(deltaY) > 5) {\n        this.draftState.ui.mouseSelection.isDragged = true;\n      }\n    }\n\n    if (this.draftState.ui.mouseSelection.isDragged === true) {\n      const { start, end } = this.draftState.ui.mouseSelection;\n      const p1 = buildPoint(Math.min(start.x, end.x), Math.min(start.y, end.y));\n      const p2 = buildPoint(Math.max(start.x, end.x), Math.max(start.y, end.y));\n\n      // const selectedIds = Object.keys(this.draftState.ui.selectedLinesIds);\n      // const newIds: string[] = [];\n\n      // Object.keys(this.draftState.appData.lines).forEach(lineId => {\n      //   const line = this.draftState.appData.lines[lineId];\n      //   if (contain(p1, p2, line.start) || contain(p1, p2, line.end)) {\n      //     newIds.push(lineId);\n      //   }\n      // });\n\n      // const diff = difference(newIds, selectedIds);\n\n      // if (diff.length > 0) {\n      //   this.draftState.ui.selectedLinesIds = {};\n      //   this.draftState.ui.selectedLinesIdsCount = 0;\n      //   newIds.forEach(id => {\n      //     this.draftState.ui.selectedLinesIds[id] = true;\n      //     this.draftState.ui.selectedLinesIdsCount =\n      //       this.draftState.ui.selectedLinesIdsCount + 1;\n      //   });\n      // }\n      this.draftState.ui.selectedLinesIds = {};\n      this.draftState.ui.selectedLinesIdsCount = 0;\n      Object.keys(this.draftState.appData.lines).forEach(lineId => {\n        const line = this.draftState.appData.lines[lineId];\n        if (contain(p1, p2, line.start) || contain(p1, p2, line.end)) {\n          this.draftState.ui.selectedLinesIds[lineId] = true;\n          this.draftState.ui.selectedLinesIdsCount =\n            this.draftState.ui.selectedLinesIdsCount + 1;\n        }\n      });\n    }\n  }\n\n  action_onEditLinesMouseUp() {\n    if (this.draftState.ui.mouseSelection.isDragged === false) {\n      if (this.draftState.ui.selectedLinesIdsCount > 0) {\n        this.draftState.ui.selectedLinesIds = {};\n        this.draftState.ui.selectedLinesIdsCount = 0;\n      }\n    }\n\n    this.draftState.ui.mouseSelection.isDragStarted = false;\n    this.draftState.ui.mouseSelection.isDragged = false;\n    this.draftState.ui.mouseSelection.start.x = 0;\n    this.draftState.ui.mouseSelection.start.y = 0;\n    this.draftState.ui.mouseSelection.end.x = 0;\n    this.draftState.ui.mouseSelection.end.y = 0;\n  }\n}\n","import { BeadTypes } from \"../editorObjects/Editor\";\nimport { BeadSnapperImmerReducer } from \"./BeadSnapperImmerReducer\";\nimport { buildBead } from \"../editorObjects/Bead\";\nimport { buildLine } from \"../editorObjects/Line\";\nimport { merge } from \"lodash\";\n\nexport class ToolbarImmerReducer extends BeadSnapperImmerReducer {\n  editorAppDataHasChanged() {\n    this.draftState.ui.saveInfo.saved = false;\n    this.draftState.ui.saveInfo.haveUnsavedChanges = true;\n  }\n  action_changeBeadFill(color: string) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].color = color;\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_changeBeadType(type: BeadTypes) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].type = type;\n    });\n    this.editorAppDataHasChanged();\n  }\n  action_onBeadRotate(beadId, { deg }) {}\n  action_onBeadsRotate({ deg }) {}\n\n  action_changeSelectedLinesBeadsSpacing(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsSpacing = value;\n      this.updateBeadsPositions(id);\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_changeSelectedLinesBeadsAutoSpacing(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsAutoSpacing = value;\n      this.updateBeadsPositions(id);\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_changeSelectedLinesBeadsCount(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsCount = value;\n      this.updateBeadsPositions(id);\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_changeSelectedLinesBeadsAutoCount(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsAutoCount = value;\n      this.updateBeadsPositions(id);\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_resetSelectedLines() {\n    const firstLineId = Object.keys(this.draftState.ui.selectedLinesIds)[0];\n    const firstLine = this.draftState.appData.lines[firstLineId];\n    const defaultBead = { ...firstLine.settings.defaultBead };\n\n    defaultBead.id = undefined;\n    defaultBead.position = undefined;\n\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].beadIds.forEach(beadId => {\n        if (defaultBead) {\n          this.draftState.appData.beads[beadId] = merge(\n            this.draftState.appData.beads[beadId],\n            defaultBead\n          );\n        }\n      });\n      this.draftState.appData.lines[id].settings.defaultBead = merge(\n        this.draftState.appData.lines[id].settings.defaultBead,\n        defaultBead\n      );\n      this.updateBeadsPositions(id);\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_deleteSelectedLines() {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].beadIds.forEach(beadId => {\n        delete this.draftState.appData.beads[beadId];\n      });\n      delete this.draftState.appData.lines[id];\n    });\n    this.draftState.ui.selectedLinesIds = {};\n    this.draftState.ui.selectedLinesIdsCount = 0;\n    this.editorAppDataHasChanged();\n  }\n\n  action_cloneSelectedLines() {\n    const moveX = 20;\n    const moveY = 20;\n    const newLinesIds: string[] = [];\n\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      const newLine = buildLine({\n        ...this.draftState.appData.lines[id],\n        id: undefined,\n        beadIds: [],\n      });\n      newLine.start.x = newLine.start.x + moveX;\n      newLine.start.y = newLine.start.y + moveY;\n      newLine.end.x = newLine.end.x + moveX;\n      newLine.end.y = newLine.end.y + moveY;\n\n      this.draftState.appData.lines[id].beadIds.forEach(beadId => {\n        const newBead = buildBead({\n          ...this.draftState.appData.beads[beadId],\n          id: undefined,\n        });\n        newBead.position.x = newBead.position.x + moveX;\n        newBead.position.y = newBead.position.y + moveY;\n        this.draftState.appData.beads[newBead.id] = newBead;\n        newLine.beadIds.push(newBead.id);\n      });\n\n      newLinesIds.push(newLine.id);\n      this.draftState.appData.lines[newLine.id] = newLine;\n    });\n\n    newLinesIds.forEach(lineId => {\n      this.updateBeadsPositions(lineId);\n    });\n\n    this.draftState.ui.selectedLinesIds = {};\n    this.draftState.ui.selectedLinesIdsCount = 0;\n\n    newLinesIds.forEach(lineId => {\n      this.draftState.ui.selectedLinesIds[lineId] = true;\n      this.draftState.ui.selectedLinesIdsCount =\n        this.draftState.ui.selectedLinesIdsCount + 1;\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  /**\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   */\n\n  action_changeDefaultLineBeadsCount(value) {\n    if (this.draftState.ui.lineSettings.settings) {\n      this.draftState.ui.lineSettings.settings.beadsCount = value;\n    }\n  }\n\n  action_changeDefaultLineBeadsAutoCount(value) {\n    if (this.draftState.ui.lineSettings.settings) {\n      this.draftState.ui.lineSettings.settings.beadsAutoCount = value;\n    }\n  }\n\n  action_changeDefaultLineBeadsSpacing(value) {\n    if (this.draftState.ui.lineSettings.settings) {\n      this.draftState.ui.lineSettings.settings.beadsSpacing = value;\n    }\n  }\n\n  action_changeDefaultLineBeadsAutoSpacing(value) {\n    if (this.draftState.ui.lineSettings.settings) {\n      this.draftState.ui.lineSettings.settings.beadsAutoSpacing = value;\n    }\n  }\n\n  action_changeDefaultLineBeadType(value) {\n    if (this.draftState.ui.lineSettings.settings) {\n      if (this.draftState.ui.lineSettings.settings.defaultBead) {\n        this.draftState.ui.lineSettings.settings.defaultBead.type = value;\n      }\n    }\n  }\n\n  action_changeDefaultLineColor(value) {\n    if (this.draftState.ui.lineSettings.settings) {\n      if (this.draftState.ui.lineSettings.settings.defaultBead) {\n        this.draftState.ui.lineSettings.settings.defaultBead.color = value;\n      }\n    }\n  }\n\n  action_changeDefaultLineBeadHeight(value) {\n    const { lineSettings } = this.draftState.ui;\n    if (lineSettings.settings) {\n      if (lineSettings.settings.defaultBead) {\n        const {\n          width,\n          height,\n          keepAspectRatio,\n        } = lineSettings.settings.defaultBead;\n        if (keepAspectRatio && width && height) {\n          if (height >= 1) {\n            const ratio = width / height;\n            lineSettings.settings.defaultBead.width = value * ratio;\n            lineSettings.settings.defaultBead.height = value;\n          } else {\n            lineSettings.settings.defaultBead.height = 1;\n          }\n        } else {\n          lineSettings.settings.defaultBead.height = value;\n        }\n      }\n    }\n  }\n\n  action_changeDefaultLineBeadWidth(value) {\n    const { lineSettings } = this.draftState.ui;\n    if (lineSettings.settings) {\n      if (lineSettings.settings.defaultBead) {\n        const {\n          width,\n          height,\n          keepAspectRatio,\n        } = lineSettings.settings.defaultBead;\n        if (keepAspectRatio && width && height) {\n          if (width >= 1) {\n            const ratio = height / width;\n            lineSettings.settings.defaultBead.width = value;\n            lineSettings.settings.defaultBead.height = value * ratio;\n          } else {\n            lineSettings.settings.defaultBead.width = 1;\n          }\n        } else {\n          lineSettings.settings.defaultBead.width = value;\n        }\n      }\n    }\n  }\n\n  action_changeDefaultLineBeadKeepAspectRatio(value) {\n    const { lineSettings } = this.draftState.ui;\n    if (lineSettings.settings) {\n      if (lineSettings.settings.defaultBead) {\n        lineSettings.settings.defaultBead.keepAspectRatio = value;\n      }\n    }\n  }\n  action_changeDefaultLineBeadRotate(value) {\n    const { lineSettings } = this.draftState.ui;\n    if (lineSettings.settings) {\n      if (lineSettings.settings.defaultBead) {\n        lineSettings.settings.defaultBead.rotate = value;\n      }\n    }\n  }\n\n  /**\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   */\n\n  action_changeSelectedLines_settings_beadsCount(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsCount = value;\n      this.updateBeadsPositions(id);\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_changeSelectedLines_settings_beadsAutoCount(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsAutoCount = value;\n      this.updateBeadsPositions(id);\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_changeSelectedLines_settings_beadsSpacing(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsSpacing = value;\n      this.updateBeadsPositions(id);\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_changeSelectedLines_settings_beadsAutoSpacing(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(id => {\n      this.draftState.appData.lines[id].settings.beadsAutoSpacing = value;\n      this.updateBeadsPositions(id);\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_changeSelectedLines_defaultBead_type(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      this.draftState.appData.lines[lineId].settings.defaultBead.type = value;\n      this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n        this.draftState.appData.beads[beadId].type = value;\n      });\n      this.updateBeadsPositions(lineId);\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_changeSelectedLines_defaultBead_color(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      this.draftState.appData.lines[lineId].settings.defaultBead.color = value;\n      this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n        this.draftState.appData.beads[beadId].color = value;\n      });\n      this.updateBeadsPositions(lineId);\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_changeSelectedLines_defaultBead_height(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      const currLine = this.draftState.appData.lines[lineId];\n      let { width, height, keepAspectRatio } = currLine.settings.defaultBead;\n\n      if (keepAspectRatio === false) {\n        currLine.settings.defaultBead.height = value;\n        this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n          this.draftState.appData.beads[beadId].height = value;\n        });\n        this.updateBeadsPositions(lineId);\n      } else {\n        if (width && height) {\n          if (value >= 1) {\n            const ratio = width / height;\n            width = value * ratio;\n            height = value;\n          }\n\n          currLine.settings.defaultBead.width = width;\n          currLine.settings.defaultBead.height = height;\n        }\n\n        this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n          if (width && height) {\n            this.draftState.appData.beads[beadId].width = width;\n            this.draftState.appData.beads[beadId].height = height;\n          }\n        });\n\n        this.updateBeadsPositions(lineId);\n      }\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_changeSelectedLines_defaultBead_width(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      const currLine = this.draftState.appData.lines[lineId];\n      let { width, height, keepAspectRatio } = currLine.settings.defaultBead;\n\n      if (keepAspectRatio === false) {\n        currLine.settings.defaultBead.width = value;\n        this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n          this.draftState.appData.beads[beadId].width = value;\n        });\n        this.updateBeadsPositions(lineId);\n      } else {\n        if (width && height) {\n          if (value >= 1) {\n            const ratio = height / width;\n            width = value;\n            height = value * ratio;\n          }\n\n          currLine.settings.defaultBead.width = width;\n          currLine.settings.defaultBead.height = height;\n        }\n\n        this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n          if (width && height) {\n            this.draftState.appData.beads[beadId].width = width;\n            this.draftState.appData.beads[beadId].height = height;\n          }\n        });\n\n        this.updateBeadsPositions(lineId);\n      }\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_changeSelectedLines_defaultBead_keepAspectRatio(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      this.draftState.appData.lines[\n        lineId\n      ].settings.defaultBead.keepAspectRatio = value;\n      this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n        this.draftState.appData.beads[beadId].keepAspectRatio = value;\n      });\n      this.updateBeadsPositions(lineId);\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  action_changeSelectedLines_defaultBead_rotate(value) {\n    Object.keys(this.draftState.ui.selectedLinesIds).forEach(lineId => {\n      this.draftState.appData.lines[lineId].settings.defaultBead.rotate = value;\n      this.draftState.appData.lines[lineId].beadIds.forEach(beadId => {\n        this.draftState.appData.beads[beadId].rotate = value;\n      });\n      this.updateBeadsPositions(lineId);\n    });\n    this.editorAppDataHasChanged();\n  }\n\n  /****\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   */\n\n  action_changeSelectedBeads_type(value) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].type = value;\n    });\n    this.updateLineFromSelectedBeads();\n  }\n\n  action_changeSelectedBeads_color(value) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].color = value;\n    });\n    this.updateLineFromSelectedBeads();\n  }\n\n  action_changeSelectedBeads_height(value) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      const currBead = this.draftState.appData.beads[beadId];\n      let { width, height, keepAspectRatio } = currBead;\n\n      if (keepAspectRatio === false) {\n        this.draftState.appData.beads[beadId].height = value;\n      } else {\n        if (width && height) {\n          if (value >= 1) {\n            const ratio = width / height;\n            width = value * ratio;\n            height = value;\n          }\n        }\n        this.draftState.appData.beads[beadId].width = width;\n        this.draftState.appData.beads[beadId].height = height;\n      }\n    });\n\n    this.updateLineFromSelectedBeads();\n  }\n\n  action_changeSelectedBeads_width(value) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      const currBead = this.draftState.appData.beads[beadId];\n      let { width, height, keepAspectRatio } = currBead;\n\n      if (keepAspectRatio === false) {\n        this.draftState.appData.beads[beadId].width = value;\n      } else {\n        if (width && height) {\n          if (value >= 1) {\n            const ratio = height / width;\n            width = value;\n            height = value * ratio;\n          }\n        }\n        this.draftState.appData.beads[beadId].width = width;\n        this.draftState.appData.beads[beadId].height = height;\n      }\n    });\n\n    this.updateLineFromSelectedBeads();\n  }\n\n  action_changeSelectedBeads_keepAspectRatio(value) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].keepAspectRatio = value;\n    });\n    this.updateLineFromSelectedBeads();\n  }\n\n  action_changeSelectedBeads_rotate(value) {\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      this.draftState.appData.beads[beadId].rotate = value;\n    });\n    this.updateLineFromSelectedBeads();\n  }\n\n  updateLineFromSelectedBeads() {\n    const results: string[] = [];\n    Object.keys(this.draftState.ui.selectedBeadsIds).forEach(beadId => {\n      for (const lineId of Object.keys(this.draftState.appData.lines)) {\n        if (\n          this.draftState.appData.lines[lineId].beadIds.indexOf(beadId) !== -1\n        ) {\n          if (results.indexOf(lineId) === -1) {\n            results.push(lineId);\n            break;\n          }\n        }\n      }\n    });\n    for (const lineId of results) {\n      this.updateBeadsPositions(lineId);\n    }\n  }\n\n  /****\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   *\n   */\n\n\n   \n  action_updateBrushSize(value) {\n    this.draftState.ui.brush.size = value;\n  }\n\n  action_updateBrushColor(value) {\n    this.draftState.ui.brush.color = value;\n  }\n}\n","import { Editor, EditorMenuMain } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\n\nexport class TopbarImmerReducer extends ImmerReducer<Editor> {\n  action_toggleMenuFile() {\n    if (this.draftState.ui.currentMenuMainOpen === EditorMenuMain.File) {\n      this.draftState.ui.currentMenuMainOpen = EditorMenuMain.None;\n    } else {\n      this.draftState.ui.currentMenuMainOpen = EditorMenuMain.File;\n    }\n  }\n  action_toggleMenuSettings() {\n    if (this.draftState.ui.currentMenuMainOpen === EditorMenuMain.Settings) {\n      this.draftState.ui.currentMenuMainOpen = EditorMenuMain.None;\n    } else {\n      this.draftState.ui.currentMenuMainOpen = EditorMenuMain.Settings;\n    }\n  }\n  action_toggleGridSnapEnabled() {\n    this.draftState.ui.grid.snapEnabled = !this.draftState.ui.grid.snapEnabled;\n  }\n  action_toggleGridIsVisible() {\n    this.draftState.ui.grid.isVisible = !this.draftState.ui.grid.isVisible;\n  }\n  action_setGridWidth(value) {\n    this.draftState.ui.grid.width = value;\n  }\n  action_setGridHeight(value) {\n    this.draftState.ui.grid.height = value;\n  }\n  action_setGridType(value) {\n    this.draftState.ui.grid.type = value;\n  }\n  action_setGridHexSize(value) {\n    this.draftState.ui.grid.hexSize = value;\n  }\n}\n","import { Editor, BrushType } from \"../editorObjects/Editor\";\nimport { ImmerReducer } from \"immer-reducer\";\nimport { getDistanceBetweenPoints, buildPoint } from \"../editorObjects/Point\";\n\nexport class PaintImmerReducer extends ImmerReducer<Editor> {\n  action_applyColorBrush(x, y) {\n    const { color, type, size } = this.draftState.ui.brush;\n    if (type === BrushType.Color) {\n      const mousePoint = buildPoint(x + size / 2, y + size /2);\n      Object.keys(this.draftState.appData.beads).forEach(beadId => {\n        const currBead = this.draftState.appData.beads[beadId];\n        if (currBead.color !== color) {\n          const centerPoint = buildPoint(\n            currBead.position.x + currBead.width / 2,\n            currBead.position.y + currBead.height / 2\n          );\n          const len = getDistanceBetweenPoints(centerPoint, mousePoint);\n          const brush = size / 2 + Math.min(currBead.width , currBead.height) / 2;\n          if (len < brush) {\n            this.draftState.appData.beads[beadId].color = color;\n          }\n        }\n      });\n    }\n  }\n}\n","import {\n  Editor,\n  EditorMode,\n  BeadTypes,\n  EditorMenuMain,\n  EditorGridType,\n  BrushType,\n} from \"./editorObjects/Editor\";\nimport { buildPoint } from \"./editorObjects/Point\";\nimport { composeReducers } from \"immer-reducer\";\nimport { createActionCreators, createReducerFunction } from \"immer-reducer\";\nimport { DraggableOperationsImmerReducer } from \"./immerReducers/DraggableOperationsImmerReducer\";\nimport { PersistImmerReducer } from \"./immerReducers/PersistImmerReducer\";\nimport { ChangeEditorModeImmerReducer } from \"./immerReducers/ChangeEditorModeImmerReducer\";\nimport { MainImmerReducer } from \"./immerReducers/MainImmerReducer\";\nimport { MouseSelectionImmerReducer } from \"./immerReducers/MouseSelectionImmerReducer\";\nimport { ToolbarImmerReducer } from \"./immerReducers/ToolbarImmerReducer\";\nimport { defaulBeadColor } from \"./components/colors\";\nimport { TopbarImmerReducer } from \"./immerReducers/TopbarImmerReducer\";\nimport { PaintImmerReducer } from \"./immerReducers/PaintImmerReducer\";\n\nconst defaultAppData: Editor = {\n  appData: {\n    beads: {},\n    lines: {},\n  },\n  ui: {\n    lineSettings: {\n      settings: {\n        beadsAutoCount: true,\n        beadsAutoSpacing: true,\n        beadsCount: 0,\n        beadsSpacing: 0,\n        defaultBead: {\n          type: BeadTypes.BasicEllipse,\n          rotate: 0,\n          color: defaulBeadColor,\n          height: 52,\n          width: 52,\n          keepAspectRatio: false,\n        },\n      },\n    },\n    saveInfo: {\n      saved: false,\n      haveUnsavedChanges: false,\n    },\n    selectedLinesIds: {},\n    selectedLinesIdsCount: 0,\n    selectedBeadsIds: {},\n    selectedBeadsIdsCount: 0,\n    mouseSelection: {\n      start: buildPoint(0, 0),\n      end: buildPoint(0, 0),\n      isDragStarted: false,\n      isDragged: false,\n    },\n    currentMenuMainOpen: EditorMenuMain.None,\n    grid: {\n      type: EditorGridType.Hex,\n      hexSize: 30,\n      snapEnabled: true,\n      isVisible: true,\n      width: 30,\n      height: 30,\n    },\n    brush: {\n      type: BrushType.Color,\n      size: 50,\n      color: defaulBeadColor,\n    },\n  },\n  mode: EditorMode.Idle,\n};\n\nexport const Actions = {\n  Main: createActionCreators(MainImmerReducer),\n  Draggable: createActionCreators(DraggableOperationsImmerReducer),\n  Persist: createActionCreators(PersistImmerReducer),\n  ChangeEditorMode: createActionCreators(ChangeEditorModeImmerReducer),\n  MouseSelection: createActionCreators(MouseSelectionImmerReducer),\n  Toolbar: createActionCreators(ToolbarImmerReducer),\n  Topbar: createActionCreators(TopbarImmerReducer),\n  Paint: createActionCreators(PaintImmerReducer),\n};\n\nexport const store = composeReducers(\n  createReducerFunction(MainImmerReducer, defaultAppData),\n  createReducerFunction(DraggableOperationsImmerReducer, defaultAppData),\n  createReducerFunction(PersistImmerReducer, defaultAppData),\n  createReducerFunction(ToolbarImmerReducer, defaultAppData),\n  createReducerFunction(TopbarImmerReducer, defaultAppData),\n  createReducerFunction(ChangeEditorModeImmerReducer, defaultAppData),\n  createReducerFunction(MouseSelectionImmerReducer, defaultAppData),\n  createReducerFunction(PaintImmerReducer, defaultAppData)\n);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlus,\n  faEdit,\n  faArrowsAlt,\n  faPaintBrush,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { EditorMode } from \"../../editorObjects/Editor\";\nimport { uiButton } from \"../colors\";\nimport { useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\n\nexport const EditorModes = ({ editorMode }) => {\n  const dispatch = useDispatch();\n\n  const onChangeEditorMode = (newEditorMode: EditorMode) => {\n    dispatch(Actions.ChangeEditorMode.action_onChangeEditorMode(newEditorMode));\n  };\n\n  return (\n    <div className=\"\">\n      <StateButton\n        label={\"Idle\"}\n        icon={<FontAwesomeIcon icon={faArrowsAlt} color={uiButton} />}\n        onClick={() => onChangeEditorMode(EditorMode.Idle)}\n        isSelected={editorMode === EditorMode.Idle}\n      />\n\n      <StateButton\n        label={\"Edit Lines\"}\n        icon={<FontAwesomeIcon icon={faEdit} color={uiButton} />}\n        onClick={() => onChangeEditorMode(EditorMode.EditLines)}\n        isSelected={editorMode === EditorMode.EditLines}\n      />\n\n      <StateButton\n        label={\"Edit Beads\"}\n        icon={<FontAwesomeIcon icon={faEdit} color={uiButton} />}\n        onClick={() => onChangeEditorMode(EditorMode.EditBeads)}\n        isSelected={editorMode === EditorMode.EditBeads}\n      />\n\n      <StateButton\n        label={\"AddLine\"}\n        icon={<FontAwesomeIcon icon={faPlus} color={uiButton} />}\n        onClick={() => onChangeEditorMode(EditorMode.AddLine)}\n        isSelected={editorMode === EditorMode.AddLine}\n      />\n\n      <StateButton\n        label={\"Paint\"}\n        icon={<FontAwesomeIcon icon={faPaintBrush} color={uiButton} />}\n        onClick={() => onChangeEditorMode(EditorMode.Paint)}\n        isSelected={editorMode === EditorMode.Paint}\n      />\n    </div>\n  );\n};\n\nconst StateButton = ({ label, isSelected, onClick, icon }) => {\n  return (\n    <div\n      className={`\n              button \n              ${isSelected ? \"is-active\" : \"\"}\n            `}\n      onClick={onClick}\n    >\n      <span className=\"icon is-small\">{icon}</span>\n      <span>{label}</span>\n    </div>\n  );\n};\n","export const getTranslate3dCss = (x, y, z = 1) => {\n  return `translate3d(${x}px, ${y}px, ${z}px)`;\n};\n\nexport const getRotateCss = rotate => {\n  return `rotate(${rotate}rad)`;\n};\n","import React from \"react\";\nimport { getDistanceBetweenPoints, getRotate } from \"../../editorObjects/Point\";\nimport { getTranslate3dCss, getRotateCss } from \"../operations/MapValuesToCss\";\n\nexport const StraightLine = ({ start, end }) => {\n  const size = 5;\n  const height = 1;\n  const width = getDistanceBetweenPoints(start, end);\n  const rotate = getRotate(end.y - start.y, end.x - start.x);\n  return (\n    <div\n      style={{\n        height,\n        width,\n        transform: `${getTranslate3dCss(\n          start.x + size,\n          start.y + size\n        )} ${getRotateCss(rotate)}`,\n        transformOrigin: \"left center\",\n      }}\n      className=\"line\"\n    >\n      &nbsp;\n    </div>\n  );\n};\n","import React, { useState, MouseEvent, useRef } from \"react\";\nimport { StraightLine } from \"./StraightLine\";\nimport { getTranslate3dCss } from \"../operations/MapValuesToCss\";\nimport { useDispatch } from \"react-redux\";\nimport { Point } from \"../../editorObjects/Editor\";\nimport { Actions } from \"../../store\";\n\nexport const AddLineMode = ({ isActive }) => {\n  if (isActive === false) {\n    return <React.Fragment />;\n  }\n\n  return <AddLineModeContent />;\n};\n\nconst AddLineModeContent = () => {\n  interface SimplePoint {\n    x: number;\n    y: number;\n  }\n  const [startPoint, setStartPoint] = useState<SimplePoint>({\n    x: 0,\n    y: 0,\n  });\n  const [endPoint, setEndPoint] = useState<SimplePoint>({\n    x: 0,\n    y: 0,\n  });\n  const [isDragEnabled, setIsDragEnabled] = useState<boolean>(false);\n  const lineRef = useRef<HTMLDivElement>(null);\n  const onMouseDown = (event: MouseEvent<HTMLElement>) => {\n    if (lineRef.current) {\n      const rect = lineRef.current.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      setStartPoint({ x, y });\n      setEndPoint({ x, y });\n      setIsDragEnabled(true);\n    }\n  };\n  const onMouseUp = (event: MouseEvent<HTMLElement>) => {\n    if (isDragEnabled) {\n      if (lineRef.current) {\n        const rect = lineRef.current.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        setEndPoint({ x, y });\n        onAddLine(startPoint, endPoint);\n        setIsDragEnabled(false);\n      }\n    }\n  };\n  const onMouseMove = (event: MouseEvent<HTMLElement>) => {\n    if (isDragEnabled) {\n      if (lineRef.current) {\n        const rect = lineRef.current.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        setEndPoint({ x, y });\n      }\n    }\n  };\n  const dispatch = useDispatch();\n\n  const onAddLine = (start: SimplePoint, end: SimplePoint) => {\n    dispatch(Actions.Draggable.action_onAddLine(start as Point, end as Point));\n  };\n\n  return (\n    <div>\n      <div\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onMouseMove={onMouseMove}\n        onMouseLeave={onMouseUp}\n        className=\"add-line-wrapper\"\n        ref={lineRef}\n      ></div>\n\n      {isDragEnabled ? (\n        <div>\n          <div\n            style={{\n              transform: getTranslate3dCss(startPoint.x, startPoint.y),\n              width: 10,\n              height: 10,\n            }}\n            className={\"line-start\"}\n          >\n            &nbsp;\n          </div>\n          <div\n            style={{\n              transform: getTranslate3dCss(endPoint.x, endPoint.y),\n              width: 10,\n              height: 10,\n            }}\n            className={\"line-end\"}\n          >\n            &nbsp;\n          </div>\n          <StraightLine start={startPoint} end={endPoint} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import React, { useRef, MouseEvent } from \"react\";\nimport { getTranslate3dCss } from \"./MapValuesToCss\";\nimport { Editor } from \"../../editorObjects/Editor\";\nimport { useSelector } from \"react-redux\";\n\nexport const MouseSelection = (props: {\n  isVisible: boolean;\n  onMouseDown: any;\n  onMouseUp: any;\n  onMouseMove: any;\n}) => {\n  const { isVisible } = props;\n  const sceneWrapperRef = useRef<HTMLDivElement>(null);\n\n  const start = useSelector((state: Editor) => {\n    return state.ui.mouseSelection.start;\n  });\n\n  const end = useSelector((state: Editor) => {\n    return state.ui.mouseSelection.end;\n  });\n\n  const mouseSelectionIsDragStarted = useSelector((state: Editor) => {\n    return state.ui.mouseSelection.isDragStarted;\n  });\n\n  if (isVisible === false) {\n    return <React.Fragment />;\n  }\n\n  const isActive = mouseSelectionIsDragStarted === true;\n  const { onMouseDown, onMouseUp, onMouseMove } = props;\n\n  const onMouseDownHandler = (event: MouseEvent<HTMLElement>) => {\n    if (sceneWrapperRef.current) {\n      const rect = sceneWrapperRef.current.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      onMouseDown(x, y);\n    }\n  };\n\n  const onMouseUpHandler = (event: MouseEvent<HTMLElement>) => {\n    onMouseUp();\n  };\n\n  const onMouseMoveHandler = (event: MouseEvent<HTMLElement>) => {\n    if (isActive) {\n      if (sceneWrapperRef.current) {\n        const rect = sceneWrapperRef.current.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        onMouseMove(x, y);\n      }\n    }\n  };\n\n  const width = Math.abs(end.x - start.x);\n  const height = Math.abs(end.y - start.y);\n  const top = Math.min(end.x, start.x);\n  const left = Math.min(end.y, start.y);\n\n  // @TODO: czy chce odznaczać zaznaczenie po wyjściu poza teren edytora?\n\n  return (\n    <div\n      className={\"mouse-selection\"}\n      ref={sceneWrapperRef}\n      onMouseDown={onMouseDownHandler}\n      onMouseUp={onMouseUpHandler}\n      // onMouseLeave={onMouseUpHandler}\n      onMouseMove={onMouseMoveHandler}\n      style={{\n        zIndex: isActive ? 23 : 9,\n      }}\n    >\n      {isActive ? (\n        <div\n          style={{\n            width,\n            height,\n            backgroundColor: \"rgba(0,0,0, 0.05)\",\n            border: \"1px solid rgba(0,0,0,.3)\",\n            transform: getTranslate3dCss(top, left),\n          }}\n        ></div>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\nimport { MouseSelection } from \"../operations/MouseSelection\";\n\nexport const MouseSelectionBeads = ({ isVisible }) => {\n  const dispatch = useDispatch();\n\n  const onMouseDown = (x, y) => {\n    dispatch(Actions.MouseSelection.action_onEditBeadsMouseDown(x, y));\n  };\n\n  const onMouseMove = (x, y) => {\n    dispatch(Actions.MouseSelection.action_onEditBeadsMouseMove(x, y));\n  };\n\n  const onMouseUp = () => {\n    dispatch(Actions.MouseSelection.action_onEditBeadsMouseUp());\n  };\n\n  return (\n    <MouseSelection\n      isVisible={isVisible}\n      onMouseDown={onMouseDown}\n      onMouseMove={onMouseMove}\n      onMouseUp={onMouseUp}\n    />\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\nimport { MouseSelection } from \"../operations/MouseSelection\";\n\nexport const MouseSelectionLines = ({ isVisible }) => {\n  const dispatch = useDispatch();\n\n  const onMouseDown = (x, y) => {\n    dispatch(Actions.MouseSelection.action_onEditLinesMouseDown(x, y));\n  };\n\n  const onMouseMove = (x, y) => {\n    dispatch(Actions.MouseSelection.action_onEditLinesMouseMove(x, y));\n  };\n\n  const onMouseUp = () => {\n    dispatch(Actions.MouseSelection.action_onEditLinesMouseUp());\n  };\n\n  return (\n    <MouseSelection\n      isVisible={isVisible}\n      onMouseDown={onMouseDown}\n      onMouseMove={onMouseMove}\n      onMouseUp={onMouseUp}\n    />\n  );\n};\n","import React from \"react\";\nimport { Bead, BeadTypes } from \"../../editorObjects/Editor\";\nimport { getTranslate3dCss } from \"../operations/MapValuesToCss\";\nimport { Actions } from \"../../store\";\nimport { useDispatch } from \"react-redux\";\n\nexport const DisplayBead = (props: {\n  bead: Bead;\n  opacity?: number;\n  zIndex?: number;\n  isSelected: boolean;\n  isSelectable: boolean;\n}) => {\n  const { bead, opacity, zIndex, isSelected, isSelectable } = props;\n  const isOpacity = opacity !== undefined && opacity >= 0 && opacity <= 1;\n  const isZindex = zIndex !== undefined && zIndex >= 0 && zIndex <= 9999;\n\n  const dispatch = useDispatch();\n  const onClick = () => {\n    if (isSelectable) {\n      dispatch(Actions.Draggable.action_onClickBead(bead.id));\n    }\n  };\n\n  const translate3d = getTranslate3dCss(bead.position.x, bead.position.y);\n  const rotate = bead.rotate + bead.lineRotate;\n  const rotateCss = !rotate ? \"rotateZ(0deg)\" : `rotateZ(${rotate}deg)`;\n  let styles: React.CSSProperties = {\n    transform: `${translate3d} ${rotateCss}`,\n    opacity: isOpacity ? opacity : 1,\n    zIndex: isZindex ? zIndex : undefined,\n    border: isSelected ? \"1px solid #000\" : \"\",\n    width: `${bead.width}px`,\n    height: `${bead.height}px`,\n    background: bead.color,\n  };\n\n  if (bead.type === BeadTypes.BasicEllipse) {\n    styles.borderRadius = \"100%\";\n  }\n\n  return (\n    <div className=\"bead-item\" onClick={onClick} style={styles}>\n      &nbsp;\n    </div>\n  );\n};\n","import React from \"react\";\nimport { DisplayBead } from \"./DisplayBead\";\nimport { useSelector } from \"react-redux\";\nimport { Editor, EditorMode } from \"../../editorObjects/Editor\";\n\nexport const DisplayBeads = ({ mode }) => {\n  const fadeOut = mode === EditorMode.EditLines;\n  const onTop = mode === EditorMode.EditBeads;\n  const isSelectable = mode === EditorMode.EditBeads;\n  const beads = useSelector((state: Editor) => {\n    return Object.values(state.appData.beads);\n  });\n  const selectedBeadsIds = useSelector((state: Editor) => {\n    return state.ui.selectedBeadsIds;\n  });\n\n  return (\n    <React.Fragment>\n      {beads.map(bead => {\n        return (\n          // <React.Fragment key={bead.id} />\n          <DisplayBead\n            key={bead.id}\n            bead={bead}\n            opacity={fadeOut ? 0.5 : 1}\n            isSelected={selectedBeadsIds[bead.id] !== undefined}\n            isSelectable={isSelectable}\n            zIndex={fadeOut ? 10 : onTop ? 20 : undefined}\n          />\n        );\n      })}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { getDistanceBetweenPoints, getRotate } from \"../../editorObjects/Point\";\nimport { getTranslate3dCss, getRotateCss } from \"../operations/MapValuesToCss\";\n\nexport const SelectionStraightLine = ({ start, end, onClick }) => {\n  const size = 0;\n  const height = 10;\n  const width = getDistanceBetweenPoints(start, end);\n  const rotate = getRotate(end.y - start.y, end.x - start.x);\n\n  return (\n    <div\n      style={{\n        height,\n        width,\n        backgroundColor: \"rgba(0,0,0,0.0)\",\n        transform: `${getTranslate3dCss(\n          start.x + size,\n          start.y + size\n        )} ${getRotateCss(rotate)}`,\n        transformOrigin: \"left center\",\n        cursor: \"pointer\",\n        zIndex: 20,\n      }}\n      onClick={onClick}\n      className=\"line\"\n    >\n      &nbsp;\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { getDistanceBetweenPoints, getRotate } from \"../../editorObjects/Point\";\nimport { getTranslate3dCss, getRotateCss } from \"../operations/MapValuesToCss\";\nimport { DraggableCore, DraggableData } from \"react-draggable\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Actions } from \"../../store\";\nimport { Editor, EditorGridType, Point } from \"../../editorObjects/Editor\";\n\nexport const SelectedStraightLine = ({ lineId, start, end }) => {\n  const size = 0;\n  const height = 10;\n  const width = getDistanceBetweenPoints(start, end);\n  const rotate = getRotate(end.y - start.y, end.x - start.x);\n\n  const dispatch = useDispatch();\n\n  const snapToGrid = useSelector((state: Editor) => {\n    return state.ui.grid.snapEnabled;\n  });\n  const gridItemW = useSelector((state: Editor) => {\n    return state.ui.grid.width;\n  });\n  const gridItemH = useSelector((state: Editor) => {\n    return state.ui.grid.height;\n  });\n\n  const type = useSelector((state: Editor) => {\n    return state.ui.grid.type;\n  });\n\n  const [startX, set_tempX] = useState(0);\n  const [startY, set_tempY] = useState(0);\n\n  const [lineStart, set_lineStart] = useState<Point | null>(null);\n  const [lineEnd, set_lineEnd] = useState<Point | null>(null);\n\n  const onStart = (_, { x, y }: DraggableData) => {\n    console.log(\"rozpoczecie \", start, end, x, y);\n    set_tempX(x);\n    set_tempY(y);\n    set_lineStart({ ...start });\n    set_lineEnd({ ...end });\n  };\n  const onStop = (_, { x, y }: DraggableData) => {\n    console.log(\"zakoneczenie \", start, end, x, y);\n    set_tempX(0);\n    set_tempY(0);\n    set_lineStart(null);\n    set_lineEnd(null);\n  };\n  const onDrag = (_, { x, y, deltaX, deltaY }: DraggableData) => {\n    dispatch(\n      Actions.Draggable.action_onLineDrag(lineId, {\n        x,\n        y,\n        deltaX,\n        deltaY,\n        startX,\n        startY,\n        lineStart,\n        lineEnd,\n      })\n    );\n  };\n\n  return (\n    <DraggableCore\n      onStart={onStart}\n      onDrag={onDrag}\n      onStop={onStop}\n      grid={\n        snapToGrid === true && type === EditorGridType.Box\n          ? [gridItemW, gridItemH]\n          : undefined\n      }\n      disabled={false}\n      scale={1}\n    >\n      <div\n        style={{\n          height,\n          width,\n          backgroundColor: \"rgba(0,0,0,0.05)\",\n          border: \"1px dashed rgba(0,0,0,0.60)\",\n          transform: `${getTranslate3dCss(\n            start.x + size,\n            start.y + size\n          )} ${getRotateCss(rotate)}`,\n          transformOrigin: \"left center\",\n          cursor: \"move\",\n          zIndex: 21,\n        }}\n        className=\"line\"\n      >\n        &nbsp;\n      </div>\n    </DraggableCore>\n  );\n};\n","import React from \"react\";\nimport { Line, Editor, EditorGridType } from \"../../editorObjects/Editor\";\nimport { StraightLine } from \"./StraightLine\";\nimport { DraggableData, DraggableCore } from \"react-draggable\";\nimport { SelectionStraightLine } from \"./SelectionStraightLine\";\nimport { SelectedStraightLine } from \"./SelectedStraightLine\";\nimport { getTranslate3dCss } from \"../operations/MapValuesToCss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Actions } from \"../../store\";\n\nexport const DisplayLine = (props: { line: Line; isSelected: boolean }) => {\n  const { isSelected, line } = props;\n  const dispatch = useDispatch();\n  const eventHandlerStartPoint = (_, { x, y }: DraggableData) => {\n    dispatch(Actions.Draggable.action_onStartPointDrag(line.id, { x, y }));\n  };\n  const eventHandlerEndPoint = (_, { x, y }: DraggableData) => {\n    dispatch(Actions.Draggable.action_onEndPointDrag(line.id, { x, y }));\n  };\n  const onClick = () => {\n    dispatch(Actions.Draggable.action_onClickLine(line.id));\n  };\n  const itemWidth = 10;\n  const itemHeight = 10;\n  const snapToGrid = useSelector((state: Editor) => {\n    return state.ui.grid.snapEnabled;\n  });\n  const gridItemW = useSelector((state: Editor) => {\n    return state.ui.grid.width;\n  });\n  const gridItemH = useSelector((state: Editor) => {\n    return state.ui.grid.height;\n  });\n  const type = useSelector((state: Editor) => {\n    return state.ui.grid.type;\n  });\n  return (\n    <div>\n      <DraggableCore\n        // onStart={eventHandlerStartPoint}\n        onDrag={eventHandlerStartPoint}\n        // onStop={eventHandlerStartPoint}\n        grid={snapToGrid === true && type === EditorGridType.Box ? [gridItemW, gridItemH] : undefined}\n        scale={1}\n        disabled={false}\n      >\n        <div\n          style={{\n            transform: getTranslate3dCss(line.start.x, line.start.y),\n            zIndex: isSelected === true ? 22 : 21,\n            width: itemWidth,\n            height: itemHeight,\n          }}\n          className={\"line-start\"}\n        >\n          &nbsp;\n        </div>\n      </DraggableCore>\n\n      <DraggableCore\n        // onStart={eventHandlerEndPoint}\n        onDrag={eventHandlerEndPoint}\n        // onStop={eventHandlerEndPoint}\n        grid={snapToGrid === true && type === EditorGridType.Box ? [gridItemW, gridItemH] : undefined}\n        disabled={false}\n        scale={1}\n      >\n        <div\n          style={{\n            transform: getTranslate3dCss(line.end.x, line.end.y),\n            zIndex: isSelected === true ? 22 : 21,\n            width: itemWidth,\n            height: itemHeight,\n          }}\n          className={\"line-end test\"}\n        >\n          &nbsp;\n        </div>\n      </DraggableCore>\n\n      {isSelected === true ? (\n        <SelectedStraightLine\n          start={line.start}\n          end={line.end}\n          lineId={line.id}\n        />\n      ) : (\n        <SelectionStraightLine\n          start={line.start}\n          end={line.end}\n          onClick={onClick}\n        />\n      )}\n\n      <StraightLine start={line.start} end={line.end} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { DisplayLine } from \"./DisplayLine\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\n\nexport const DraggableLines = ({ lines, selectedLinesIds }) => {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      {lines.map(line => {\n        return (\n          <DisplayLine\n            key={line.id}\n            line={line}\n            isSelected={selectedLinesIds[line.id] !== undefined}\n          />\n        );\n      })}\n    </DndProvider>\n  );\n};\n","import React from \"react\";\nimport { Line } from \"../../editorObjects/Editor\";\nimport { StraightLine } from \"./StraightLine\";\n\nexport const DisplaySimpleLine = (props: { line: Line }) => {\n  const { line } = props;\n  return (\n    <div>\n      <StraightLine start={line.start} end={line.end} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { EditorMode, Editor } from \"../../editorObjects/Editor\";\nimport { DraggableLines } from \"./DraggableLines\";\nimport { DisplaySimpleLine } from \"./DisplaySimpleLine\";\nimport { useSelector } from \"react-redux\";\n\nexport const DisplayLines = ({ mode }) => {\n  const isEditable = mode === EditorMode.EditLines;\n  const lines = useSelector((state: Editor) => {\n    return Object.values(state.appData.lines);\n  });\n  const selectedLinesIds = useSelector((state: Editor) => {\n    return state.ui.selectedLinesIds;\n  });\n\n  const isHidden = mode === EditorMode.Idle;\n  \n  if (isHidden) {\n    return <React.Fragment />;\n  }\n\n  if (isEditable) {\n    return <DraggableLines lines={lines} selectedLinesIds={selectedLinesIds} />;\n  }\n\n  return (\n    <React.Fragment>\n      {lines.map(line => {\n        return <DisplaySimpleLine key={line.id} line={line} />;\n      })}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { getTranslate3dCss } from \"./MapValuesToCss\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { DraggableCore } from \"react-draggable\";\nimport { useSelector } from \"react-redux\";\nimport { Editor, EditorGridType } from \"../../editorObjects/Editor\";\n\nexport const DisplayGroupLines = ({ location, onDrag }) => {\n  const { x, y, w, h } = location;\n\n  const snapToGrid = useSelector((state: Editor) => {\n    return state.ui.grid.snapEnabled;\n  });\n  const gridItemW = useSelector((state: Editor) => {\n    return state.ui.grid.width;\n  });\n  const gridItemH = useSelector((state: Editor) => {\n    return state.ui.grid.height;\n  });\n\n  const type = useSelector((state: Editor) => {\n    return state.ui.grid.type;\n  });\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <DraggableCore\n        // onStart={onDrag}\n        onDrag={onDrag}\n        // onStop={onDrag}\n        grid={\n          snapToGrid === true && type === EditorGridType.Box\n            ? [gridItemW, gridItemH]\n            : undefined\n        }\n        scale={1}\n        disabled={false}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: w,\n            height: h,\n            transform: getTranslate3dCss(x, y),\n            opacity: 1,\n            zIndex: 22,\n            border: \"1px dashed rgba(0,0,0,0.2)\",\n            background: \"rgba(0,0,0,0.05)\",\n            cursor: \"move\",\n          }}\n        >\n          &nbsp;\n        </div>\n      </DraggableCore>\n    </DndProvider>\n  );\n};\n","import { Editor } from \"../../editorObjects/Editor\";\n\nexport const getGroupPositionFromLines = (selectedLines): { x; y; w; h } => {\n  let xMin: number = Number.MAX_SAFE_INTEGER;\n  let xMax: number = Number.MAX_SAFE_INTEGER * -1;\n  let yMin: number = Number.MAX_SAFE_INTEGER;\n  let yMax: number = Number.MAX_SAFE_INTEGER * -1;\n  selectedLines.forEach(line => {\n    const start = line.start;\n    const end = line.end;\n    xMin = Math.min(xMin, start.x, end.x);\n    xMax = Math.max(xMax, start.x, end.x);\n    yMin = Math.min(yMin, start.y, end.y);\n    yMax = Math.max(yMax, start.y, end.y);\n  });\n  return {\n    x: xMin,\n    y: yMin,\n    w: xMax - xMin + 10,\n    h: yMax - yMin + 10,\n  };\n};\n\nexport const getSelectedLines = (state: Editor) => {\n  return Object.keys(state.ui.selectedLinesIds).map(lineId => {\n    return state.appData.lines[lineId];\n  });\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Actions } from \"../../store\";\nimport { DraggableData } from \"react-draggable\";\nimport { DisplayGroupLines } from \"./DisplayGroupLines\";\nimport { getGroupPositionFromLines, getSelectedLines } from \"./getGroupPositionFromLines\";\n\nexport const DisplayLinesGroup = ({ selectedLinesIdsCount }) => {\n  const dispatch = useDispatch();\n  const selectedLines = useSelector(getSelectedLines);\n  const location = getGroupPositionFromLines(selectedLines);\n  const eventDragHandler = (_, { deltaX, deltaY }: DraggableData) => {\n    dispatch(Actions.Draggable.action_onGroupLineDrag({ deltaX, deltaY }));\n  };\n  return <DisplayGroupLines location={location} onDrag={eventDragHandler} />;\n};\n\nexport const MemoizedDisplayLinesGroup = React.memo(DisplayLinesGroup);\n","import React from \"react\";\nimport { getTranslate3dCss } from \"./MapValuesToCss\";\n\nexport const DisplayGroupBeads = ({ location }) => {\n  const { x, y, w, h } = location;\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: w,\n        height: h,\n        transform: getTranslate3dCss(x, y),\n        opacity: 1,\n        zIndex: 22,\n        border: \"1px dashed rgba(0,0,0,0.2)\",\n        background: \"rgba(0,0,0,0.05)\",\n      }}\n    >\n      &nbsp;\n    </div>\n  );\n};\n","import { Editor } from \"../../editorObjects/Editor\";\n\nexport const getGroupPositionFromBeads = (selectedBeads): { x; y; w; h } => {\n  let xMin: number = Number.MAX_SAFE_INTEGER;\n  let xMax: number = Number.MAX_SAFE_INTEGER * -1;\n  let yMin: number = Number.MAX_SAFE_INTEGER;\n  let yMax: number = Number.MAX_SAFE_INTEGER * -1;\n  selectedBeads.forEach(bead => {\n    const startX = bead.position.x;\n    const endX = bead.position.x + 10;\n    const startY = bead.position.y;\n    const endY = bead.position.y + 10;\n    xMin = Math.min(xMin, startX, endX);\n    xMax = Math.max(xMax, startX, endX);\n    yMin = Math.min(yMin, startY, endY);\n    yMax = Math.max(yMax, startY, endY);\n  });\n  return {\n    x: xMin,\n    y: yMin,\n    w: xMax - xMin + 10,\n    h: yMax - yMin + 10,\n  };\n};\n\nexport const getSelectedBeads = (state: Editor) => {\n  return Object.keys(state.ui.selectedBeadsIds).map(beadId => {\n    return state.appData.beads[beadId];\n  });\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { DisplayGroupBeads } from \"./DisplayGroupBeads\";\nimport {\n  getSelectedBeads,\n  getGroupPositionFromBeads,\n} from \"./getGroupPositionFromBeads\";\n\nexport const DisplayBeadsGroup = ({ selectedBeadsIdsCount }) => {\n  const selectedBead = useSelector(getSelectedBeads);\n  const location = getGroupPositionFromBeads(selectedBead);\n\n  return <DisplayGroupBeads location={location} />;\n};\n\nexport const MemoizedDisplayBeadsGroup = React.memo(DisplayBeadsGroup);\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Editor, EditorMode } from \"../../editorObjects/Editor\";\nimport { MemoizedDisplayLinesGroup } from \"./DisplayLinesGroup\";\nimport { MemoizedDisplayBeadsGroup } from \"./DisplayBeadsGroup\";\n\nexport const GroupSelectionPlaceholder = ({ mode }) => {\n  const selectedBeadsIdsCount = useSelector((state: Editor) => {\n    return state.ui.selectedBeadsIdsCount;\n  });\n\n  const selectedLinesIdsCount = useSelector((state: Editor) => {\n    return state.ui.selectedLinesIdsCount;\n  });\n\n  if (mode === EditorMode.EditBeads && selectedBeadsIdsCount >= 2) {\n    return (\n      <MemoizedDisplayBeadsGroup\n        selectedBeadsIdsCount={selectedBeadsIdsCount}\n      />\n    );\n  }\n\n  if (mode === EditorMode.EditLines && selectedLinesIdsCount >= 2) {\n    return (\n      <MemoizedDisplayLinesGroup\n        selectedLinesIdsCount={selectedLinesIdsCount}\n      />\n    );\n  }\n  return <React.Fragment />;\n};\n","import React from \"react\";\nimport { DisplayBead } from \"../../Bead/DisplayBead\";\nimport { buildBead } from \"../../../editorObjects/Bead\";\nimport { buildPoint } from \"../../../editorObjects/Point\";\n\nexport const FieldBeadPreview = ({ bead }) => {\n  const displayBead = buildBead({\n    ...bead,\n    position: buildPoint(0, 0),\n  });\n  return (\n    <div\n      style={{\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100px\",\n        boxSizing: \"border-box\",\n      }}\n    >\n      <div\n        style={{\n          position: \"relative\",\n          top: `${(-1 * bead.height) / 2}px`,\n          left: `${(-1 * bead.width) / 2}px`,\n        }}\n      >\n        <DisplayBead\n          bead={displayBead}\n          isSelected={false}\n          isSelectable={false}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const ToolbarField = ({ label, icon, value, onToggle }) => {\n  return (\n    <div\n      className={\"fieldset\"}\n      onClick={onToggle}\n      style={{ cursor: \"pointer\" }}\n    >\n      <div className=\"label\">\n        {icon ? (\n          <div\n            style={{\n              width: \"30px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"30px\",\n              marginRight: \"10px\",\n            }}\n          >\n            {icon}\n          </div>\n        ) : null}\n        {label ? <div>{label}</div> : null}\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\",\n          boxSizing: \"border-box\",\n          paddingLeft: \"10px\",\n          paddingRight: \"20px\",\n          width: \"100%\",\n        }}\n      >\n        <div>{value !== undefined ? value : \"-\"}</div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ToolbarField } from \"./ToolbarField\";\n\nexport const ToolbarFieldSet = ({ selected, label, icon, children }) => {\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\n  const onToggle = () => {\n    setIsPickerOpen(!isPickerOpen);\n  };\n  return (\n    <div\n      style={{\n        // borderBottom: \"1px solid #dfdfdf\",\n        borderTop: \"1px solid #dfdfdf\",\n      }}\n    >\n      <ToolbarField\n        label={label}\n        onToggle={onToggle}\n        icon={icon}\n        value={selected}\n      />\n\n      {isPickerOpen === true ? (\n        <div style={{ background: \"#fff\" }}>{React.cloneElement(children)}</div>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport * as material from \"material-colors\";\n\nexport const FieldColorPicker = ({ value, onChange, ...props }) => {\n  const colors = [\n    [\n      material.red[\"900\"],\n      material.red[\"700\"],\n      material.red[\"500\"],\n      material.red[\"300\"],\n      material.red[\"100\"],\n    ],\n    [\n      material.pink[\"900\"],\n      material.pink[\"700\"],\n      material.pink[\"500\"],\n      material.pink[\"300\"],\n      material.pink[\"100\"],\n    ],\n    [\n      material.purple[\"900\"],\n      material.purple[\"700\"],\n      material.purple[\"500\"],\n      material.purple[\"300\"],\n      material.purple[\"100\"],\n    ],\n    [\n      material.deepPurple[\"900\"],\n      material.deepPurple[\"700\"],\n      material.deepPurple[\"500\"],\n      material.deepPurple[\"300\"],\n      material.deepPurple[\"100\"],\n    ],\n    [\n      material.indigo[\"900\"],\n      material.indigo[\"700\"],\n      material.indigo[\"500\"],\n      material.indigo[\"300\"],\n      material.indigo[\"100\"],\n    ],\n    [\n      material.blue[\"900\"],\n      material.blue[\"700\"],\n      material.blue[\"500\"],\n      material.blue[\"300\"],\n      material.blue[\"100\"],\n    ],\n    [\n      material.lightBlue[\"900\"],\n      material.lightBlue[\"700\"],\n      material.lightBlue[\"500\"],\n      material.lightBlue[\"300\"],\n      material.lightBlue[\"100\"],\n    ],\n    [\n      material.cyan[\"900\"],\n      material.cyan[\"700\"],\n      material.cyan[\"500\"],\n      material.cyan[\"300\"],\n      material.cyan[\"100\"],\n    ],\n    [\n      material.teal[\"900\"],\n      material.teal[\"700\"],\n      material.teal[\"500\"],\n      material.teal[\"300\"],\n      material.teal[\"100\"],\n    ],\n    [\n      \"#194D33\",\n      material.green[\"700\"],\n      material.green[\"500\"],\n      material.green[\"300\"],\n      material.green[\"100\"],\n    ],\n    [\n      material.lightGreen[\"900\"],\n      material.lightGreen[\"700\"],\n      material.lightGreen[\"500\"],\n      material.lightGreen[\"300\"],\n      material.lightGreen[\"100\"],\n    ],\n    [\n      material.lime[\"900\"],\n      material.lime[\"700\"],\n      material.lime[\"500\"],\n      material.lime[\"300\"],\n      material.lime[\"100\"],\n    ],\n    [\n      material.yellow[\"900\"],\n      material.yellow[\"700\"],\n      material.yellow[\"500\"],\n      material.yellow[\"300\"],\n      material.yellow[\"100\"],\n    ],\n    [\n      material.amber[\"900\"],\n      material.amber[\"700\"],\n      material.amber[\"500\"],\n      material.amber[\"300\"],\n      material.amber[\"100\"],\n    ],\n    [\n      material.orange[\"900\"],\n      material.orange[\"700\"],\n      material.orange[\"500\"],\n      material.orange[\"300\"],\n      material.orange[\"100\"],\n    ],\n    [\n      material.deepOrange[\"900\"],\n      material.deepOrange[\"700\"],\n      material.deepOrange[\"500\"],\n      material.deepOrange[\"300\"],\n      material.deepOrange[\"100\"],\n    ],\n    [\n      material.brown[\"900\"],\n      material.brown[\"700\"],\n      material.brown[\"500\"],\n      material.brown[\"300\"],\n      material.brown[\"100\"],\n    ],\n    [\n      material.blueGrey[\"900\"],\n      material.blueGrey[\"700\"],\n      material.blueGrey[\"500\"],\n      material.blueGrey[\"300\"],\n      material.blueGrey[\"100\"],\n    ],\n    [\"#000000\", \"#525252\", \"#969696\", \"#D9D9D9\", \"#FFFFFF\"],\n  ];\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        paddingTop: \"20px\",\n        paddingBottom: \"30px\",\n        paddingLeft: \"20px\",\n        paddingRight: \"20px\",\n      }}\n    >\n      <DisplayColorsGroup colors={colors} onClick={onChange} />\n      {/* <CirclePicker\n        color={value}\n        onChangeComplete={color => onChange(color.hex)}\n        colors={[\"#000\"]}\n      /> */}\n      {/* <SwatchesPicker\n        width={258}\n        height={240}\n        onChangeComplete={color => onChange(color.hex)}\n        color={value}\n      /> */}\n    </div>\n  );\n};\n\nconst DisplayColorsGroup = ({ colors, onClick }) => {\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {colors.map(group => {\n          return (\n            <div key={group.toString()} style={{ marginBottom: \"10px\" }}>\n              {group.map(color => {\n                return (\n                  <div\n                    key={color}\n                    style={{\n                      cursor: \"pointer\",\n                      border: \"3px solid transparent\",\n                      boxSizing: \"border-box\",\n                    }}\n                  >\n                    <div\n                      onClick={() => onClick(color)}\n                      style={{\n                        boxSizing: \"border-box\",\n                        background: color,\n                        width: \"28px\",\n                        height: \"28px\",\n                        borderRadius: \"100%\",\n                        border: \"none\",\n                      }}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\n\n\n// const colors = [\n//   material.red[\"900\"],\n//   material.red[\"700\"],\n//   material.red[\"500\"],\n//   material.red[\"300\"],\n//   material.red[\"100\"],\n//   material.pink[\"900\"],\n//   material.pink[\"700\"],\n//   material.pink[\"500\"],\n//   material.pink[\"300\"],\n//   material.pink[\"100\"],\n//   material.purple[\"900\"],\n//   material.purple[\"700\"],\n//   material.purple[\"500\"],\n//   material.purple[\"300\"],\n//   material.purple[\"100\"],\n//   material.deepPurple[\"900\"],\n//   material.deepPurple[\"700\"],\n//   material.deepPurple[\"500\"],\n//   material.deepPurple[\"300\"],\n//   material.deepPurple[\"100\"],\n//   material.indigo[\"900\"],\n//   material.indigo[\"700\"],\n//   material.indigo[\"500\"],\n//   material.indigo[\"300\"],\n//   material.indigo[\"100\"],\n//   material.blue[\"900\"],\n//   material.blue[\"700\"],\n//   material.blue[\"500\"],\n//   material.blue[\"300\"],\n//   material.blue[\"100\"],\n//   material.lightBlue[\"900\"],\n//   material.lightBlue[\"700\"],\n//   material.lightBlue[\"500\"],\n//   material.lightBlue[\"300\"],\n//   material.lightBlue[\"100\"],\n//   material.cyan[\"900\"],\n//   material.cyan[\"700\"],\n//   material.cyan[\"500\"],\n//   material.cyan[\"300\"],\n//   material.cyan[\"100\"],\n//   material.teal[\"900\"],\n//   material.teal[\"700\"],\n//   material.teal[\"500\"],\n//   material.teal[\"300\"],\n//   material.teal[\"100\"],\n//   \"#194D33\",\n//   material.green[\"700\"],\n//   material.green[\"500\"],\n//   material.green[\"300\"],\n//   material.green[\"100\"],\n//   material.lightGreen[\"900\"],\n//   material.lightGreen[\"700\"],\n//   material.lightGreen[\"500\"],\n//   material.lightGreen[\"300\"],\n//   material.lightGreen[\"100\"],\n//   material.lime[\"900\"],\n//   material.lime[\"700\"],\n//   material.lime[\"500\"],\n//   material.lime[\"300\"],\n//   material.lime[\"100\"],\n//   material.yellow[\"900\"],\n//   material.yellow[\"700\"],\n//   material.yellow[\"500\"],\n//   material.yellow[\"300\"],\n//   material.yellow[\"100\"],\n//   material.amber[\"900\"],\n//   material.amber[\"700\"],\n//   material.amber[\"500\"],\n//   material.amber[\"300\"],\n//   material.amber[\"100\"],\n//   material.orange[\"900\"],\n//   material.orange[\"700\"],\n//   material.orange[\"500\"],\n//   material.orange[\"300\"],\n//   material.orange[\"100\"],\n//   material.deepOrange[\"900\"],\n//   material.deepOrange[\"700\"],\n//   material.deepOrange[\"500\"],\n//   material.deepOrange[\"300\"],\n//   material.deepOrange[\"100\"],\n//   material.brown[\"900\"],\n//   material.brown[\"700\"],\n//   material.brown[\"500\"],\n//   material.brown[\"300\"],\n//   material.brown[\"100\"],\n//   material.blueGrey[\"900\"],\n//   material.blueGrey[\"700\"],\n//   material.blueGrey[\"500\"],\n//   material.blueGrey[\"300\"],\n//   material.blueGrey[\"100\"],\n\n//   \"#000000\",\n//   \"#525252\",\n//   \"#969696\",\n//   \"#D9D9D9\",\n//   \"#FFFFFF\",\n// ];\n","import React from \"react\";\n\nexport const FieldColor = ({ value, isSelected, onClick }) => {\n  return (\n    <div style={{ border: \"5px solid transparent\" }}>\n      <div\n        onClick={onClick ? () => onClick(value) : undefined}\n        style={{\n          width: 25,\n          height: 25,\n          background: value,\n          marginBottom: 0,\n          marginRight: 0,\n          border: isSelected ? \"2px solid #000\" : \"2px solid #000\",\n          boxShadow: isSelected\n            ? \"2px 2px 2px rgba(0,0,0,1)\"\n            : \"2px 2px 2px rgba(0,0,0,0.1)\",\n        }}\n      ></div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { uiButton } from \"../../colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPalette } from \"@fortawesome/free-solid-svg-icons\";\nimport { ToolbarFieldSet } from \"./ToolbarFieldSet\";\nimport { FieldColorPicker } from \"./FieldColorPicker\";\nimport { FieldColor } from \"./FieldColor\";\n\nexport const FieldsetColor = ({ value, onChange }) => {\n  return (\n    <ToolbarFieldSet\n      selected={\n        <FieldColor value={value} isSelected={false} onClick={undefined} />\n      }\n      label={\"Color\"}\n      icon={<FontAwesomeIcon icon={faPalette} color={uiButton} size={\"lg\"} />}\n    >\n      <FieldColorPicker value={value} onChange={onChange} />\n    </ToolbarFieldSet>\n  );\n};\n","import React from \"react\";\nimport { BeadTypes } from \"../../../editorObjects/Editor\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircle, faExpand } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const BeadTypesIcons = {\n  [BeadTypes.BasicEllipse]: \"circle\",\n  [BeadTypes.BasicRectangle]: \"rectangle-wide\",\n};\n\nexport const FieldBeadTypePicker = ({ value, onChange }) => {\n  return (\n    <DisplayAvailableBeadTypes\n      types={BeadTypesIcons}\n      selectedType={value}\n      onClick={onChange}\n    />\n  );\n};\n\nconst DisplayAvailableBeadTypes = ({ types, selectedType, onClick }) => {\n  console.log(\"jak jest?\", types);\n  return (\n    <div className=\"fieldset\" style={{}}>\n      <div className=\"label\"></div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          boxSizing: \"border-box\",\n          paddingLeft: \"10px\",\n          paddingRight: \"20px\",\n          width: \"100%\",\n        }}\n      >\n        {Object.keys(types).map((type, index) => {\n          return (\n            <DisplayBeadType\n              icon={types[type]}\n              type={type}\n              key={index}\n              isSelected={selectedType === type}\n              onClick={onClick}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport const DisplayBeadType = ({ icon, type, isSelected, onClick }) => {\n  return (\n    <div style={{ border: \"5px solid transparent\" }}>\n      <div\n        onClick={onClick ? () => onClick(type) : undefined}\n        style={{\n          width: 25,\n          height: 25,\n          background: \"#eee\",\n          marginBottom: 0,\n          marginRight: 0,\n          border: isSelected ? \"2px solid #000\" : \"2px solid #000\",\n          boxShadow: isSelected\n            ? \"2px 2px 2px rgba(0,0,0,1)\"\n            : \"2px 2px 2px rgba(0,0,0,0.1)\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {icon === \"circle\" ? <FontAwesomeIcon icon={faCircle} /> : null}\n        {icon === \"rectangle-wide\" ? <FontAwesomeIcon icon={faExpand} /> : null}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { uiButton } from \"../../colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShapes } from \"@fortawesome/free-solid-svg-icons\";\nimport { ToolbarFieldSet } from \"./ToolbarFieldSet\";\nimport {\n  FieldBeadTypePicker,\n  BeadTypesIcons,\n  DisplayBeadType,\n} from \"./FieldBeadTypePicker\";\n\nexport const FieldsetBeadType = ({ value, onChange }) => {\n  return (\n    <ToolbarFieldSet\n      selected={\n        <DisplayBeadType\n          icon={value ? BeadTypesIcons[value] : undefined}\n          type={value}\n          isSelected={false}\n          onClick={undefined}\n        />\n      }\n      label={\"Type\"}\n      icon={<FontAwesomeIcon icon={faShapes} color={uiButton} size={\"lg\"} />}\n    >\n      <FieldBeadTypePicker value={value} onChange={onChange} />\n    </ToolbarFieldSet>\n  );\n};\n","import React from \"react\";\nimport \"rc-slider/assets/index.css\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\n\nexport const SliderWithTooltip = createSliderWithTooltip(Slider);\n\nexport const FieldSlider = ({ value, onChange, ...props }) => {\n  return (\n    <div\n      style={{\n        background: \"#fff\",\n        width: \"100%\",\n        paddingTop: \"20px\",\n        paddingBottom: \"30px\",\n        paddingLeft: \"20px\",\n        paddingRight: \"20px\",\n      }}\n    >\n      <SliderWithTooltip\n        max={100}\n        min={1}\n        step={1}\n        value={value}\n        onChange={value => onChange(value)}\n        defaultValue={10}\n        marks={{\n          0: \"0\",\n          50: \"50\",\n          100: \"100\",\n        }}\n        {...props}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const FieldCheckbox = ({ label, value, onChange, isDisabled }) => {\n  return (\n    <div className={\"fieldset\"}>\n      <div className=\"label\">{label}</div>\n      <input\n        type=\"checkbox\"\n        disabled={isDisabled}\n        value={value === true ? 1 : 0}\n        checked={value === true}\n        onChange={event => onChange(event.target.value === \"0\")}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { uiButton } from \"../../colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDivide } from \"@fortawesome/free-solid-svg-icons\";\nimport { ToolbarFieldSet } from \"./ToolbarFieldSet\";\nimport { SliderWithTooltip } from \"./FieldSlider\";\nimport { FieldCheckbox } from \"./FieldCheckbox\";\n\nexport const FieldsetBeadSpacing = ({\n  beadsAutoSpacing,\n  beadsSpacing,\n  onChange_beadsSpacing,\n  onChange_beadsAutoSpacing,\n}) => {\n  const label =\n    beadsAutoSpacing === true\n      ? \"auto\"\n      : beadsSpacing === undefined\n      ? \"0\"\n      : beadsSpacing;\n  return (\n    <ToolbarFieldSet\n      selected={label}\n      label={\"Spacing\"}\n      icon={\n        <FontAwesomeIcon\n          icon={faDivide}\n          color={uiButton}\n          size={\"lg\"}\n          style={{ transform: \"rotate(90deg)\" }}\n        />\n      }\n    >\n      <div>\n        <div style={{ width: \"100%\" }}>\n          <FieldCheckbox\n            label={\"Auto \"}\n            value={beadsAutoSpacing}\n            onChange={onChange_beadsAutoSpacing}\n            isDisabled={false}\n          />\n        </div>\n\n        <div\n          style={{\n            width: \"100%\",\n            paddingTop: \"20px\",\n            paddingBottom: \"30px\",\n            paddingLeft: \"20px\",\n            paddingRight: \"20px\",\n          }}\n        >\n          <SliderWithTooltip\n            max={100}\n            min={1}\n            step={1}\n            value={beadsSpacing}\n            disabled={beadsAutoSpacing === true}\n            onChange={value => onChange_beadsSpacing(value)}\n            defaultValue={10}\n            marks={{\n              0: \"0\",\n              50: \"50\",\n              100: \"100\",\n            }}\n          />\n        </div>\n      </div>\n    </ToolbarFieldSet>\n  );\n};\n","import React from \"react\";\nimport { uiButton } from \"../../colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceSix } from \"@fortawesome/free-solid-svg-icons\";\nimport { ToolbarFieldSet } from \"./ToolbarFieldSet\";\nimport { SliderWithTooltip } from \"./FieldSlider\";\nimport { FieldCheckbox } from \"./FieldCheckbox\";\n\nexport const FieldsetBeadCount = ({\n  beadsAutoCount,\n  beadsCount,\n  onChange_beadsCount,\n  onChange_beadsAutoCount,\n}) => {\n  const label =\n    beadsAutoCount === true\n      ? \"auto\"\n      : beadsCount === undefined\n      ? \"0\"\n      : beadsCount;\n\n  const max = 300;\n  return (\n    <ToolbarFieldSet\n      selected={label}\n      label={\"Amount\"}\n      icon={<FontAwesomeIcon icon={faDiceSix} color={uiButton} size={\"lg\"} />}\n    >\n      <div>\n        <div style={{ width: \"100%\" }}>\n          <FieldCheckbox\n            label={\"Auto \"}\n            value={beadsAutoCount}\n            onChange={onChange_beadsAutoCount}\n            isDisabled={false}\n          />\n        </div>\n\n        <div\n          style={{\n            width: \"100%\",\n            paddingTop: \"20px\",\n            paddingBottom: \"30px\",\n            paddingLeft: \"20px\",\n            paddingRight: \"20px\",\n          }}\n        >\n          <SliderWithTooltip\n            max={max}\n            min={1}\n            step={1}\n            value={beadsCount}\n            disabled={beadsAutoCount === true}\n            onChange={value => onChange_beadsCount(value)}\n            defaultValue={10}\n            marks={{\n              1: \"1\",\n              [max / 2]: `${max / 2}`,\n              [max]: `${max}`,\n            }}\n          />\n        </div>\n      </div>\n    </ToolbarFieldSet>\n  );\n};\n","import React from \"react\";\nimport \"rc-slider/assets/index.css\";\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\n\nexport const SliderWithTooltip = createSliderWithTooltip(Slider);\n\nexport const FieldSliderWithLabel = ({ value, onChange, label, icon }) => {\n  return (\n    <div\n      className={\"fieldset\"}\n      style={{\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        background: \"#fff\",\n        borderBottom: 0,\n      }}\n    >\n      <div className=\"label\" style={{ padding: 0, width: \"105px\" }}>\n        {icon ? (\n          <div\n            style={{\n              width: \"30px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"30px\",\n              marginRight: \"10px\",\n            }}\n          >\n            {icon}\n          </div>\n        ) : null}\n        {label ? <div>{label}</div> : null}\n      </div>\n\n      <div\n        style={{\n          boxSizing: \"border-box\",\n          flexGrow: 1,\n          paddingRight: \"10px\",\n          paddingBottom: \"10px\",\n        }}\n      >\n        <SliderWithTooltip\n          max={100}\n          min={1}\n          step={1}\n          value={value}\n          onChange={value => onChange(value)}\n          defaultValue={10}\n          marks={{\n            0: \"0\",\n            50: \"50\",\n            100: \"100\",\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FieldsetHeight } from \"./FieldsetHeight\";\nimport { FieldsetWidth } from \"./FieldsetWidth\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExpandArrowsAlt,\n  faArrowsAltV,\n  faArrowsAltH,\n  faLink,\n  faUnlink,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { uiButton } from \"../../colors\";\nimport { ToolbarFieldSet } from \"./ToolbarFieldSet\";\nimport { FieldSliderWithLabel } from \"./FieldSliderWithLabel\";\nimport { FieldCheckbox } from \"./FieldCheckbox\";\n\nexport const FieldsetWidthAndHeight = ({\n  height,\n  width,\n  keepAspectRatio,\n  onChange_beadHeight,\n  onChange_beadWidth,\n  onChange_keepAspectRatio,\n}) => {\n  const format = value =>\n    value.toLocaleString(undefined, {\n      maximumFractionDigits: 2,\n      style: \"decimal\",\n    });\n  const value = `${format(width)} x ${format(height)}`;\n  return (\n    <div>\n      <ToolbarFieldSet\n        selected={value}\n        label={\"Size\"}\n        icon={\n          <FontAwesomeIcon\n            icon={faExpandArrowsAlt}\n            color={uiButton}\n            size={\"lg\"}\n          />\n        }\n      >\n        <div>\n          <div style={{ width: \"100%\", background: \"#fff\" }}>\n            <FieldCheckbox\n              label={\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexWrap: \"nowrap\",\n                    justifyContent: \"space\",\n                  }}\n                >\n                  <div\n                    style={{\n                      width: \"30px\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      height: \"30px\",\n                      marginRight: \"10px\",\n                      background: \"#fff\",\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      icon={keepAspectRatio === true ? faLink : faUnlink}\n                      color={uiButton}\n                      size={\"lg\"}\n                    />\n                  </div>\n                  <div>Keep aspect ratio</div>\n                </div>\n              }\n              value={keepAspectRatio}\n              onChange={onChange_keepAspectRatio}\n              isDisabled={false}\n            />\n          </div>\n\n          <FieldSliderWithLabel\n            label={\"Width\"}\n            icon={\n              <FontAwesomeIcon\n                icon={faArrowsAltH}\n                color={uiButton}\n                size={\"lg\"}\n              />\n            }\n            value={width}\n            onChange={onChange_beadWidth}\n          />\n\n          <FieldSliderWithLabel\n            label={\"Height\"}\n            icon={\n              <FontAwesomeIcon\n                icon={faArrowsAltV}\n                color={uiButton}\n                size={\"lg\"}\n              />\n            }\n            value={height}\n            onChange={onChange_beadHeight}\n          />\n        </div>\n      </ToolbarFieldSet>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faClone, faDizzy } from \"@fortawesome/free-solid-svg-icons\";\nimport { uiButton } from \"../../colors\";\n\nexport const FieldDeleteAndCopy = ({ onDelete, onClone, onReset }) => {\n  return (\n    <div\n      className=\"fieldset\"\n      style={{ paddingLeft: \"15px\", paddingRight: \"20px\" }}\n    >\n      <div className=\"field has-addons\">\n        <div className=\"control\">\n          <div className={` button `} onClick={onDelete}>\n            <span className=\"icon is-small\">\n              <FontAwesomeIcon icon={faTrash} color={uiButton} />\n            </span>\n            <span>Delete</span>\n          </div>\n        </div>\n\n        <div className=\"control\">\n          <div className={` button `} onClick={onClone}>\n            <span className=\"icon is-small\">\n              <FontAwesomeIcon icon={faClone} color={uiButton} />\n            </span>\n            <span>Clone</span>\n          </div>\n        </div>\n\n        <div className=\"control\">\n          <div className={` button `} onClick={onReset}>\n            <span className=\"icon is-small\">\n              <FontAwesomeIcon icon={faDizzy} color={uiButton} />\n            </span>\n            <span>Reset beads</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { uiButton } from \"../../colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FieldSlider } from \"./FieldSlider\";\nimport { ToolbarFieldSet } from \"./ToolbarFieldSet\";\nimport NumberFormat from \"react-number-format\";\n\nexport const FieldsetBeadRotate = ({ value, onChange }) => {\n  return (\n    <ToolbarFieldSet\n      selected={`${value}deg`}\n      label={\"Rotate\"}\n      icon={<FontAwesomeIcon icon={faSyncAlt} color={uiButton} size={\"lg\"} />}\n    >\n      <React.Fragment>\n        <FieldSlider\n          value={value}\n          onChange={value => {\n            console.log(\"FieldSlider\", value);\n            onChange(value);\n          }}\n          max={180}\n          min={-180}\n          defaultValue={0}\n          marks={{\n            \"-180\": \"-180\",\n            \"0\": \"0\",\n            \"180\": \"180\",\n          }}\n        />\n        <NumberFormat\n          suffix={\"deg\"}\n          allowNegative={true}\n          allowEmptyFormatting={true}\n          value={value}\n          onValueChange={event => {\n            onChange(event.floatValue);\n          }}\n          placeholder=\" deg\"\n          style={{\n            color: \"#4a4a4a\",\n            textAlign: \"center\",\n            border: \"1px solid #aeaeae\",\n            fontFamily: \"Open Sans, sans-serif\",\n            fontSize: \"1em\",\n            fontWeight: 400,\n            lineHeight: \"1.5\",\n            padding: \"3px 10px\",\n            marginBottom: \"15px\",\n            marginTop: \"5px\",\n          }}\n        />\n      </React.Fragment>\n    </ToolbarFieldSet>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Editor } from \"../../../editorObjects/Editor\";\nimport { FieldBeadPreview } from \"../ui/FieldBeadPreview\";\nimport { Actions } from \"../../../store\";\nimport { FieldsetWidth } from \"../ui/FieldsetWidth\";\nimport { FieldsetHeight } from \"../ui/FieldsetHeight\";\nimport { FieldsetColor } from \"../ui/FieldsetColor\";\nimport { FieldsetBeadType } from \"../ui/FieldsetBeadType\";\nimport { FieldsetBeadSpacing } from \"../ui/FieldsetBeadSpacing\";\nimport { FieldsetBeadCount } from \"../ui/FieldsetBeadCount\";\nimport { FieldsetWidthAndHeight } from \"../ui/FieldsetWidthAndHeight\";\nimport { FieldDeleteAndCopy } from \"../ui/FieldDeleteAndCopy\";\nimport { FieldsetBeadRotate } from \"../ui/FieldsetBeadRotate\";\n\nexport const ToolbarEditLines = ({ isVisible }) => {\n  if (isVisible === true) {\n    return <ToolbarEditLinesWrapper />;\n  }\n\n  return <React.Fragment />;\n};\n\nconst ToolbarEditLinesWrapper = ({}) => {\n  const showToolbar = useSelector((state: Editor) => {\n    return state.ui.selectedLinesIdsCount >= 1;\n  });\n  if (showToolbar) {\n    return <Content />;\n  }\n  return <React.Fragment />;\n};\n\nconst Content = () => {\n  return (\n    <React.Fragment>\n      <BeadPreview />\n      <BeadSize />\n      <BeadColor />\n      <BeadType />\n      <BeadsSpacing />\n      <BeadsCount />\n      <BeadsRotate />\n      <DeleteAndClone />\n    </React.Fragment>\n  );\n};\n\nconst BeadsRotate = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsRotate = value => {\n    let newValue = value;\n    if (value === undefined || value === null || isNaN(value) === true) {\n      newValue = 0;\n    }\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_defaultBead_rotate(newValue)\n    );\n  };\n\n  return (\n    <FieldsetBeadRotate\n      value={settings.defaultBead.rotate}\n      onChange={onChange_beadsRotate}\n    />\n  );\n};\n\nconst BeadSize = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  const onChange_beadWidth = value => {\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_defaultBead_width(value)\n    );\n  };\n  const onChange_beadHeight = value => {\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_defaultBead_height(value)\n    );\n  };\n  const onChange_keepAspectRatio = value => {\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_defaultBead_keepAspectRatio(\n        value\n      )\n    );\n  };\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  const width = settings.defaultBead.width ? settings.defaultBead.width : 10;\n  const height = settings.defaultBead.height ? settings.defaultBead.height : 10;\n  const keepAspectRatio = settings.defaultBead.keepAspectRatio\n    ? settings.defaultBead.keepAspectRatio\n    : false;\n\n  return (\n    <div>\n      <FieldsetWidthAndHeight\n        height={height}\n        width={width}\n        keepAspectRatio={keepAspectRatio}\n        onChange_beadHeight={onChange_beadHeight}\n        onChange_beadWidth={onChange_beadWidth}\n        onChange_keepAspectRatio={onChange_keepAspectRatio}\n      />\n    </div>\n  );\n};\n\nconst BeadsCount = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsCount = value => {\n    if (!value) {\n      return;\n    }\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_settings_beadsCount(\n        Number(value)\n      )\n    );\n  };\n\n  const onChange_beadsAutoCount = value => {\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_settings_beadsAutoCount(value)\n    );\n  };\n\n  return (\n    <FieldsetBeadCount\n      beadsAutoCount={settings.beadsAutoCount}\n      beadsCount={settings.beadsCount}\n      onChange_beadsAutoCount={onChange_beadsAutoCount}\n      onChange_beadsCount={onChange_beadsCount}\n    />\n  );\n};\n\nconst BeadsSpacing = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsSpacing = value => {\n    if (!value) {\n      return;\n    }\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_settings_beadsSpacing(\n        Number(value)\n      )\n    );\n  };\n\n  const onChange_beadsAutoSpacing = value => {\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_settings_beadsAutoSpacing(\n        value\n      )\n    );\n  };\n\n  return (\n    <FieldsetBeadSpacing\n      beadsAutoSpacing={settings.beadsAutoSpacing}\n      beadsSpacing={settings.beadsSpacing}\n      onChange_beadsAutoSpacing={onChange_beadsAutoSpacing}\n      onChange_beadsSpacing={onChange_beadsSpacing}\n    />\n  );\n};\n\nconst BeadType = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead.type) {\n    return <React.Fragment />;\n  }\n\n  const onSelect = type => {\n    dispatch(Actions.Toolbar.action_changeSelectedLines_defaultBead_type(type));\n  };\n\n  return (\n    <FieldsetBeadType onChange={onSelect} value={settings.defaultBead.type} />\n  );\n};\n\nconst BeadColor = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead.color) {\n    return <React.Fragment />;\n  }\n\n  const onSelect = color => {\n    dispatch(\n      Actions.Toolbar.action_changeSelectedLines_defaultBead_color(color)\n    );\n  };\n\n  return (\n    <FieldsetColor onChange={onSelect} value={settings.defaultBead.color} />\n  );\n};\n\nconst BeadPreview = () => {\n  const selected = useSelector((state: Editor) => {\n    const lineId = Object.keys(state.ui.selectedLinesIds)[0];\n    return state.appData.lines[lineId];\n  });\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  const { settings } = selected;\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  return <FieldBeadPreview bead={settings.defaultBead} />;\n};\n\nconst DeleteAndClone = () => {\n  const dispatch = useDispatch();\n  const onDeleteLines = () => {\n    dispatch(Actions.Toolbar.action_deleteSelectedLines());\n  };\n  const onCloneLines = () => {\n    dispatch(Actions.Toolbar.action_cloneSelectedLines());\n  };\n  const onResetBeads = () => {\n    dispatch(Actions.Toolbar.action_resetSelectedLines());\n  };\n\n  return (\n    <React.Fragment>\n      <FieldDeleteAndCopy\n        onDelete={onDeleteLines}\n        onClone={onCloneLines}\n        onReset={onResetBeads}\n      />\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Editor } from \"../../../editorObjects/Editor\";\nimport { FieldBeadPreview } from \"../ui/FieldBeadPreview\";\nimport { Actions } from \"../../../store\";\nimport { FieldsetColor } from \"../ui/FieldsetColor\";\nimport { FieldsetBeadType } from \"../ui/FieldsetBeadType\";\nimport { FieldsetBeadSpacing } from \"../ui/FieldsetBeadSpacing\";\nimport { FieldsetBeadCount } from \"../ui/FieldsetBeadCount\";\nimport { FieldsetWidthAndHeight } from \"../ui/FieldsetWidthAndHeight\";\nimport { FieldDeleteAndCopy } from \"../ui/FieldDeleteAndCopy\";\nimport { FieldsetBeadRotate } from \"../ui/FieldsetBeadRotate\";\n\nexport const ToolbarEditBeads = ({ isVisible }) => {\n  if (isVisible === true) {\n    return <ContentWrapper />;\n  }\n\n  return <React.Fragment />;\n};\n\nconst ContentWrapper = ({}) => {\n  const showToolbar = useSelector((state: Editor) => {\n    return state.ui.selectedBeadsIdsCount >= 1;\n  });\n  if (showToolbar) {\n    return <Content />;\n  }\n  return <React.Fragment />;\n};\n\nconst Content = () => {\n  return (\n    <React.Fragment>\n      <BeadPreview />\n      <BeadSize />\n      <BeadColor />\n      <BeadType />\n      <BeadsRotate />\n    </React.Fragment>\n  );\n};\n\nconst BeadsRotate = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const beadId = Object.keys(state.ui.selectedBeadsIds)[0];\n    return state.appData.beads[beadId];\n  });\n\n  if (!selected) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsRotate = value => {\n    let newValue = value;\n    if (value === undefined || value === null || isNaN(value) === true) {\n      newValue = 0;\n    }\n    dispatch(Actions.Toolbar.action_changeSelectedBeads_rotate(newValue));\n  };\n\n  return (\n    <FieldsetBeadRotate\n      value={selected.rotate}\n      onChange={onChange_beadsRotate}\n    />\n  );\n};\n\nconst BeadSize = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const beadId = Object.keys(state.ui.selectedBeadsIds)[0];\n    return state.appData.beads[beadId];\n  });\n\n  if (!selected) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadWidth = value => {\n    dispatch(Actions.Toolbar.action_changeSelectedBeads_width(value));\n  };\n  const onChange_beadHeight = value => {\n    dispatch(Actions.Toolbar.action_changeSelectedBeads_height(value));\n  };\n  const onChange_keepAspectRatio = value => {\n    dispatch(Actions.Toolbar.action_changeSelectedBeads_keepAspectRatio(value));\n  };\n  const width = selected.width ? selected.width : 10;\n  const height = selected.height ? selected.height : 10;\n  const keepAspectRatio = selected.keepAspectRatio\n    ? selected.keepAspectRatio\n    : false;\n\n  return (\n    <div>\n      <FieldsetWidthAndHeight\n        height={height}\n        width={width}\n        keepAspectRatio={keepAspectRatio}\n        onChange_beadHeight={onChange_beadHeight}\n        onChange_beadWidth={onChange_beadWidth}\n        onChange_keepAspectRatio={onChange_keepAspectRatio}\n      />\n    </div>\n  );\n};\n\nconst BeadType = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const beadId = Object.keys(state.ui.selectedBeadsIds)[0];\n    return state.appData.beads[beadId];\n  });\n\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  if (!selected.type) {\n    return <React.Fragment />;\n  }\n\n  const onSelect = type => {\n    dispatch(Actions.Toolbar.action_changeSelectedBeads_type(type));\n  };\n\n  return <FieldsetBeadType onChange={onSelect} value={selected.type} />;\n};\n\nconst BeadColor = () => {\n  const dispatch = useDispatch();\n  const selected = useSelector((state: Editor) => {\n    const beadId = Object.keys(state.ui.selectedBeadsIds)[0];\n    return state.appData.beads[beadId];\n  });\n\n  if (!selected) {\n    return <React.Fragment />;\n  }\n\n  if (!selected.color) {\n    return <React.Fragment />;\n  }\n\n  const onSelect = color => {\n    dispatch(Actions.Toolbar.action_changeSelectedBeads_color(color));\n  };\n\n  return <FieldsetColor onChange={onSelect} value={selected.color} />;\n};\n\nconst BeadPreview = () => {\n  const selected = useSelector((state: Editor) => {\n    const beadId = Object.keys(state.ui.selectedBeadsIds)[0];\n    return state.appData.beads[beadId];\n  });\n\n  if (!selected) {\n    return <React.Fragment />;\n  }\n  return <FieldBeadPreview bead={selected} />;\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Editor } from \"../../../editorObjects/Editor\";\nimport { FieldBeadPreview } from \"../ui/FieldBeadPreview\";\nimport { Actions } from \"../../../store\";\nimport { FieldsetWidth } from \"../ui/FieldsetWidth\";\nimport { FieldsetHeight } from \"../ui/FieldsetHeight\";\nimport { FieldsetColor } from \"../ui/FieldsetColor\";\nimport { FieldsetBeadType } from \"../ui/FieldsetBeadType\";\nimport { FieldsetBeadSpacing } from \"../ui/FieldsetBeadSpacing\";\nimport { FieldsetBeadCount } from \"../ui/FieldsetBeadCount\";\nimport { FieldsetWidthAndHeight } from \"../ui/FieldsetWidthAndHeight\";\nimport { FieldsetBeadRotate } from \"../ui/FieldsetBeadRotate\";\n\nexport const ToolbarAddLine = ({ isVisible }) => {\n  if (isVisible === true) {\n    return <Content />;\n  }\n\n  return <React.Fragment />;\n};\n\nconst Content = () => {\n  return (\n    <React.Fragment>\n      <BeadPreview />\n      <BeadSize />\n      <BeadColor />\n      <BeadType />\n      <BeadsSpacing />\n      <BeadsCount />\n      <BeadsRotate />\n    </React.Fragment>\n  );\n};\n\nconst BeadsRotate = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n  if (!settings) {\n    return <React.Fragment />;\n  }\n\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsRotate = value => {\n    let newValue = value;\n    if (value === undefined || value === null || isNaN(value) === true) {\n      newValue = 0;\n    }\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadRotate(newValue));\n  };\n\n  return (\n    <FieldsetBeadRotate\n      value={settings.defaultBead.rotate}\n      onChange={onChange_beadsRotate}\n    />\n  );\n};\n\nconst BeadSize = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n  const onChange_beadWidth = value => {\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadWidth(value));\n  };\n  const onChange_beadHeight = value => {\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadHeight(value));\n  };\n  const onChange_keepAspectRatio = value => {\n    dispatch(\n      Actions.Toolbar.action_changeDefaultLineBeadKeepAspectRatio(value)\n    );\n  };\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  const width = settings.defaultBead.width ? settings.defaultBead.width : 10;\n  const height = settings.defaultBead.height ? settings.defaultBead.height : 10;\n  const keepAspectRatio = settings.defaultBead.keepAspectRatio\n    ? settings.defaultBead.keepAspectRatio\n    : false;\n\n  return (\n    <div>\n      <FieldsetWidthAndHeight\n        height={height}\n        width={width}\n        keepAspectRatio={keepAspectRatio}\n        onChange_beadHeight={onChange_beadHeight}\n        onChange_beadWidth={onChange_beadWidth}\n        onChange_keepAspectRatio={onChange_keepAspectRatio}\n      />\n    </div>\n  );\n};\n\nconst BeadsCount = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsCount = value => {\n    if (!value) {\n      return;\n    }\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadsCount(Number(value)));\n  };\n\n  const onChange_beadsAutoCount = value => {\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadsAutoCount(value));\n  };\n\n  return (\n    <FieldsetBeadCount\n      beadsAutoCount={settings.beadsAutoCount}\n      beadsCount={settings.beadsCount}\n      onChange_beadsAutoCount={onChange_beadsAutoCount}\n      onChange_beadsCount={onChange_beadsCount}\n    />\n  );\n};\n\nconst BeadsSpacing = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n\n  const onChange_beadsSpacing = value => {\n    if (!value) {\n      return;\n    }\n    dispatch(\n      Actions.Toolbar.action_changeDefaultLineBeadsSpacing(Number(value))\n    );\n  };\n\n  const onChange_beadsAutoSpacing = value => {\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadsAutoSpacing(value));\n  };\n\n  return (\n    <FieldsetBeadSpacing\n      beadsAutoSpacing={settings.beadsAutoSpacing}\n      beadsSpacing={settings.beadsSpacing}\n      onChange_beadsAutoSpacing={onChange_beadsAutoSpacing}\n      onChange_beadsSpacing={onChange_beadsSpacing}\n    />\n  );\n};\n\nconst BeadType = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead.type) {\n    return <React.Fragment />;\n  }\n\n  const onSelect = type => {\n    dispatch(Actions.Toolbar.action_changeDefaultLineBeadType(type));\n  };\n\n  return (\n    <FieldsetBeadType onChange={onSelect} value={settings.defaultBead.type} />\n  );\n};\n\nconst BeadColor = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead.color) {\n    return <React.Fragment />;\n  }\n\n  const onSelect = color => {\n    dispatch(Actions.Toolbar.action_changeDefaultLineColor(color));\n  };\n\n  return (\n    <FieldsetColor onChange={onSelect} value={settings.defaultBead.color} />\n  );\n};\n\nconst BeadPreview = () => {\n  const settings = useSelector((state: Editor) => {\n    return state.ui.lineSettings.settings;\n  });\n  if (!settings) {\n    return <React.Fragment />;\n  }\n  if (!settings.defaultBead) {\n    return <React.Fragment />;\n  }\n  return <FieldBeadPreview bead={settings.defaultBead} />;\n};\n\n// const BeadWidth = () => {\n//   const dispatch = useDispatch();\n//   const settings = useSelector((state: Editor) => {\n//     return state.ui.lineSettings.settings;\n//   });\n//   const onChange = value => {\n//     dispatch(Actions.Toolbar.action_changeDefaultLineBeadWidth(value));\n//   };\n//   if (!settings) {\n//     return <React.Fragment />;\n//   }\n//   if (!settings.defaultBead) {\n//     return <React.Fragment />;\n//   }\n//   const value = settings.defaultBead.width ? settings.defaultBead.width : 10;\n//   return <FieldsetWidth value={value} onChange={onChange} />;\n// };\n\n// const BeadHeight = () => {\n//   const dispatch = useDispatch();\n//   const settings = useSelector((state: Editor) => {\n//     return state.ui.lineSettings.settings;\n//   });\n//   const onChange = value => {\n//     dispatch(Actions.Toolbar.action_changeDefaultLineBeadHeight(value));\n//   };\n\n//   if (!settings) {\n//     return <React.Fragment />;\n//   }\n//   if (!settings.defaultBead) {\n//     return <React.Fragment />;\n//   }\n//   const value = settings.defaultBead.height ? settings.defaultBead.height : 10;\n\n//   return <FieldsetHeight value={value} onChange={onChange} />;\n// };\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Editor } from \"../../../editorObjects/Editor\";\nimport { ToolbarField } from \"../ui/ToolbarField\";\n\nexport const ToolbarIdle = ({ isVisible }) => {\n  if (isVisible === true) {\n    return <Content />;\n  }\n\n  return <React.Fragment />;\n};\n\nconst Content = () => {\n  const linesLen = useSelector((state: Editor) => {\n    return Object.keys(state.appData.lines).length;\n  });\n\n  const beadsLen = useSelector((state: Editor) => {\n    return Object.keys(state.appData.beads).length;\n  });\n\n  return (\n    <div>\n      <ToolbarField\n        label={\"Beads\"}\n        onToggle={undefined}\n        value={beadsLen}\n        icon={undefined}\n      />\n\n      <ToolbarField\n        label={\"Lines\"}\n        onToggle={undefined}\n        value={linesLen}\n        icon={undefined}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { range } from \"lodash\";\nimport { getTranslate3dCss } from \"./MapValuesToCss\";\nimport { useSelector } from \"react-redux\";\nimport { Editor, EditorGridType } from \"../../editorObjects/Editor\";\nimport { buildPoint } from \"../../editorObjects/Point\";\nexport const DisplayGridLines = ({ isVisible }) => {\n  if (isVisible === false) {\n    return <React.Fragment />;\n  }\n\n  return <Content />;\n};\n\nconst Content = () => {\n  const grid = useSelector((state: Editor) => {\n    return state.ui.grid;\n  });\n\n  const { height, width, hexSize, type, isVisible } = grid;\n\n  if (isVisible === false) {\n    return <React.Fragment />;\n  }\n\n  if (type === EditorGridType.Box) {\n    return <GridBox height={height} width={width} />;\n  }\n\n  if (type === EditorGridType.Hex) {\n    return <GridHex hexSize={hexSize} />;\n  }\n\n  return <React.Fragment />;\n};\n\nconst GridBox = ({ height, width }) => {\n  const gridItemW = width;\n  const gridItemH = height;\n  const gridItemColor = \"rgba(0,0,0,0.08)\";\n  const gridItemStrokeWidth = 1;\n  const svg =\n    `<svg xmlns='http://www.w3.org/2000/svg' width='${gridItemW}' height='${gridItemH}'>` +\n    `  <line x1='${gridItemW / 2}' y1='0' x2='${gridItemW /\n      2}' y2='${gridItemH}' style='stroke:${gridItemColor};stroke-width:${gridItemStrokeWidth}' />` +\n    `  <line x1='0' y1='${gridItemH / 2}' x2='${gridItemW}' y2='${gridItemH /\n      2}' style='stroke:${gridItemColor};stroke-width:${gridItemStrokeWidth}' />` +\n    \"</svg>\";\n  const backgroundUrl = `url(\"data:image/svg+xml;utf8,${svg}\")`;\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        backgroundImage: backgroundUrl,\n        backgroundRepeat: \"repeat\",\n        backgroundPosition: `${gridItemW / 2}px ${gridItemH / 2}px`,\n      }}\n    />\n  );\n};\n\nconst pointy_hex_corner = (center, size, i) => {\n  var angle_deg = 60 * i - 30;\n  var angle_rad = (Math.PI / 180) * angle_deg;\n  return buildPoint(\n    center.x + size * Math.cos(angle_rad),\n    center.y + size * Math.sin(angle_rad)\n  );\n\n  // w = sqrt(3) * size\n  // h = 2 * size\n};\n\nconst GridHex = ({ hexSize }) => {\n  const gridItemColor = \"rgba(0,0,0,0.1)\";\n  const gridItemStrokeWidth = 1;\n\n  const size = hexSize;\n  const width = Math.sqrt(3) * size;\n  const height = 2 * size;\n  const startPoint = buildPoint(0, size);\n  const movedPoint = buildPoint(startPoint.x, startPoint.y);\n  movedPoint.x = movedPoint.x + width;\n  const moreMovedPoint = buildPoint(startPoint.x, startPoint.y);\n  moreMovedPoint.x = moreMovedPoint.x + width / 2;\n  moreMovedPoint.y = moreMovedPoint.y + height * (3 / 4);\n  const evenmoreMovedPoint = buildPoint(startPoint.x, startPoint.y);\n  evenmoreMovedPoint.x = evenmoreMovedPoint.x - width / 2;\n  evenmoreMovedPoint.y = evenmoreMovedPoint.y + height * (3 / 4);\n  const lines = [\n    [\n      pointy_hex_corner(startPoint, size, 5),\n      pointy_hex_corner(startPoint, size, 6),\n    ],\n    [\n      pointy_hex_corner(startPoint, size, 0),\n      pointy_hex_corner(startPoint, size, 1),\n    ],\n    [\n      pointy_hex_corner(startPoint, size, 1),\n      pointy_hex_corner(startPoint, size, 2),\n    ],\n    [\n      pointy_hex_corner(movedPoint, size, 4),\n      pointy_hex_corner(movedPoint, size, 5),\n    ],\n    [\n      pointy_hex_corner(movedPoint, size, 2),\n      pointy_hex_corner(movedPoint, size, 3),\n    ],\n    [\n      pointy_hex_corner(movedPoint, size, 2),\n      pointy_hex_corner(movedPoint, size, 3),\n    ],\n    [\n      pointy_hex_corner(moreMovedPoint, size, 0),\n      pointy_hex_corner(moreMovedPoint, size, 1),\n    ],\n    [\n      pointy_hex_corner(evenmoreMovedPoint, size, 0),\n      pointy_hex_corner(evenmoreMovedPoint, size, 1),\n    ],\n  ];\n\n  const boxW = width;\n  const boxH = 1.5 * height;\n\n  let svg = `<svg xmlns='http://www.w3.org/2000/svg' width='${boxW}' height='${boxH}'>`;\n  lines.forEach(points => {\n    const [a, b] = points;\n    const line =\n      `<line x1='${a.x}' y1='${a.y}' x2='${b.x}' y2='${b.y}' ` +\n      `style='stroke:${gridItemColor};stroke-width:${gridItemStrokeWidth}' />`;\n    svg = svg + line;\n  });\n  svg = svg + \"</svg>\";\n\n  const backgroundUrl = `url(\"data:image/svg+xml;utf8,${svg}\")`;\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        backgroundImage: backgroundUrl,\n        backgroundRepeat: \"repeat\",\n        backgroundPosition: `1px 0px`,\n      }}\n    ></div>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileAlt, faMarker, faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { uiButton } from \"../colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Actions } from \"../../store\";\nimport { Editor, EditorMenuMain } from \"../../editorObjects/Editor\";\n\nexport const TopbarMain = () => {\n  const dispatch = useDispatch();\n  const currentMenuMainOpen = useSelector((state: Editor) => {\n    return state.ui.currentMenuMainOpen;\n  });\n  const onClick_file = () => {\n    dispatch(Actions.Topbar.action_toggleMenuFile());\n  };\n  const onClick_settings = () => {\n    dispatch(Actions.Topbar.action_toggleMenuSettings());\n  };\n  return (\n    <div\n      className=\"field has-addons\"\n      style={{ margin: 0, border: \"1px solid #e0e0e0\", paddingBottom: \"0px\" }}\n    >\n      <div className=\"control\">\n        <div\n          className={`button is-light ${\n            currentMenuMainOpen === EditorMenuMain.File ? \"is-dark\" : \"\"\n          }`}\n          onClick={onClick_file}\n          style={{ height: \"25px\", padding: \"3px 10px\" }}\n        >\n          <span className=\"icon is-small\">\n            <FontAwesomeIcon icon={faFileAlt} color={uiButton} />\n          </span>\n          <span>File</span>\n        </div>\n      </div>\n\n      {/* <div className=\"control\">\n        <div className={`button`} onClick={onClick_selection}>\n          <span className=\"icon is-small\">\n            <FontAwesomeIcon icon={faMarker} />\n          </span>\n          <span>Canvas</span>\n        </div>\n      </div> */}\n\n      <div className=\"control\">\n        <div\n          className={`button is-light ${\n            currentMenuMainOpen === EditorMenuMain.Settings ? \"is-dark\" : \"\"\n          }`}\n          onClick={onClick_settings}\n          style={{ height: \"25px\", padding: \"3px 10px\" }}\n        >\n          <span className=\"icon is-small\">\n            <FontAwesomeIcon icon={faCog} color={uiButton} />\n          </span>\n          <span>Settings</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faSave, faDownload } from \"@fortawesome/free-solid-svg-icons\";\nimport { uiButton } from \"../colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Editor } from \"../../editorObjects/Editor\";\nimport { Actions } from \"../../store\";\n\nexport const EditorChangeState = () => {\n  const dispatch = useDispatch();\n  const isSaved = useSelector((state: Editor) => {\n    return state.ui.saveInfo.saved;\n  });\n  const haveUnsavedChanges = useSelector((state: Editor) => {\n    return state.ui.saveInfo.haveUnsavedChanges;\n  });\n\n  const onClearCanvas = () => {\n    dispatch(Actions.Persist.action_onClearCanvas());\n  };\n\n  const readSavedCanvas = () => {\n    dispatch(Actions.Persist.action_readSavedCanvas());\n  };\n\n  const onSaveCanvas = () => {\n    dispatch(Actions.Persist.action_onSaveCanvas());\n  };\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      <div\n        className=\"field has-addons\"\n        style={{ width: \"auto\", flexWrap: \"nowrap\", marginBottom: \"0\" }}\n      >\n        <div className=\"control\">\n          <div className={` button is-light `} onClick={onClearCanvas}>\n            <span className=\"icon is-small\">\n              <FontAwesomeIcon icon={faTimes} color={uiButton} />\n            </span>\n            <span>New project</span>\n          </div>\n        </div>\n\n        <div className=\"control\">\n          <div\n            className={` button is-light ${\n              isSaved === true ? \"is-success\" : \"\"\n            }`}\n            onClick={onSaveCanvas}\n          >\n            <span className=\"icon is-small\">\n              <FontAwesomeIcon icon={faSave} color={uiButton} />\n            </span>\n            <span>Save</span>\n          </div>\n        </div>\n\n        <div className=\"control\">\n          <div className={`button is-light `} onClick={readSavedCanvas}>\n            <span className=\"icon is-small\">\n              <FontAwesomeIcon icon={faDownload} color={uiButton} />\n            </span>\n            <span>Load local</span>\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          fontFamily: \"Open Sans, sans-serif\",\n          fontSize: \"13px\",\n          alignSelf: \"center\",\n        }}\n      >\n        {haveUnsavedChanges === true ? (\n          <div>You have unsaved changes</div>\n        ) : (\n          <div>No changes to save</div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Editor,\n  EditorMenuMain,\n  EditorGridType,\n} from \"../../editorObjects/Editor\";\nimport { EditorChangeState } from \"../Toolbar/EditorChangeState\";\nimport { FieldCheckbox } from \"../Toolbar/ui/FieldCheckbox\";\nimport NumberFormat from \"react-number-format\";\nimport { Actions } from \"../../store\";\n\nexport const TopbarSecoundary = () => {\n  const currentMenuMainOpen = useSelector((state: Editor) => {\n    return state.ui.currentMenuMainOpen;\n  });\n  if (currentMenuMainOpen === EditorMenuMain.File) {\n    return <SubMenuFile />;\n  }\n  if (currentMenuMainOpen === EditorMenuMain.Settings) {\n    return <SubMenuSettings />;\n  }\n  return <React.Fragment />;\n};\n\nconst SubMenuFile = () => {\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <EditorChangeState />\n    </div>\n  );\n};\n\nconst SubMenuSettings = () => {\n  const dispatch = useDispatch();\n  const grid = useSelector((state: Editor) => {\n    return state.ui.grid;\n  });\n\n  const { height, width, hexSize, type, snapEnabled, isVisible } = grid;\n  const onChange_isVisible = () => {\n    dispatch(Actions.Topbar.action_toggleGridIsVisible());\n  };\n  const onChange_snapEnabled = () => {\n    dispatch(Actions.Topbar.action_toggleGridSnapEnabled());\n  };\n  const onChange_gridItemW = value => {\n    let newValue = value;\n    if (value === undefined || value === null || isNaN(value) === true) {\n      newValue = 1;\n      return;\n    }\n    if (newValue < 1) {\n      newValue = 1;\n    }\n    if (newValue > 100) {\n      newValue = 100;\n    }\n    dispatch(Actions.Topbar.action_setGridWidth(newValue));\n  };\n  const onChange_gridItemH = value => {\n    let newValue = value;\n    if (value === undefined || value === null || isNaN(value) === true) {\n      newValue = 1;\n      return;\n    }\n    if (newValue < 1) {\n      newValue = 1;\n    }\n    if (newValue > 100) {\n      newValue = 100;\n    }\n    dispatch(Actions.Topbar.action_setGridHeight(newValue));\n  };\n  const onClick_selectTypeHex = () => {\n    dispatch(Actions.Topbar.action_setGridType(EditorGridType.Hex));\n  };\n  const onClick_selectTypeBox = () => {\n    dispatch(Actions.Topbar.action_setGridType(EditorGridType.Box));\n  };\n  const onChange_hexSize = value => {\n    let newValue = value;\n    if (value === undefined || value === null || isNaN(value) === true) {\n      newValue = 1;\n      return;\n    }\n    if (newValue < 1) {\n      newValue = 1;\n    }\n    if (newValue > 100) {\n      newValue = 100;\n    }\n    dispatch(Actions.Topbar.action_setGridHexSize(newValue));\n  };\n\n  return (\n    <div style={{ display: \"flex\", flexWrap: \"nowrap\", alignItems: \"center\" }}>\n      <GridOptions\n        isVisible={isVisible}\n        onChange_isVisible={onChange_isVisible}\n        snapEnabled={snapEnabled}\n        onChange_snapEnabled={onChange_snapEnabled}\n        type={type}\n        onClick_selectTypeHex={onClick_selectTypeHex}\n        onClick_selectTypeBox={onClick_selectTypeBox}\n      />\n\n      {type === EditorGridType.Box ? (\n        <GridBoxSettings\n          gridItemW={width}\n          onChange_gridItemW={onChange_gridItemW}\n          gridItemH={height}\n          onChange_gridItemH={onChange_gridItemH}\n        />\n      ) : null}\n\n      {type === EditorGridType.Hex ? (\n        <GridHexSettings\n          hexSize={hexSize}\n          onChange_hexSize={onChange_hexSize}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nconst GridOptions = ({\n  isVisible,\n  onChange_isVisible,\n  snapEnabled,\n  onChange_snapEnabled,\n  type,\n  onClick_selectTypeHex,\n  onClick_selectTypeBox,\n}) => {\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          marginRight: \"15px\",\n        }}\n      >\n        <FieldCheckbox\n          label={\"Show grid\"}\n          value={isVisible}\n          onChange={onChange_isVisible}\n          isDisabled={false}\n        />\n      </div>\n\n      <div\n        style={{\n          marginRight: \"15px\",\n        }}\n      >\n        <FieldCheckbox\n          label={\"Snap to grid\"}\n          value={snapEnabled}\n          onChange={onChange_snapEnabled}\n          isDisabled={false}\n        />\n      </div>\n\n      <div\n        style={{\n          marginRight: \"15px\",\n        }}\n      >\n        <div className={\"fieldset\"}>\n          <div className=\"label\">Grid type: </div>\n          <div className=\"control\">\n            <div\n              className={` button is-light ${\n                type === EditorGridType.Hex ? \"is-dark\" : \"\"\n              } `}\n              onClick={onClick_selectTypeHex}\n            >\n              <span>Hexagon</span>\n            </div>\n          </div>\n\n          <div className=\"control\">\n            <div\n              className={` button is-light ${\n                type === EditorGridType.Box ? \"is-dark\" : \"\"\n              }`}\n              onClick={onClick_selectTypeBox}\n            >\n              <span>Rectangle</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst GridBoxSettings = ({\n  gridItemW,\n  onChange_gridItemW,\n  gridItemH,\n  onChange_gridItemH,\n}) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n        alignItems: \"center\",\n        marginRight: \"15px\",\n      }}\n    >\n      <div className={\"fieldset\"}>\n        <div className=\"label\">Grid size: </div>\n\n        <NumberFormat\n          allowNegative={false}\n          allowEmptyFormatting={true}\n          max={99}\n          min={1}\n          maxLength={2}\n          value={gridItemW}\n          onValueChange={event => {\n            onChange_gridItemW(event.floatValue);\n          }}\n          placeholder=\"width\"\n          style={{\n            color: \"#4a4a4a\",\n            textAlign: \"center\",\n            border: \"1px solid #aeaeae\",\n            fontFamily: \"Open Sans, sans-serif\",\n            fontSize: \"13px\",\n            fontWeight: 400,\n            lineHeight: \"1.5\",\n            padding: \"0px 10px\",\n            marginBottom: \"0px\",\n            marginTop: \"0px\",\n            maxWidth: \"70px\",\n            marginRight: \"5px\",\n          }}\n        />\n        <NumberFormat\n          allowNegative={false}\n          allowEmptyFormatting={true}\n          max={99}\n          min={1}\n          maxLength={2}\n          value={gridItemH}\n          onValueChange={event => {\n            onChange_gridItemH(event.floatValue);\n          }}\n          placeholder=\"height\"\n          style={{\n            color: \"#4a4a4a\",\n            textAlign: \"center\",\n            border: \"1px solid #aeaeae\",\n            fontFamily: \"Open Sans, sans-serif\",\n            fontSize: \"13px\",\n            fontWeight: 400,\n            lineHeight: \"1.5\",\n            padding: \"0px 10px\",\n            marginBottom: \"0px\",\n            marginTop: \"0px\",\n            maxWidth: \"70px\",\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst GridHexSettings = ({ hexSize, onChange_hexSize }) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n        alignItems: \"center\",\n        marginRight: \"15px\",\n      }}\n    >\n      <div className={\"fieldset\"}>\n        <div className=\"label\">Hex size: </div>\n\n        <NumberFormat\n          allowNegative={false}\n          allowEmptyFormatting={true}\n          max={99}\n          min={5}\n          maxLength={2}\n          value={hexSize}\n          onValueChange={event => {\n            onChange_hexSize(event.floatValue);\n          }}\n          placeholder=\"width\"\n          style={{\n            color: \"#4a4a4a\",\n            textAlign: \"center\",\n            border: \"1px solid #aeaeae\",\n            fontFamily: \"Open Sans, sans-serif\",\n            fontSize: \"13px\",\n            fontWeight: 400,\n            lineHeight: \"1.5\",\n            padding: \"0px 10px\",\n            marginBottom: \"0px\",\n            marginTop: \"0px\",\n            maxWidth: \"70px\",\n            marginRight: \"5px\",\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Editor, BrushType } from \"../../editorObjects/Editor\";\nimport { getTranslate3dCss } from \"./MapValuesToCss\";\nimport { Actions } from \"../../store\";\n\nexport const Brush = ({ isVisible }) => {\n  if (isVisible === true) {\n    return <Content />;\n  }\n  return <React.Fragment />;\n};\n\nconst Content = () => {\n  const brush = useSelector((state: Editor) => {\n    return state.ui.brush;\n  });\n  const { type, color, size } = brush;\n  if (type === BrushType.Color) {\n    return <ColorBrush color={color} size={size} />;\n  }\n  return <React.Fragment />;\n};\n\nconst ColorBrush = ({ color, size }) => {\n  const dispatch = useDispatch();\n  const [isVisible, set_isVisible] = useState(false);\n  const [isActivated, set_isActivated] = useState(false);\n  const [pointX, set_pointX] = useState(0);\n  const [pointY, set_pointY] = useState(0);\n  const [rect, set_rect] = useState<ClientRect | null>(null);\n  const sceneWrapperRef = useRef<HTMLDivElement>(null);\n  const onMouseEnter = (event: React.MouseEvent<HTMLDivElement>) => {\n    set_isVisible(true);\n  };\n  const onMouseLeave = (event: React.MouseEvent<HTMLDivElement>) => {\n    set_isVisible(false);\n  };\n  const onMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    if (rect === null) {\n      if (sceneWrapperRef.current) {\n        set_rect(sceneWrapperRef.current.getBoundingClientRect());\n      }\n    }\n    if (rect !== null) {\n      const x = event.clientX - rect.left - size / 2;\n      const y = event.clientY - rect.top - size / 2;\n      set_pointX(x);\n      set_pointY(y);\n      if (isActivated) {\n        dispatch(Actions.Paint.action_applyColorBrush(x, y));\n      }\n    }\n  };\n  const onMouseDown = (event: React.MouseEvent<HTMLDivElement>) => {\n    set_isActivated(true);\n    if (rect === null) {\n      if (sceneWrapperRef.current) {\n        const rect = sceneWrapperRef.current.getBoundingClientRect();\n        set_rect(rect);\n        const x = event.clientX - rect.left - size / 2;\n        const y = event.clientY - rect.top - size / 2;\n        set_pointX(x);\n        set_pointY(y);\n        dispatch(Actions.Paint.action_applyColorBrush(x, y));\n      }\n    }\n    if (rect !== null) {\n      const x = event.clientX - rect.left - size / 2;\n      const y = event.clientY - rect.top - size / 2;\n      set_pointX(x);\n      set_pointY(y);\n      dispatch(Actions.Paint.action_applyColorBrush(x, y));\n    }\n  };\n  const onMouseUp = (event: React.MouseEvent<HTMLDivElement>) => {\n    set_isActivated(false);\n  };\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: \"transparent\",\n          zIndex: 20,\n          cursor: \"cell\",\n        }}\n        ref={sceneWrapperRef}\n        onMouseDown={onMouseDown}\n        onMouseUp={onMouseUp}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onMouseMove={onMouseMove}\n      ></div>\n\n      <BrushElement\n        y={pointY}\n        x={pointX}\n        color={color}\n        size={size}\n        isVisible={isVisible}\n      />\n    </React.Fragment>\n  );\n};\n\nconst BrushElement = ({ x, y, color, size, isVisible }) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        transform: getTranslate3dCss(x, y),\n        backgroundColor: color,\n        width: size,\n        height: size,\n        border: \"5px solid #aeaeae\",\n        borderRadius: \"100%\",\n        opacity: isVisible === true ? 0.8 : 0,\n        zIndex: 19,\n      }}\n    >\n      &nbsp;\n    </div>\n  );\n};\n","import React from \"react\";\nimport { uiButton } from \"../../colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowsAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FieldSlider } from \"./FieldSlider\";\nimport { ToolbarFieldSet } from \"./ToolbarFieldSet\";\n\nexport const FieldsetSize = ({ value, onChange }) => {\n  return (\n    <ToolbarFieldSet\n      selected={value}\n      label={\"Size\"}\n      icon={<FontAwesomeIcon icon={faArrowsAlt} color={uiButton} size={\"lg\"} />}\n    >\n      <FieldSlider value={value} onChange={onChange} />\n    </ToolbarFieldSet>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Editor } from \"../../../editorObjects/Editor\";\nimport { Actions } from \"../../../store\";\nimport { FieldsetColor } from \"../ui/FieldsetColor\";\nimport { FieldsetSize } from \"../ui/FieldsetSize\";\n\nexport const ToolbarPaint = ({ isVisible }) => {\n  if (isVisible === true) {\n    return <Content />;\n  }\n\n  return <React.Fragment />;\n};\n\nconst Content = () => {\n  return (\n    <React.Fragment>\n      <BrushSize />\n      <BrushColor />\n    </React.Fragment>\n  );\n};\n\nconst BrushSize = () => {\n  const dispatch = useDispatch();\n  const size = useSelector((state: Editor) => {\n    return state.ui.brush.size;\n  });\n\n  if (!size) {\n    return <React.Fragment />;\n  }\n\n  const onChange = value => {\n    let newValue = value;\n    if (value === undefined || value === null || isNaN(value) === true) {\n      newValue = 0;\n    }\n    dispatch(Actions.Toolbar.action_updateBrushSize(newValue));\n  };\n\n  return <FieldsetSize value={size} onChange={onChange} />;\n};\n\nconst BrushColor = () => {\n  const dispatch = useDispatch();\n  const color = useSelector((state: Editor) => {\n    return state.ui.brush.color;\n  });\n\n  if (!color) {\n    return <React.Fragment />;\n  }\n\n  const onChange = color => {\n    dispatch(Actions.Toolbar.action_updateBrushColor(color));\n  };\n\n  return <FieldsetColor onChange={onChange} value={color} />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Editor, EditorMode } from \"../editorObjects/Editor\";\nimport { EditorModes } from \"./Toolbar/EditorModes\";\nimport { AddLineMode } from \"./Line/AddLineMode\";\nimport { EditorChangeState } from \"./Toolbar/EditorChangeState\";\nimport { useSelector, useStore, useDispatch } from \"react-redux\";\nimport { MouseSelectionBeads } from \"./Bead/MouseSelectionBeads\";\nimport { MouseSelectionLines } from \"./Line/MouseSelectionLines\";\nimport { DisplayBeads } from \"./Bead/DisplayBeads\";\nimport { DisplayLines } from \"./Line/DisplayLines\";\nimport { GroupSelectionPlaceholder } from \"./operations/GroupSelectionPlaceholder\";\nimport { PickBeadColor } from \"./Toolbar/PickColor\";\nimport { ChangeLinePosition } from \"./Toolbar/ChangeLinePosition\";\nimport { PickBeadType } from \"./Toolbar/PickBeadType\";\nimport { ChangeBeadRotate } from \"./Toolbar/ChangeBeadRotate\";\nimport { LineInspector } from \"./Toolbar/LineInspector\";\nimport { Actions } from \"../store\";\nimport { EditToolbar } from \"./Toolbar/EditToolbar\";\nimport { ToolbarEditLines } from \"./Toolbar/Modes/ToolbarEditLines\";\nimport { ToolbarEditBeads } from \"./Toolbar/Modes/ToolbarEditBeads\";\nimport { ToolbarAddLine } from \"./Toolbar/Modes/ToolbarAddLine\";\nimport { ToolbarIdle } from \"./Toolbar/Modes/ToolbarIdle\";\nimport { DisplayGridLines } from \"./operations/DisplayGridLines\";\nimport { TopbarMain } from \"./Topbar/TopbarMain\";\nimport { TopbarSecoundary } from \"./Topbar/TopbarSecoundary\";\nimport { Brush } from \"./operations/Brush\";\nimport { ToolbarPaint } from \"./Toolbar/Modes/ToolbarPaint\";\n\nexport const EditorScene = () => {\n  const editorMode = useSelector((state: Editor) => {\n    return state.mode;\n  });\n  const store = useStore();\n  const state = store.getState();\n  console.log(\"EditorRerender: \", state);\n\n  // @TODO: Dodac funkcje ktora zostaje uruchomiona po rozpoczeciu aplikajci\n  // const dispatch = useDispatch();\n  // const [firstPass, setFirstPass] = useState(false);\n  // useEffect(() => {\n  //   if (process.env.NODE_ENV && process.env.NODE_ENV === \"development\") {\n  //     if (firstPass === false) {\n  //       dispatch(Actions.Persist.action_readSavedCanvas());\n  //       // dispatch(\n  //       //   Actions.ChangeEditorMode.action_onChangeEditorMode(\n  //       //     EditorMode.EditLines\n  //       //   )\n  //       // );\n  //       // dispatch(Actions.Draggable.action_onClickLastestLine());\n  //       setFirstPass(true);\n  //     }\n  //   }\n  // });\n\n  if (!state) {\n    return <div>Error in app</div>;\n  }\n\n  return (\n    <div className=\"scene\">\n      <div className=\"topbar-wrapper\">\n        <TopbarMain />\n        <TopbarSecoundary />\n      </div>\n\n      <div className=\"actions-wrapper\">\n        <EditorModes editorMode={editorMode} />\n      </div>\n\n      <div className={\"scene-wrapper\"}>\n        <AddLineMode isActive={editorMode === EditorMode.AddLine} />\n\n        <MouseSelectionLines isVisible={editorMode === EditorMode.EditLines} />\n\n        <MouseSelectionBeads isVisible={editorMode === EditorMode.EditBeads} />\n\n        <DisplayBeads mode={editorMode} />\n\n        <DisplayLines mode={editorMode} />\n\n        <DisplayGridLines isVisible={editorMode === EditorMode.EditLines} />\n\n        <GroupSelectionPlaceholder mode={editorMode} />\n\n        <Brush isVisible={editorMode === EditorMode.Paint} />\n      </div>\n\n      <div className={\"toolbar-wrapper\"}>\n        <ToolbarEditLines isVisible={editorMode === EditorMode.EditLines} />\n        <ToolbarEditBeads isVisible={editorMode === EditorMode.EditBeads} />\n        <ToolbarAddLine isVisible={editorMode === EditorMode.AddLine} />\n        <ToolbarIdle isVisible={editorMode === EditorMode.Idle} />\n        <ToolbarPaint isVisible={editorMode === EditorMode.Paint} />\n\n        {/* <ChangeLinePosition mode={editorMode} />\n\n        <PickBeadType mode={editorMode} />\n        <ChangeBeadRotate mode={editorMode} />\n        <PickBeadColor mode={editorMode} />\n        <LineInspector mode={editorMode} />\n\n        <EditToolbar mode={editorMode} /> */}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"bulma/css/bulma.css\";\nimport \"./App.css\";\nimport { EditorScene } from \"./components/Editor\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { store} from \"./store\";\n\nconst App: React.FC = () => {\n  const rootStore = createStore(\n    store,\n    // \"__REDUX_DEVTOOLS_EXTENSION__\" in window &&\n    //   (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n  );\n  return (\n    <div className=\"App\">\n      <Provider store={rootStore}>\n        <EditorScene />\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n\n// \"homepage\": \"https://rpcal.github.io/coralinio-preview/build/\",","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as Sentry from '@sentry/browser';\n\nSentry.init({dsn: \"https://94d8408ba8ab4a369c83de035643afa2@sentry.io/1807713\"});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}